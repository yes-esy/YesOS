
E:/OS/MyOs/YesOS_code/code/build/source/shell/shell.elf:     file format elf32-i386
E:/OS/MyOs/YesOS_code/code/build/source/shell/shell.elf
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x81000ada

Program Header:
    LOAD off    0x00001000 vaddr 0x81000000 paddr 0x81000000 align 2**12
         filesz 0x00009650 memsz 0x00009c00 flags rwx

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000852a  81000000  81000000  00001000  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .rodata       0000071d  81008540  81008540  00009540  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .data         000009f0  81008c60  81008c60  00009c60  2**5
                  CONTENTS, ALLOC, LOAD, DATA
  3 .bss          000005a0  81009660  81009660  0000a650  2**5
                  ALLOC
  4 .debug_info   0002a84a  00000000  00000000  0000a650  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000975d  00000000  00000000  00034e9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000988  00000000  00000000  0003e5f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_ranges 00000030  00000000  00000000  0003ef80  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005e8d  00000000  00000000  0003efb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000017d6  00000000  00000000  00044e3d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000023  00000000  00000000  00046613  2**0
                  CONTENTS, READONLY
 11 .debug_frame  00001ea4  00000000  00000000  00046638  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line_str 00001422  00000000  00000000  000484dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_rnglists 0000004e  00000000  00000000  000498fe  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
81000000 l    d  .text	00000000 .text
81008540 l    d  .rodata	00000000 .rodata
81008c60 l    d  .data	00000000 .data
81009660 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    df *ABS*	00000000 main.c
81009660 l     O .bss	0000040c cli
81008c60 l     O .data	00000004 promot
81000000 l     F .text	00000033 show_promot
81000033 l     F .text	00000042 do_help
81000075 l     F .text	00000037 do_clear
810000ac l     F .text	000001a0 do_echo
8100024c l     F .text	00000010 do_exit
8100025c l     F .text	0000029c do_less
810004f8 l     F .text	000000aa do_ls
810005a2 l     F .text	00000107 do_cp
810006a9 l     F .text	00000078 do_remove
81008780 l     O .rodata	00000060 cmd_list
81000721 l     F .text	00000048 cli_init
81000769 l     F .text	00000044 find_builtin
810007ad l     F .text	00000042 run_builtin
810007ef l     F .text	0000006e find_exec_path
81009a80 l     O .bss	000000ff path.3902
8100085d l     F .text	000000b2 run_exec_file
00000000 l    df *ABS*	00000000 cstart.c
00000000 l    df *ABS*	00000000 lib_syscall.c
81000b28 l     F .text	0000004c sys_call
00000000 l    df *ABS*	00000000 atoi.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 fgetc.c
00000000 l    df *ABS*	00000000 fgets.c
00000000 l    df *ABS*	00000000 findfp.c
810015cf l     F .text	000000ad std
8100167c l     F .text	0000001b stdin_init
81001697 l     F .text	0000001b stdout_init
810016b2 l     F .text	0000001b stderr_init
81009b80 l     O .bss	00000004 __sfp_recursive_mutex
81009b84 l     O .bss	00000004 __sinit_recursive_mutex
81001975 l     F .text	0000000a __fp_lock
8100197f l     F .text	0000000a __fp_unlock
00000000 l    df *ABS*	00000000 fopen.c
00000000 l    df *ABS*	00000000 fprintf.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fseek.c
00000000 l    df *ABS*	00000000 fseeko.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 fwrite.c
00000000 l    df *ABS*	00000000 getopt.c
81009b90 l     O .bss	00000004 optwhere
81009b94 l     O .bss	00000004 permute_from
81009b98 l     O .bss	00000004 num_nonopts
81002f54 l     F .text	0000007b reverse_argv_elements
81002fcf l     F .text	00000036 permute
81003005 l     F .text	00000031 is_option
81003036 l     F .text	00000059 read_globals
8100308f l     F .text	00000052 write_globals
810030e1 l     F .text	00000b15 getopt_internal
00000000 l    df *ABS*	00000000 impure.c
81008c80 l     O .data	00000424 impure_data
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
81003efb l     F .text	00000293 malloc_extend_top
00000000 l    df *ABS*	00000000 lib_a-memchr.o
81004a3d l       .text	00000000 L20
810049f4 l       .text	00000000 L5
81004a3a l       .text	00000000 L15
81004a00 l       .text	00000000 L8
81004a21 l       .text	00000000 L9
81004a30 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 lib_a-memcmp.o
81004a8f l       .text	00000000 L4
81004a81 l       .text	00000000 BYTECMP
81004a7c l       .text	00000000 L5
81004a83 l       .text	00000000 L3
00000000 l    df *ABS*	00000000 mlock.c
81009be8 l     O .bss	00000004 __malloc_recursive_mutex
00000000 l    df *ABS*	00000000 nano-vfprintf.c
81004cdd l     F .text	00000066 __sfputc_r
00000000 l    df *ABS*	00000000 nano-vfprintf_i.c
00000000 l    df *ABS*	00000000 openr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 refill.c
8100635b l     F .text	0000002d lflush
00000000 l    df *ABS*	00000000 rget.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 setvbuf.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 lib_a-strchr.o
81006acb l       .text	00000000 L25
81006a72 l       .text	00000000 L5
81006abe l       .text	00000000 L14
81006ac4 l       .text	00000000 L19
81006a83 l       .text	00000000 L10
81006ab0 l       .text	00000000 L9
81006ab3 l       .text	00000000 L15
81006afe l       .text	00000000 L26
81006b01 l       .text	00000000 L27
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 lib_a-strlen.o
81006c06 l       .text	00000000 L5
81006c3e l       .text	00000000 L15
81006c10 l       .text	00000000 L10
00000000 l    df *ABS*	00000000 strlwr.c
00000000 l    df *ABS*	00000000 strtok.c
00000000 l    df *ABS*	00000000 strtok_r.c
00000000 l    df *ABS*	00000000 strtol.c
81006da4 l     F .text	0000000a __locale_ctype_ptr_l
81006dae l     F .text	0000000a __get_global_locale
81006db8 l     F .text	0000000a __get_current_locale
81006dc2 l     F .text	000001d2 _strtol_l
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 __call_atexit.c
81009bf0 l     O .bss	00000004 __atexit_recursive_mutex
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 flags.c
00000000 l    df *ABS*	00000000 fputc.c
00000000 l    df *ABS*	00000000 fputwc.c
81007588 l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 getenv.c
00000000 l    df *ABS*	00000000 getenv_r.c
810094d0 l     O .data	00000004 p_environ
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
810078c7 l     F .text	0000000a __get_global_locale
810078d1 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
810079b3 l     F .text	0000000a __get_global_locale
810079bd l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 nano-vfprintf.c
00000000 l    df *ABS*	00000000 putc.c
8100816c l     F .text	00000066 __sputc_r
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strncmp.c
00000000 l    df *ABS*	00000000 wcrtomb.c
81008399 l     F .text	0000000a __get_global_locale
810083a3 l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 wctomb_r.c
810084a3 l     F .text	0000000a __get_global_locale
810084ad l     F .text	0000000a __get_current_locale
00000000 l    df *ABS*	00000000 environ.c
81009bf8 l     O .bss	00000004 initial_env
00000000 l    df *ABS*	00000000 envlock.c
81009bfc l     O .bss	00000004 __env_recursive_mutex
81007887 g     F .text	00000040 _isatty_r
810061c4 g     F .text	00000037 cleanup_glue
810057f8 g     F .text	000000d6 _puts_r
8100796d g     F .text	00000046 _lseek_r
81000c2c g     F .text	0000001b yield
81006855 g     F .text	00000055 _siprintf_r
8100743a g     F .text	000000ba __sflags
81000ec1 g     F .text	00000033 ioctl
81006d8a g     F .text	0000001a strtok_r
810057c3 g     F .text	00000035 printf
810083ad g     F .text	00000077 _wcrtomb_r
810069ab g     F .text	0000004a __sseek
810018c4 g     F .text	00000099 __sinit
81007007 g     F .text	00000112 __swbuf_r
810078db g     F .text	0000005f _setlocale_r
810016cd g     F .text	0000006f __sfmoreglue
81004bfb g     F .text	00000006 __malloc_unlock
81006c49 g     F .text	00000058 strlwr
81004ae0 g       .text	00000000 memmove
81003c3d g     F .text	00000049 getopt_long
810018aa g     F .text	0000001a _cleanup
81006cca g     F .text	000000c0 __strtok_r
81007430 g     F .text	0000000a __errno
8100775d g     F .text	00000020 getenv
810028c3 g     F .text	00000043 _fstat_r
81009bec g     O .bss	00000004 errno
810065ec g     F .text	0000001d __srget
81006946 g     F .text	0000000a __seofread
81000bff g     F .text	0000002d execve
81000ba2 g     F .text	0000001b getpid
810015b0 g     F .text	0000001f fgets
81004a98 g       .text	00000000 memcpy
81006649 g     F .text	0000020c setvbuf
81001889 g     F .text	00000021 _cleanup_r
81007e32 g     F .text	0000033a _svfprintf_r
810058ce g     F .text	0000001c puts
81003ec2 g     F .text	0000001c malloc
81005796 g     F .text	0000002d _printf_r
81000d7f g     F .text	00000021 isatty
81009b88 g     O .bss	00000004 optarg
81009ba0 g     O .bss	00000004 __malloc_top_pad
81009660 g       .bss	00000000 __bss_start__
81002906 g     F .text	0000049e __sfvwrite_r
81006609 g     F .text	00000040 _sbrk_r
81008c64 g     O .data	00000004 opterr
81000e4d g     F .text	00000040 readdir
81008270 g     F .text	00000046 _read_r
81000f8d g     F .text	00000107 _fclose_r
8100132f g     F .text	00000039 fflush
81009ba4 g     O .bss	00000004 __malloc_max_sbrked_mem
81001368 g     F .text	00000071 _fgetc_r
81000d2b g     F .text	0000002d lseek
810088e4 g     O .rodata	00000004 _global_impure_ptr
810058ea g     F .text	000008da _realloc_r
81006fb9 g     F .text	00000025 strtol_l
8100769e g     F .text	00000057 _fputwc_r
81001989 g     F .text	00000024 __fp_lock_all
81006fde g     F .text	00000029 strtol
810023f2 g     F .text	000004b1 _fseeko_r
810061fb g     F .text	00000160 _reclaim_reent
810074f4 g     F .text	00000046 _fputc_r
81000cdd g     F .text	0000002d write
810081d2 g     F .text	0000004b _putc_r
8100964c g     O .data	00000004 environ
81000d58 g     F .text	00000027 fstat
81001aee g     F .text	0000002c fprintf
81003d1b g     F .text	00000027 __getopt_long_only_r
810028a3 g     F .text	00000020 fseeko
81000f2f g     F .text	0000001a _atoi_r
81007a49 g     F .text	000001b7 __ssputs_r
810023d2 g     F .text	00000020 fseek
81004d43 g     F .text	000000a8 __sfputs_r
81009b8c g     O .bss	00000004 optind
8100195d g     F .text	00000006 __sfp_lock_acquire
810049b0 g       .text	00000000 memchr
81006855 g     F .text	00000055 _sprintf_r
81009c00 g       .bss	00000000 __bss_end__
81001e79 g     F .text	000003db _free_r
81000c47 g     F .text	00000021 wait
810089c0 g     O .rodata	00000180 _ctype_b
8100793a g     F .text	00000014 __locale_mb_cur_max
81006589 g     F .text	00000063 __srget_r
810072db g     F .text	00000115 __call_exitprocs
810094cc g     O .data	00000004 __malloc_sbrk_base
81000ada g       .text	00000000 _start
81000cb0 g     F .text	0000002d read
81007c00 g     F .text	00000232 __ssprint_r
81005750 g     F .text	00000046 _open_r
810082b6 g     F .text	000000e3 strncmp
81003cf4 g     F .text	00000027 __getopt_long_r
81009bc0 g     O .bss	00000028 __malloc_current_mallinfo
81000ef4 g     F .text	00000021 unlink
81005796 g     F .text	0000002d _iprintf_r
810073f0 g     F .text	00000040 _close_r
81006ca1 g     F .text	00000029 strtok
81004a45 g       .text	00000000 memcmp
81002e77 g     F .text	000000b8 _fwrite_r
81000be4 g     F .text	0000001b fork
81007180 g     F .text	0000015b __swsetup_r
8100173c g     F .text	0000014d __sfp
810090c0 g     O .data	00000408 __malloc_av_
8100196f g     F .text	00000006 __sinit_lock_release
81006902 g     F .text	00000044 __sread
81001e54 g     F .text	00000025 fread
81004bf5 g     F .text	00000006 __malloc_lock
81001ac5 g     F .text	00000029 _fprintf_r
81000da0 g     F .text	00000021 sbrk
810012d7 g     F .text	00000058 _fflush_r
81000aea g     F .text	0000003e cstart
81001aa6 g     F .text	0000001f fopen
81003bf6 g     F .text	00000047 getopt
81004b6d g       .text	00000000 memset
8100090f g     F .text	000001cb main
81009ba8 g     O .bss	00000004 __malloc_max_total_mem
81007119 g     F .text	00000021 __swbuf
81001bdf g     F .text	00000275 _fread_r
810069f5 g     F .text	00000025 __sclose
81001094 g     F .text	0000001d fclose
81006f94 g     F .text	00000025 _strtol_r
8100777d g     F .text	000000ed _findenv_r
8100418e g     F .text	00000822 _malloc_r
810084db g     F .text	00000043 __ascii_wctomb
81000de2 g     F .text	0000006b opendir
81001ac5 g     F .text	00000029 _fiprintf_r
81008524 g     F .text	00000006 __env_unlock
8100773d g     F .text	00000020 _findenv
81002da4 g     F .text	00000068 _fwalk
81001452 g     F .text	0000015e _fgets_r
810079c7 g     F .text	0000002a _mbtowc_r
8100821d g     F .text	00000053 putc
81003c86 g     F .text	00000049 getopt_long_only
81002254 g     F .text	00000161 _malloc_trim_r
81006b1c g     F .text	000000a5 strcmp
81004deb g     F .text	00000025 vfiprintf
81000dc1 g     F .text	00000021 dup
810057c3 g     F .text	00000035 iprintf
810013d9 g     F .text	00000079 fgetc
810068aa g     F .text	00000058 sprintf
81009bf4 g     O .bss	00000004 _PathLocale
8100713a g     F .text	00000046 _write_r
8100794e g     F .text	0000001f setlocale
81005166 g     F .text	0000019b _printf_common
810090a4 g     O .data	00000004 _impure_ptr
810010b1 g     F .text	00000226 __sflush_r
810023b5 g     F .text	0000001d _fseek_r
81007e32 g     F .text	0000033a _svfiprintf_r
81006388 g     F .text	00000201 __srefill_r
810079f1 g     F .text	00000058 __ascii_mbtowc
810019ad g     F .text	00000024 __fp_unlock_all
8100753a g     F .text	0000004e fputc
81000bbd g     F .text	00000027 print_msg
81008c68 g     O .data	00000004 optopt
81003e2f g     F .text	00000093 __swhatbuf_r
81002f2f g     F .text	00000025 fwrite
810075ee g     F .text	000000b0 __fputwc
81001b1a g     F .text	000000a6 _fputs_r
81006950 g     F .text	0000005b __swrite
810094c8 g     O .data	00000004 __malloc_trim_threshold
81000f49 g     F .text	00000044 exit
81001aee g     F .text	0000002c fiprintf
81004e10 g     F .text	00000356 _vfiprintf_r
81002e0c g     F .text	0000006b _fwalk_reent
81001963 g     F .text	00000006 __sfp_lock_release
810068aa g     F .text	00000058 siprintf
81000f15 g     F .text	0000001a atoi
81008b40 g     O .rodata	00000101 _ctype_
81003ccf g     F .text	00000025 __getopt_r
810019d1 g     F .text	000000d5 _fopen_r
81000c68 g     F .text	00000021 _exit
81003d42 g     F .text	000000ed __smakebuf_r
81006bd0 g       .text	00000000 strlen
81005301 g     F .text	0000044f _printf_i
81000c89 g     F .text	00000027 open
81004c01 g     F .text	000000dc __sprint_r
81006a20 g       .text	00000000 strchr
81001bc0 g     F .text	0000001f fputs
81000e8d g     F .text	00000034 closedir
810084b7 g     F .text	00000024 _wctomb_r
8100851e g     F .text	00000006 __env_lock
81004e10 g     F .text	00000356 _vfprintf_r
81000b74 g     F .text	0000002e msleep
81008424 g     F .text	0000007f wcrtomb
81000d0a g     F .text	00000021 close
810094e0 g     O .data	0000016c __global_locale
81004deb g     F .text	00000025 vfprintf
810076f5 g     F .text	00000048 fputwc
81003ede g     F .text	0000001d free
81001969 g     F .text	00000006 __sinit_lock_acquire
8100786a g     F .text	0000001d _getenv_r



Disassembly of section .text:

81000000 <show_promot>:

/**
 * 显示命令行提示符
 */
static void show_promot(void)
{
81000000:	55                   	push   %ebp
81000001:	89 e5                	mov    %esp,%ebp
81000003:	83 ec 08             	sub    $0x8,%esp
    printf("%s", cli.promot);
81000006:	a1 68 9a 00 81       	mov    0x81009a68,%eax
8100000b:	83 ec 08             	sub    $0x8,%esp
8100000e:	50                   	push   %eax
8100000f:	68 46 85 00 81       	push   $0x81008546
81000014:	e8 aa 57 00 00       	call   810057c3 <iprintf>
81000019:	83 c4 10             	add    $0x10,%esp
    fflush(stdout);
8100001c:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000021:	8b 40 08             	mov    0x8(%eax),%eax
81000024:	83 ec 0c             	sub    $0xc,%esp
81000027:	50                   	push   %eax
81000028:	e8 02 13 00 00       	call   8100132f <fflush>
8100002d:	83 c4 10             	add    $0x10,%esp
}
81000030:	90                   	nop
81000031:	c9                   	leave  
81000032:	c3                   	ret    

81000033 <do_help>:

/**
 * help命令
 */
static int do_help(int argc, char **argv)
{
81000033:	55                   	push   %ebp
81000034:	89 e5                	mov    %esp,%ebp
81000036:	83 ec 18             	sub    $0x18,%esp
    const cli_cmd_t *start = cli.cmd_start;
81000039:	a1 60 9a 00 81       	mov    0x81009a60,%eax
8100003e:	89 45 f4             	mov    %eax,-0xc(%ebp)

    // 循环打印名称及用法
    while (start < cli.cmd_end)
81000041:	eb 21                	jmp    81000064 <do_help+0x31>
    {
        printf("%s %s\n", start->name, start->useage);
81000043:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000046:	8b 50 04             	mov    0x4(%eax),%edx
81000049:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100004c:	8b 00                	mov    (%eax),%eax
8100004e:	83 ec 04             	sub    $0x4,%esp
81000051:	52                   	push   %edx
81000052:	50                   	push   %eax
81000053:	68 49 85 00 81       	push   $0x81008549
81000058:	e8 66 57 00 00       	call   810057c3 <iprintf>
8100005d:	83 c4 10             	add    $0x10,%esp
        start++;
81000060:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
    while (start < cli.cmd_end)
81000064:	a1 64 9a 00 81       	mov    0x81009a64,%eax
81000069:	39 45 f4             	cmp    %eax,-0xc(%ebp)
8100006c:	72 d5                	jb     81000043 <do_help+0x10>
    }
    return 0;
8100006e:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000073:	c9                   	leave  
81000074:	c3                   	ret    

81000075 <do_clear>:

/**
 * 清屏命令
 */
static int do_clear(int argc, char **argv)
{
81000075:	55                   	push   %ebp
81000076:	89 e5                	mov    %esp,%ebp
81000078:	83 ec 08             	sub    $0x8,%esp
    printf("%s", ESC_CLEAR_SCREEN);
8100007b:	83 ec 08             	sub    $0x8,%esp
8100007e:	68 50 85 00 81       	push   $0x81008550
81000083:	68 46 85 00 81       	push   $0x81008546
81000088:	e8 36 57 00 00       	call   810057c3 <iprintf>
8100008d:	83 c4 10             	add    $0x10,%esp
    printf("%s", ESC_MOVE_CURSOR(0, 0));
81000090:	83 ec 08             	sub    $0x8,%esp
81000093:	68 55 85 00 81       	push   $0x81008555
81000098:	68 46 85 00 81       	push   $0x81008546
8100009d:	e8 21 57 00 00       	call   810057c3 <iprintf>
810000a2:	83 c4 10             	add    $0x10,%esp
    return 0;
810000a5:	b8 00 00 00 00       	mov    $0x0,%eax
}
810000aa:	c9                   	leave  
810000ab:	c3                   	ret    

810000ac <do_echo>:

/**
 * 回显命令
 */
static int do_echo(int argc, char **argv)
{
810000ac:	55                   	push   %ebp
810000ad:	89 e5                	mov    %esp,%ebp
810000af:	81 ec 98 00 00 00    	sub    $0x98,%esp
    // 只有一个参数，需要先手动输入，再输出
    if (argc == 1)
810000b5:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810000b9:	75 40                	jne    810000fb <do_echo+0x4f>
    {
        char msg_buf[128];

        fgets(msg_buf, sizeof(msg_buf), stdin);
810000bb:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810000c0:	8b 40 04             	mov    0x4(%eax),%eax
810000c3:	83 ec 04             	sub    $0x4,%esp
810000c6:	50                   	push   %eax
810000c7:	68 80 00 00 00       	push   $0x80
810000cc:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000d2:	50                   	push   %eax
810000d3:	e8 d8 14 00 00       	call   810015b0 <fgets>
810000d8:	83 c4 10             	add    $0x10,%esp
        msg_buf[sizeof(msg_buf) - 1] = '\0';
810000db:	c6 45 e7 00          	movb   $0x0,-0x19(%ebp)
        puts(msg_buf);
810000df:	83 ec 0c             	sub    $0xc,%esp
810000e2:	8d 85 68 ff ff ff    	lea    -0x98(%ebp),%eax
810000e8:	50                   	push   %eax
810000e9:	e8 e0 57 00 00       	call   810058ce <puts>
810000ee:	83 c4 10             	add    $0x10,%esp
        return 0;
810000f1:	b8 00 00 00 00       	mov    $0x0,%eax
810000f6:	e9 4f 01 00 00       	jmp    8100024a <do_echo+0x19e>
    }

    // https://www.cnblogs.com/yinghao-liu/p/7123622.html
    // optind是下一个要处理的元素在argv中的索引
    // 当没有选项时，变为argv第一个不是选项元素的索引。
    int count = 1; // 缺省只打印一次
810000fb:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
    int ch;
    while ((ch = getopt(argc, argv, "n:h")) != -1)
81000102:	e9 9e 00 00 00       	jmp    810001a5 <do_echo+0xf9>
    {
        switch (ch)
81000107:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100010a:	83 f8 68             	cmp    $0x68,%eax
8100010d:	74 0f                	je     8100011e <do_echo+0x72>
8100010f:	83 f8 6e             	cmp    $0x6e,%eax
81000112:	74 3e                	je     81000152 <do_echo+0xa6>
81000114:	83 f8 3f             	cmp    $0x3f,%eax
81000117:	74 4f                	je     81000168 <do_echo+0xbc>
81000119:	e9 87 00 00 00       	jmp    810001a5 <do_echo+0xf9>
        {
        case 'h':
            puts("echo echo any message");
8100011e:	83 ec 0c             	sub    $0xc,%esp
81000121:	68 5c 85 00 81       	push   $0x8100855c
81000126:	e8 a3 57 00 00       	call   810058ce <puts>
8100012b:	83 c4 10             	add    $0x10,%esp
            puts("Usage: echo [-n count] msg");
8100012e:	83 ec 0c             	sub    $0xc,%esp
81000131:	68 72 85 00 81       	push   $0x81008572
81000136:	e8 93 57 00 00       	call   810058ce <puts>
8100013b:	83 c4 10             	add    $0x10,%esp
            optind = 1; // getopt需要多次调用，需要重置
8100013e:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000145:	00 00 00 
            return 0;
81000148:	b8 00 00 00 00       	mov    $0x0,%eax
8100014d:	e9 f8 00 00 00       	jmp    8100024a <do_echo+0x19e>
        case 'n':
            count = atoi(optarg);
81000152:	a1 88 9b 00 81       	mov    0x81009b88,%eax
81000157:	83 ec 0c             	sub    $0xc,%esp
8100015a:	50                   	push   %eax
8100015b:	e8 b5 0d 00 00       	call   81000f15 <atoi>
81000160:	83 c4 10             	add    $0x10,%esp
81000163:	89 45 f4             	mov    %eax,-0xc(%ebp)
            break;
81000166:	eb 3d                	jmp    810001a5 <do_echo+0xf9>
        case '?':
            if (optarg)
81000168:	a1 88 9b 00 81       	mov    0x81009b88,%eax
8100016d:	85 c0                	test   %eax,%eax
8100016f:	74 20                	je     81000191 <do_echo+0xe5>
            {
                fprintf(stderr, "Unknown option: -%s\n", optarg);
81000171:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
81000177:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100017c:	8b 40 0c             	mov    0xc(%eax),%eax
8100017f:	83 ec 04             	sub    $0x4,%esp
81000182:	52                   	push   %edx
81000183:	68 8d 85 00 81       	push   $0x8100858d
81000188:	50                   	push   %eax
81000189:	e8 60 19 00 00       	call   81001aee <fiprintf>
8100018e:	83 c4 10             	add    $0x10,%esp
            }
            optind = 1; // getopt需要多次调用，需要重置
81000191:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000198:	00 00 00 
            return -1;
8100019b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810001a0:	e9 a5 00 00 00       	jmp    8100024a <do_echo+0x19e>
    while ((ch = getopt(argc, argv, "n:h")) != -1)
810001a5:	83 ec 04             	sub    $0x4,%esp
810001a8:	68 a2 85 00 81       	push   $0x810085a2
810001ad:	ff 75 0c             	pushl  0xc(%ebp)
810001b0:	ff 75 08             	pushl  0x8(%ebp)
810001b3:	e8 3e 3a 00 00       	call   81003bf6 <getopt>
810001b8:	83 c4 10             	add    $0x10,%esp
810001bb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810001be:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
810001c2:	0f 85 3f ff ff ff    	jne    81000107 <do_echo+0x5b>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1)
810001c8:	8b 45 08             	mov    0x8(%ebp),%eax
810001cb:	8d 50 ff             	lea    -0x1(%eax),%edx
810001ce:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
810001d3:	39 c2                	cmp    %eax,%edx
810001d5:	7d 2b                	jge    81000202 <do_echo+0x156>
    {
        fprintf(stderr, "Message is empty \n");
810001d7:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810001dc:	8b 40 0c             	mov    0xc(%eax),%eax
810001df:	50                   	push   %eax
810001e0:	6a 12                	push   $0x12
810001e2:	6a 01                	push   $0x1
810001e4:	68 a6 85 00 81       	push   $0x810085a6
810001e9:	e8 41 2d 00 00       	call   81002f2f <fwrite>
810001ee:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
810001f1:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810001f8:	00 00 00 
        return -1;
810001fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000200:	eb 48                	jmp    8100024a <do_echo+0x19e>
    }

    // 循环打印消息
    char *msg = argv[optind];
81000202:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
81000207:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100020e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000211:	01 d0                	add    %edx,%eax
81000213:	8b 00                	mov    (%eax),%eax
81000215:	89 45 e8             	mov    %eax,-0x18(%ebp)
    for (int i = 0; i < count; i++)
81000218:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100021f:	eb 12                	jmp    81000233 <do_echo+0x187>
    {
        puts(msg);
81000221:	83 ec 0c             	sub    $0xc,%esp
81000224:	ff 75 e8             	pushl  -0x18(%ebp)
81000227:	e8 a2 56 00 00       	call   810058ce <puts>
8100022c:	83 c4 10             	add    $0x10,%esp
    for (int i = 0; i < count; i++)
8100022f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81000233:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000236:	3b 45 f4             	cmp    -0xc(%ebp),%eax
81000239:	7c e6                	jl     81000221 <do_echo+0x175>
    }
    optind = 1; // getopt需要多次调用，需要重置
8100023b:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
81000242:	00 00 00 
    return 0;
81000245:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100024a:	c9                   	leave  
8100024b:	c3                   	ret    

8100024c <do_exit>:

/**
 * 程序退出命令
 */
static int do_exit(int argc, char **argv)
{
8100024c:	55                   	push   %ebp
8100024d:	89 e5                	mov    %esp,%ebp
8100024f:	83 ec 08             	sub    $0x8,%esp
    exit(0);
81000252:	83 ec 0c             	sub    $0xc,%esp
81000255:	6a 00                	push   $0x0
81000257:	e8 ed 0c 00 00       	call   81000f49 <exit>

8100025c <do_less>:

/**
 * @brief 列出文本文件内容
 */
static int do_less(int argc, char **argv)
{
8100025c:	55                   	push   %ebp
8100025d:	89 e5                	mov    %esp,%ebp
8100025f:	83 ec 28             	sub    $0x28,%esp
    int line_mode = 0;
81000262:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)

    int ch;
    while ((ch = getopt(argc, argv, "lh")) != -1)
81000269:	e9 8c 00 00 00       	jmp    810002fa <do_less+0x9e>
    {
        switch (ch)
8100026e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000271:	83 f8 68             	cmp    $0x68,%eax
81000274:	74 0c                	je     81000282 <do_less+0x26>
81000276:	83 f8 6c             	cmp    $0x6c,%eax
81000279:	74 39                	je     810002b4 <do_less+0x58>
8100027b:	83 f8 3f             	cmp    $0x3f,%eax
8100027e:	74 3d                	je     810002bd <do_less+0x61>
81000280:	eb 78                	jmp    810002fa <do_less+0x9e>
        {
        case 'h':
            puts("show file content");
81000282:	83 ec 0c             	sub    $0xc,%esp
81000285:	68 b9 85 00 81       	push   $0x810085b9
8100028a:	e8 3f 56 00 00       	call   810058ce <puts>
8100028f:	83 c4 10             	add    $0x10,%esp
            puts("less [-l] file");
81000292:	83 ec 0c             	sub    $0xc,%esp
81000295:	68 cb 85 00 81       	push   $0x810085cb
8100029a:	e8 2f 56 00 00       	call   810058ce <puts>
8100029f:	83 c4 10             	add    $0x10,%esp
            puts("-l show file line by line.");
810002a2:	83 ec 0c             	sub    $0xc,%esp
810002a5:	68 da 85 00 81       	push   $0x810085da
810002aa:	e8 1f 56 00 00       	call   810058ce <puts>
810002af:	83 c4 10             	add    $0x10,%esp
            break;
810002b2:	eb 46                	jmp    810002fa <do_less+0x9e>
        case 'l':
            line_mode = 1;
810002b4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
            break;
810002bb:	eb 3d                	jmp    810002fa <do_less+0x9e>
        case '?':
            if (optarg)
810002bd:	a1 88 9b 00 81       	mov    0x81009b88,%eax
810002c2:	85 c0                	test   %eax,%eax
810002c4:	74 20                	je     810002e6 <do_less+0x8a>
            {
                fprintf(stderr, "Unknown option: -%s\n", optarg);
810002c6:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
810002cc:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810002d1:	8b 40 0c             	mov    0xc(%eax),%eax
810002d4:	83 ec 04             	sub    $0x4,%esp
810002d7:	52                   	push   %edx
810002d8:	68 8d 85 00 81       	push   $0x8100858d
810002dd:	50                   	push   %eax
810002de:	e8 0b 18 00 00       	call   81001aee <fiprintf>
810002e3:	83 c4 10             	add    $0x10,%esp
            }
            optind = 1; // getopt需要多次调用，需要重置
810002e6:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810002ed:	00 00 00 
            return -1;
810002f0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810002f5:	e9 fc 01 00 00       	jmp    810004f6 <do_less+0x29a>
    while ((ch = getopt(argc, argv, "lh")) != -1)
810002fa:	83 ec 04             	sub    $0x4,%esp
810002fd:	68 f5 85 00 81       	push   $0x810085f5
81000302:	ff 75 0c             	pushl  0xc(%ebp)
81000305:	ff 75 08             	pushl  0x8(%ebp)
81000308:	e8 e9 38 00 00       	call   81003bf6 <getopt>
8100030d:	83 c4 10             	add    $0x10,%esp
81000310:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000313:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81000317:	0f 85 51 ff ff ff    	jne    8100026e <do_less+0x12>
        }
    }

    // 索引已经超过了最后一个参数的位置，意味着没有传入要发送的信息
    if (optind > argc - 1)
8100031d:	8b 45 08             	mov    0x8(%ebp),%eax
81000320:	8d 50 ff             	lea    -0x1(%eax),%edx
81000323:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
81000328:	39 c2                	cmp    %eax,%edx
8100032a:	7d 2e                	jge    8100035a <do_less+0xfe>
    {
        fprintf(stderr, "no file\n");
8100032c:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000331:	8b 40 0c             	mov    0xc(%eax),%eax
81000334:	50                   	push   %eax
81000335:	6a 08                	push   $0x8
81000337:	6a 01                	push   $0x1
81000339:	68 f8 85 00 81       	push   $0x810085f8
8100033e:	e8 ec 2b 00 00       	call   81002f2f <fwrite>
81000343:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
81000346:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
8100034d:	00 00 00 
        return -1;
81000350:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81000355:	e9 9c 01 00 00       	jmp    810004f6 <do_less+0x29a>
    }

    FILE *file = fopen(argv[optind], "r");
8100035a:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
8100035f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000366:	8b 45 0c             	mov    0xc(%ebp),%eax
81000369:	01 d0                	add    %edx,%eax
8100036b:	8b 00                	mov    (%eax),%eax
8100036d:	83 ec 08             	sub    $0x8,%esp
81000370:	68 01 86 00 81       	push   $0x81008601
81000375:	50                   	push   %eax
81000376:	e8 2b 17 00 00       	call   81001aa6 <fopen>
8100037b:	83 c4 10             	add    $0x10,%esp
8100037e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    if (file == NULL)
81000381:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000385:	75 41                	jne    810003c8 <do_less+0x16c>
    {
        fprintf(stderr, "open file failed. %s", argv[optind]);
81000387:	a1 8c 9b 00 81       	mov    0x81009b8c,%eax
8100038c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81000393:	8b 45 0c             	mov    0xc(%ebp),%eax
81000396:	01 d0                	add    %edx,%eax
81000398:	8b 10                	mov    (%eax),%edx
8100039a:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100039f:	8b 40 0c             	mov    0xc(%eax),%eax
810003a2:	83 ec 04             	sub    $0x4,%esp
810003a5:	52                   	push   %edx
810003a6:	68 03 86 00 81       	push   $0x81008603
810003ab:	50                   	push   %eax
810003ac:	e8 3d 17 00 00       	call   81001aee <fiprintf>
810003b1:	83 c4 10             	add    $0x10,%esp
        optind = 1; // getopt需要多次调用，需要重置
810003b4:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810003bb:	00 00 00 
        return -1;
810003be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810003c3:	e9 2e 01 00 00       	jmp    810004f6 <do_less+0x29a>
    }

    char *buf = (char *)malloc(255);
810003c8:	83 ec 0c             	sub    $0xc,%esp
810003cb:	68 ff 00 00 00       	push   $0xff
810003d0:	e8 ed 3a 00 00       	call   81003ec2 <malloc>
810003d5:	83 c4 10             	add    $0x10,%esp
810003d8:	89 45 e8             	mov    %eax,-0x18(%ebp)

    if (line_mode == 0)
810003db:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810003df:	75 38                	jne    81000419 <do_less+0x1bd>
    {
        while (fgets(buf, 255, file) != NULL)
810003e1:	eb 17                	jmp    810003fa <do_less+0x19e>
        {
            fputs(buf, stdout);
810003e3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810003e8:	8b 40 08             	mov    0x8(%eax),%eax
810003eb:	83 ec 08             	sub    $0x8,%esp
810003ee:	50                   	push   %eax
810003ef:	ff 75 e8             	pushl  -0x18(%ebp)
810003f2:	e8 c9 17 00 00       	call   81001bc0 <fputs>
810003f7:	83 c4 10             	add    $0x10,%esp
        while (fgets(buf, 255, file) != NULL)
810003fa:	83 ec 04             	sub    $0x4,%esp
810003fd:	ff 75 ec             	pushl  -0x14(%ebp)
81000400:	68 ff 00 00 00       	push   $0xff
81000405:	ff 75 e8             	pushl  -0x18(%ebp)
81000408:	e8 a3 11 00 00       	call   810015b0 <fgets>
8100040d:	83 c4 10             	add    $0x10,%esp
81000410:	85 c0                	test   %eax,%eax
81000412:	75 cf                	jne    810003e3 <do_less+0x187>
81000414:	e9 b2 00 00 00       	jmp    810004cb <do_less+0x26f>
        }
    }
    else
    {
        // 不使用缓存，这样能直接立即读取到输入而不用等回车
        setvbuf(stdin, NULL, _IONBF, 0);
81000419:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100041e:	8b 40 04             	mov    0x4(%eax),%eax
81000421:	6a 00                	push   $0x0
81000423:	6a 02                	push   $0x2
81000425:	6a 00                	push   $0x0
81000427:	50                   	push   %eax
81000428:	e8 1c 62 00 00       	call   81006649 <setvbuf>
8100042d:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 0, 0);
81000430:	6a 00                	push   $0x0
81000432:	6a 00                	push   $0x0
81000434:	6a 01                	push   $0x1
81000436:	6a 00                	push   $0x0
81000438:	e8 84 0a 00 00       	call   81000ec1 <ioctl>
8100043d:	83 c4 10             	add    $0x10,%esp
        while (1)
        {
            char *b = fgets(buf, 255, file);
81000440:	83 ec 04             	sub    $0x4,%esp
81000443:	ff 75 ec             	pushl  -0x14(%ebp)
81000446:	68 ff 00 00 00       	push   $0xff
8100044b:	ff 75 e8             	pushl  -0x18(%ebp)
8100044e:	e8 5d 11 00 00       	call   810015b0 <fgets>
81000453:	83 c4 10             	add    $0x10,%esp
81000456:	89 45 e4             	mov    %eax,-0x1c(%ebp)
            if (b == NULL)
81000459:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100045d:	74 3e                	je     8100049d <do_less+0x241>
            {
                break;
            }
            fputs(buf, stdout);
8100045f:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000464:	8b 40 08             	mov    0x8(%eax),%eax
81000467:	83 ec 08             	sub    $0x8,%esp
8100046a:	50                   	push   %eax
8100046b:	ff 75 e8             	pushl  -0x18(%ebp)
8100046e:	e8 4d 17 00 00       	call   81001bc0 <fputs>
81000473:	83 c4 10             	add    $0x10,%esp

            int ch;
            while ((ch = fgetc(stdin)) != 'n')
81000476:	eb 06                	jmp    8100047e <do_less+0x222>
            {
                if (ch == 'q')
81000478:	83 7d e0 71          	cmpl   $0x71,-0x20(%ebp)
8100047c:	74 22                	je     810004a0 <do_less+0x244>
            while ((ch = fgetc(stdin)) != 'n')
8100047e:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000483:	8b 40 04             	mov    0x4(%eax),%eax
81000486:	83 ec 0c             	sub    $0xc,%esp
81000489:	50                   	push   %eax
8100048a:	e8 4a 0f 00 00       	call   810013d9 <fgetc>
8100048f:	83 c4 10             	add    $0x10,%esp
81000492:	89 45 e0             	mov    %eax,-0x20(%ebp)
81000495:	83 7d e0 6e          	cmpl   $0x6e,-0x20(%ebp)
81000499:	75 dd                	jne    81000478 <do_less+0x21c>
        {
8100049b:	eb a3                	jmp    81000440 <do_less+0x1e4>
                break;
8100049d:	90                   	nop
8100049e:	eb 01                	jmp    810004a1 <do_less+0x245>
                {
                    goto less_quit;
810004a0:	90                   	nop
                }
            }
        }
    less_quit:
        // 恢复为行缓存
        setvbuf(stdin, NULL, _IOLBF, BUFSIZ);
810004a1:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810004a6:	8b 40 04             	mov    0x4(%eax),%eax
810004a9:	68 00 04 00 00       	push   $0x400
810004ae:	6a 01                	push   $0x1
810004b0:	6a 00                	push   $0x0
810004b2:	50                   	push   %eax
810004b3:	e8 91 61 00 00       	call   81006649 <setvbuf>
810004b8:	83 c4 10             	add    $0x10,%esp
        ioctl(0, TTY_CMD_ECHO, 1, 0);
810004bb:	6a 00                	push   $0x0
810004bd:	6a 01                	push   $0x1
810004bf:	6a 01                	push   $0x1
810004c1:	6a 00                	push   $0x0
810004c3:	e8 f9 09 00 00       	call   81000ec1 <ioctl>
810004c8:	83 c4 10             	add    $0x10,%esp
    }
    free(buf);
810004cb:	83 ec 0c             	sub    $0xc,%esp
810004ce:	ff 75 e8             	pushl  -0x18(%ebp)
810004d1:	e8 08 3a 00 00       	call   81003ede <free>
810004d6:	83 c4 10             	add    $0x10,%esp
    fclose(file);
810004d9:	83 ec 0c             	sub    $0xc,%esp
810004dc:	ff 75 ec             	pushl  -0x14(%ebp)
810004df:	e8 b0 0b 00 00       	call   81001094 <fclose>
810004e4:	83 c4 10             	add    $0x10,%esp
    optind = 1; // getopt需要多次调用，需要重置
810004e7:	c7 05 8c 9b 00 81 01 	movl   $0x1,0x81009b8c
810004ee:	00 00 00 
    return 0;
810004f1:	b8 00 00 00 00       	mov    $0x0,%eax
}
810004f6:	c9                   	leave  
810004f7:	c3                   	ret    

810004f8 <do_ls>:

/**
 * @brief 列出目录内容
 */
static int do_ls(int argc, char **argv)
{
810004f8:	55                   	push   %ebp
810004f9:	89 e5                	mov    %esp,%ebp
810004fb:	83 ec 18             	sub    $0x18,%esp
    // 打开目录
    DIR *p_dir = opendir("temp");
810004fe:	83 ec 0c             	sub    $0xc,%esp
81000501:	68 18 86 00 81       	push   $0x81008618
81000506:	e8 d7 08 00 00       	call   81000de2 <opendir>
8100050b:	83 c4 10             	add    $0x10,%esp
8100050e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (p_dir == NULL)
81000511:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000515:	75 5f                	jne    81000576 <do_ls+0x7e>
    {
        printf("open dir failed\n");
81000517:	83 ec 0c             	sub    $0xc,%esp
8100051a:	68 1d 86 00 81       	push   $0x8100861d
8100051f:	e8 aa 53 00 00       	call   810058ce <puts>
81000524:	83 c4 10             	add    $0x10,%esp
        return -1;
81000527:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100052c:	eb 72                	jmp    810005a0 <do_ls+0xa8>

    // 然后进行遍历
    struct dirent *entry;
    while ((entry = readdir(p_dir)) != NULL)
    {
        strlwr(entry->name);
8100052e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000531:	83 c0 08             	add    $0x8,%eax
81000534:	83 ec 0c             	sub    $0xc,%esp
81000537:	50                   	push   %eax
81000538:	e8 0c 67 00 00       	call   81006c49 <strlwr>
8100053d:	83 c4 10             	add    $0x10,%esp
        printf("%c %s %d\n",
81000540:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000543:	8b 80 08 01 00 00    	mov    0x108(%eax),%eax
               entry->type == FILE_DIR ? 'd' : 'f',
               entry->name,
81000549:	8b 55 f0             	mov    -0x10(%ebp),%edx
8100054c:	8d 4a 08             	lea    0x8(%edx),%ecx
               entry->type == FILE_DIR ? 'd' : 'f',
8100054f:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000552:	8b 52 04             	mov    0x4(%edx),%edx
        printf("%c %s %d\n",
81000555:	83 fa 03             	cmp    $0x3,%edx
81000558:	75 07                	jne    81000561 <do_ls+0x69>
8100055a:	ba 64 00 00 00       	mov    $0x64,%edx
8100055f:	eb 05                	jmp    81000566 <do_ls+0x6e>
81000561:	ba 66 00 00 00       	mov    $0x66,%edx
81000566:	50                   	push   %eax
81000567:	51                   	push   %ecx
81000568:	52                   	push   %edx
81000569:	68 2d 86 00 81       	push   $0x8100862d
8100056e:	e8 50 52 00 00       	call   810057c3 <iprintf>
81000573:	83 c4 10             	add    $0x10,%esp
    while ((entry = readdir(p_dir)) != NULL)
81000576:	83 ec 0c             	sub    $0xc,%esp
81000579:	ff 75 f4             	pushl  -0xc(%ebp)
8100057c:	e8 cc 08 00 00       	call   81000e4d <readdir>
81000581:	83 c4 10             	add    $0x10,%esp
81000584:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000587:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100058b:	75 a1                	jne    8100052e <do_ls+0x36>
               entry->size);
    }
    closedir(p_dir);
8100058d:	83 ec 0c             	sub    $0xc,%esp
81000590:	ff 75 f4             	pushl  -0xc(%ebp)
81000593:	e8 f5 08 00 00       	call   81000e8d <closedir>
81000598:	83 c4 10             	add    $0x10,%esp

    return 0;
8100059b:	b8 00 00 00 00       	mov    $0x0,%eax
}
810005a0:	c9                   	leave  
810005a1:	c3                   	ret    

810005a2 <do_cp>:

/**
 * @brief 复制文件命令
 */
static int do_cp(int argc, char **argv)
{
810005a2:	55                   	push   %ebp
810005a3:	89 e5                	mov    %esp,%ebp
810005a5:	83 ec 18             	sub    $0x18,%esp
    if (argc < 3)
810005a8:	83 7d 08 02          	cmpl   $0x2,0x8(%ebp)
810005ac:	7f 1a                	jg     810005c8 <do_cp+0x26>
    {
        puts("no [from] or no [to]");
810005ae:	83 ec 0c             	sub    $0xc,%esp
810005b1:	68 37 86 00 81       	push   $0x81008637
810005b6:	e8 13 53 00 00       	call   810058ce <puts>
810005bb:	83 c4 10             	add    $0x10,%esp
        return -1;
810005be:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810005c3:	e9 df 00 00 00       	jmp    810006a7 <do_cp+0x105>
    }

    FILE *from, *to;
    from = fopen(argv[1], "rb");
810005c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810005cb:	83 c0 04             	add    $0x4,%eax
810005ce:	8b 00                	mov    (%eax),%eax
810005d0:	83 ec 08             	sub    $0x8,%esp
810005d3:	68 4c 86 00 81       	push   $0x8100864c
810005d8:	50                   	push   %eax
810005d9:	e8 c8 14 00 00       	call   81001aa6 <fopen>
810005de:	83 c4 10             	add    $0x10,%esp
810005e1:	89 45 f4             	mov    %eax,-0xc(%ebp)
    to = fopen(argv[2], "wb");
810005e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810005e7:	83 c0 08             	add    $0x8,%eax
810005ea:	8b 00                	mov    (%eax),%eax
810005ec:	83 ec 08             	sub    $0x8,%esp
810005ef:	68 4f 86 00 81       	push   $0x8100864f
810005f4:	50                   	push   %eax
810005f5:	e8 ac 14 00 00       	call   81001aa6 <fopen>
810005fa:	83 c4 10             	add    $0x10,%esp
810005fd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (!from || !to)
81000600:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000604:	74 06                	je     8100060c <do_cp+0x6a>
81000606:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100060a:	75 12                	jne    8100061e <do_cp+0x7c>
    {
        puts("open file failed.");
8100060c:	83 ec 0c             	sub    $0xc,%esp
8100060f:	68 52 86 00 81       	push   $0x81008652
81000614:	e8 b5 52 00 00       	call   810058ce <puts>
81000619:	83 c4 10             	add    $0x10,%esp
        goto ls_failed;
8100061c:	eb 5c                	jmp    8100067a <do_cp+0xd8>
    }

    char *buf = (char *)malloc(255);
8100061e:	83 ec 0c             	sub    $0xc,%esp
81000621:	68 ff 00 00 00       	push   $0xff
81000626:	e8 97 38 00 00       	call   81003ec2 <malloc>
8100062b:	83 c4 10             	add    $0x10,%esp
8100062e:	89 45 ec             	mov    %eax,-0x14(%ebp)
    int size = 0;
81000631:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
    while ((size = fread(buf, 1, 255, from)) > 0)
81000638:	eb 14                	jmp    8100064e <do_cp+0xac>
    {
        fwrite(buf, 1, size, to);
8100063a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100063d:	ff 75 f0             	pushl  -0x10(%ebp)
81000640:	50                   	push   %eax
81000641:	6a 01                	push   $0x1
81000643:	ff 75 ec             	pushl  -0x14(%ebp)
81000646:	e8 e4 28 00 00       	call   81002f2f <fwrite>
8100064b:	83 c4 10             	add    $0x10,%esp
    while ((size = fread(buf, 1, 255, from)) > 0)
8100064e:	ff 75 f4             	pushl  -0xc(%ebp)
81000651:	68 ff 00 00 00       	push   $0xff
81000656:	6a 01                	push   $0x1
81000658:	ff 75 ec             	pushl  -0x14(%ebp)
8100065b:	e8 f4 17 00 00       	call   81001e54 <fread>
81000660:	83 c4 10             	add    $0x10,%esp
81000663:	89 45 e8             	mov    %eax,-0x18(%ebp)
81000666:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
8100066a:	7f ce                	jg     8100063a <do_cp+0x98>
    }
    free(buf);
8100066c:	83 ec 0c             	sub    $0xc,%esp
8100066f:	ff 75 ec             	pushl  -0x14(%ebp)
81000672:	e8 67 38 00 00       	call   81003ede <free>
81000677:	83 c4 10             	add    $0x10,%esp

ls_failed:
    if (from)
8100067a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100067e:	74 0e                	je     8100068e <do_cp+0xec>
    {
        fclose(from);
81000680:	83 ec 0c             	sub    $0xc,%esp
81000683:	ff 75 f4             	pushl  -0xc(%ebp)
81000686:	e8 09 0a 00 00       	call   81001094 <fclose>
8100068b:	83 c4 10             	add    $0x10,%esp
    }
    if (to)
8100068e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000692:	74 0e                	je     810006a2 <do_cp+0x100>
    {
        fclose(to);
81000694:	83 ec 0c             	sub    $0xc,%esp
81000697:	ff 75 f0             	pushl  -0x10(%ebp)
8100069a:	e8 f5 09 00 00       	call   81001094 <fclose>
8100069f:	83 c4 10             	add    $0x10,%esp
    }
    return 0;
810006a2:	b8 00 00 00 00       	mov    $0x0,%eax
}
810006a7:	c9                   	leave  
810006a8:	c3                   	ret    

810006a9 <do_remove>:

/**
 * @brief 删除文件命令
 */
static int do_remove(int argc, char **argv)
{
810006a9:	55                   	push   %ebp
810006aa:	89 e5                	mov    %esp,%ebp
810006ac:	83 ec 18             	sub    $0x18,%esp
    if (argc < 2)
810006af:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
810006b3:	7f 21                	jg     810006d6 <do_remove+0x2d>
    {
        fprintf(stderr, "no file");
810006b5:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810006ba:	8b 40 0c             	mov    0xc(%eax),%eax
810006bd:	50                   	push   %eax
810006be:	6a 07                	push   $0x7
810006c0:	6a 01                	push   $0x1
810006c2:	68 64 86 00 81       	push   $0x81008664
810006c7:	e8 63 28 00 00       	call   81002f2f <fwrite>
810006cc:	83 c4 10             	add    $0x10,%esp
        return -1;
810006cf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810006d4:	eb 49                	jmp    8100071f <do_remove+0x76>
    }

    int err = unlink(argv[1]);
810006d6:	8b 45 0c             	mov    0xc(%ebp),%eax
810006d9:	83 c0 04             	add    $0x4,%eax
810006dc:	8b 00                	mov    (%eax),%eax
810006de:	83 ec 0c             	sub    $0xc,%esp
810006e1:	50                   	push   %eax
810006e2:	e8 0d 08 00 00       	call   81000ef4 <unlink>
810006e7:	83 c4 10             	add    $0x10,%esp
810006ea:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (err < 0)
810006ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810006f1:	79 27                	jns    8100071a <do_remove+0x71>
    {
        fprintf(stderr, "rm file failed: %s", argv[1]);
810006f3:	8b 45 0c             	mov    0xc(%ebp),%eax
810006f6:	83 c0 04             	add    $0x4,%eax
810006f9:	8b 10                	mov    (%eax),%edx
810006fb:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000700:	8b 40 0c             	mov    0xc(%eax),%eax
81000703:	83 ec 04             	sub    $0x4,%esp
81000706:	52                   	push   %edx
81000707:	68 6c 86 00 81       	push   $0x8100866c
8100070c:	50                   	push   %eax
8100070d:	e8 dc 13 00 00       	call   81001aee <fiprintf>
81000712:	83 c4 10             	add    $0x10,%esp
        return err;
81000715:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000718:	eb 05                	jmp    8100071f <do_remove+0x76>
    }

    return 0;
8100071a:	b8 00 00 00 00       	mov    $0x0,%eax
}
8100071f:	c9                   	leave  
81000720:	c3                   	ret    

81000721 <cli_init>:

/**
 * 命令行初始化
 */
static void cli_init(const char *promot, const cli_cmd_t *cmd_list, int cnt)
{
81000721:	55                   	push   %ebp
81000722:	89 e5                	mov    %esp,%ebp
81000724:	83 ec 08             	sub    $0x8,%esp
    cli.promot = promot;
81000727:	8b 45 08             	mov    0x8(%ebp),%eax
8100072a:	a3 68 9a 00 81       	mov    %eax,0x81009a68

    memset(cli.curr_input, 0, CLI_INPUT_SIZE);
8100072f:	83 ec 04             	sub    $0x4,%esp
81000732:	68 00 04 00 00       	push   $0x400
81000737:	6a 00                	push   $0x0
81000739:	68 60 96 00 81       	push   $0x81009660
8100073e:	e8 2a 44 00 00       	call   81004b6d <memset>
81000743:	83 c4 10             	add    $0x10,%esp

    cli.cmd_start = cmd_list;
81000746:	8b 45 0c             	mov    0xc(%ebp),%eax
81000749:	a3 60 9a 00 81       	mov    %eax,0x81009a60
    cli.cmd_end = cmd_list + cnt;
8100074e:	8b 55 10             	mov    0x10(%ebp),%edx
81000751:	89 d0                	mov    %edx,%eax
81000753:	01 c0                	add    %eax,%eax
81000755:	01 d0                	add    %edx,%eax
81000757:	c1 e0 02             	shl    $0x2,%eax
8100075a:	89 c2                	mov    %eax,%edx
8100075c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100075f:	01 d0                	add    %edx,%eax
81000761:	a3 64 9a 00 81       	mov    %eax,0x81009a64
}
81000766:	90                   	nop
81000767:	c9                   	leave  
81000768:	c3                   	ret    

81000769 <find_builtin>:

/**
 * 在内部命令中搜索
 */
static const cli_cmd_t *find_builtin(const char *name)
{
81000769:	55                   	push   %ebp
8100076a:	89 e5                	mov    %esp,%ebp
8100076c:	83 ec 18             	sub    $0x18,%esp
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
8100076f:	a1 60 9a 00 81       	mov    0x81009a60,%eax
81000774:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000777:	eb 23                	jmp    8100079c <find_builtin+0x33>
    {
        if (strcmp(cmd->name, name) != 0)
81000779:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100077c:	8b 00                	mov    (%eax),%eax
8100077e:	83 ec 08             	sub    $0x8,%esp
81000781:	ff 75 08             	pushl  0x8(%ebp)
81000784:	50                   	push   %eax
81000785:	e8 92 63 00 00       	call   81006b1c <strcmp>
8100078a:	83 c4 10             	add    $0x10,%esp
8100078d:	85 c0                	test   %eax,%eax
8100078f:	74 06                	je     81000797 <find_builtin+0x2e>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
81000791:	83 45 f4 0c          	addl   $0xc,-0xc(%ebp)
81000795:	eb 05                	jmp    8100079c <find_builtin+0x33>
        {
            continue;
        }

        return cmd;
81000797:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100079a:	eb 0f                	jmp    810007ab <find_builtin+0x42>
    for (const cli_cmd_t *cmd = cli.cmd_start; cmd < cli.cmd_end; cmd++)
8100079c:	a1 64 9a 00 81       	mov    0x81009a64,%eax
810007a1:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810007a4:	72 d3                	jb     81000779 <find_builtin+0x10>
    }

    return (const cli_cmd_t *)0;
810007a6:	b8 00 00 00 00       	mov    $0x0,%eax
}
810007ab:	c9                   	leave  
810007ac:	c3                   	ret    

810007ad <run_builtin>:

/**
 * 运行内部命令
 */
static void run_builtin(const cli_cmd_t *cmd, int argc, char **argv)
{
810007ad:	55                   	push   %ebp
810007ae:	89 e5                	mov    %esp,%ebp
810007b0:	83 ec 18             	sub    $0x18,%esp
    int ret = cmd->do_func(argc, argv);
810007b3:	8b 45 08             	mov    0x8(%ebp),%eax
810007b6:	8b 40 08             	mov    0x8(%eax),%eax
810007b9:	83 ec 08             	sub    $0x8,%esp
810007bc:	ff 75 10             	pushl  0x10(%ebp)
810007bf:	ff 75 0c             	pushl  0xc(%ebp)
810007c2:	ff d0                	call   *%eax
810007c4:	83 c4 10             	add    $0x10,%esp
810007c7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (ret < 0)
810007ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810007ce:	79 1c                	jns    810007ec <run_builtin+0x3f>
    {
        fprintf(stderr, ESC_COLOR_ERROR "error: %d\n" ESC_COLOR_DEFAULT, ret);
810007d0:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810007d5:	8b 40 0c             	mov    0xc(%eax),%eax
810007d8:	83 ec 04             	sub    $0x4,%esp
810007db:	ff 75 f4             	pushl  -0xc(%ebp)
810007de:	68 e0 87 00 81       	push   $0x810087e0
810007e3:	50                   	push   %eax
810007e4:	e8 05 13 00 00       	call   81001aee <fiprintf>
810007e9:	83 c4 10             	add    $0x10,%esp
    }
}
810007ec:	90                   	nop
810007ed:	c9                   	leave  
810007ee:	c3                   	ret    

810007ef <find_exec_path>:

/**
 * 遍历搜索目录，看看文件是否存在，存在返回文件所在路径
 */
static const char *find_exec_path(const char *file_name)
{
810007ef:	55                   	push   %ebp
810007f0:	89 e5                	mov    %esp,%ebp
810007f2:	83 ec 18             	sub    $0x18,%esp
    static char path[255];

    int fd = open(file_name, 0);
810007f5:	83 ec 08             	sub    $0x8,%esp
810007f8:	6a 00                	push   $0x0
810007fa:	ff 75 08             	pushl  0x8(%ebp)
810007fd:	e8 87 04 00 00       	call   81000c89 <open>
81000802:	83 c4 10             	add    $0x10,%esp
81000805:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (fd < 0)
81000808:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100080c:	79 3a                	jns    81000848 <find_exec_path+0x59>
    {
        sprintf(path, "%s.elf", file_name);
8100080e:	83 ec 04             	sub    $0x4,%esp
81000811:	ff 75 08             	pushl  0x8(%ebp)
81000814:	68 f5 87 00 81       	push   $0x810087f5
81000819:	68 80 9a 00 81       	push   $0x81009a80
8100081e:	e8 87 60 00 00       	call   810068aa <siprintf>
81000823:	83 c4 10             	add    $0x10,%esp
        fd = open(path, 0);
81000826:	83 ec 08             	sub    $0x8,%esp
81000829:	6a 00                	push   $0x0
8100082b:	68 80 9a 00 81       	push   $0x81009a80
81000830:	e8 54 04 00 00       	call   81000c89 <open>
81000835:	83 c4 10             	add    $0x10,%esp
81000838:	89 45 f4             	mov    %eax,-0xc(%ebp)
        if (fd < 0)
8100083b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100083f:	79 07                	jns    81000848 <find_exec_path+0x59>
        {
            return (const char *)0;
81000841:	b8 00 00 00 00       	mov    $0x0,%eax
81000846:	eb 13                	jmp    8100085b <find_exec_path+0x6c>
        }
    }

    close(fd);
81000848:	83 ec 0c             	sub    $0xc,%esp
8100084b:	ff 75 f4             	pushl  -0xc(%ebp)
8100084e:	e8 b7 04 00 00       	call   81000d0a <close>
81000853:	83 c4 10             	add    $0x10,%esp
    return path;
81000856:	b8 80 9a 00 81       	mov    $0x81009a80,%eax
}
8100085b:	c9                   	leave  
8100085c:	c3                   	ret    

8100085d <run_exec_file>:

/**
 * 试图运行当前文件
 */
static void run_exec_file(const char *path, int argc, char **argv)
{
8100085d:	55                   	push   %ebp
8100085e:	89 e5                	mov    %esp,%ebp
81000860:	83 ec 18             	sub    $0x18,%esp
    int pid = fork();
81000863:	e8 7c 03 00 00       	call   81000be4 <fork>
81000868:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (pid < 0)
8100086b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100086f:	79 1e                	jns    8100088f <run_exec_file+0x32>
    {
        fprintf(stderr, "fork failed: %s", path);
81000871:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000876:	8b 40 0c             	mov    0xc(%eax),%eax
81000879:	83 ec 04             	sub    $0x4,%esp
8100087c:	ff 75 08             	pushl  0x8(%ebp)
8100087f:	68 fc 87 00 81       	push   $0x810087fc
81000884:	50                   	push   %eax
81000885:	e8 64 12 00 00       	call   81001aee <fiprintf>
8100088a:	83 c4 10             	add    $0x10,%esp
        // 等待子进程执行完毕
        int status;
        int pid = wait(&status);
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
    }
}
8100088d:	eb 7d                	jmp    8100090c <run_exec_file+0xaf>
    else if (pid == 0)
8100088f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000893:	75 42                	jne    810008d7 <run_exec_file+0x7a>
        int err = execve(path, argv, (char *const *)0);
81000895:	83 ec 04             	sub    $0x4,%esp
81000898:	6a 00                	push   $0x0
8100089a:	ff 75 10             	pushl  0x10(%ebp)
8100089d:	ff 75 08             	pushl  0x8(%ebp)
810008a0:	e8 5a 03 00 00       	call   81000bff <execve>
810008a5:	83 c4 10             	add    $0x10,%esp
810008a8:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (err < 0)
810008ab:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810008af:	79 1c                	jns    810008cd <run_exec_file+0x70>
            fprintf(stderr, "exec failed: %s", path);
810008b1:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810008b6:	8b 40 0c             	mov    0xc(%eax),%eax
810008b9:	83 ec 04             	sub    $0x4,%esp
810008bc:	ff 75 08             	pushl  0x8(%ebp)
810008bf:	68 0c 88 00 81       	push   $0x8100880c
810008c4:	50                   	push   %eax
810008c5:	e8 24 12 00 00       	call   81001aee <fiprintf>
810008ca:	83 c4 10             	add    $0x10,%esp
        exit(-1);
810008cd:	83 ec 0c             	sub    $0xc,%esp
810008d0:	6a ff                	push   $0xffffffff
810008d2:	e8 72 06 00 00       	call   81000f49 <exit>
        int pid = wait(&status);
810008d7:	83 ec 0c             	sub    $0xc,%esp
810008da:	8d 45 e8             	lea    -0x18(%ebp),%eax
810008dd:	50                   	push   %eax
810008de:	e8 64 03 00 00       	call   81000c47 <wait>
810008e3:	83 c4 10             	add    $0x10,%esp
810008e6:	89 45 f0             	mov    %eax,-0x10(%ebp)
        fprintf(stderr, "cmd %s result: %d, pid = %d\n", path, status, pid);
810008e9:	8b 55 e8             	mov    -0x18(%ebp),%edx
810008ec:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810008f1:	8b 40 0c             	mov    0xc(%eax),%eax
810008f4:	83 ec 0c             	sub    $0xc,%esp
810008f7:	ff 75 f0             	pushl  -0x10(%ebp)
810008fa:	52                   	push   %edx
810008fb:	ff 75 08             	pushl  0x8(%ebp)
810008fe:	68 1c 88 00 81       	push   $0x8100881c
81000903:	50                   	push   %eax
81000904:	e8 e5 11 00 00       	call   81001aee <fiprintf>
81000909:	83 c4 20             	add    $0x20,%esp
}
8100090c:	90                   	nop
8100090d:	c9                   	leave  
8100090e:	c3                   	ret    

8100090f <main>:

int main(int argc, char **argv)
{
8100090f:	8d 4c 24 04          	lea    0x4(%esp),%ecx
81000913:	83 e4 f0             	and    $0xfffffff0,%esp
81000916:	ff 71 fc             	pushl  -0x4(%ecx)
81000919:	55                   	push   %ebp
8100091a:	89 e5                	mov    %esp,%ebp
8100091c:	51                   	push   %ecx
8100091d:	83 ec 54             	sub    $0x54,%esp
81000920:	89 c8                	mov    %ecx,%eax
    open(argv[0], O_RDWR);
81000922:	8b 40 04             	mov    0x4(%eax),%eax
81000925:	8b 00                	mov    (%eax),%eax
81000927:	83 ec 08             	sub    $0x8,%esp
8100092a:	6a 02                	push   $0x2
8100092c:	50                   	push   %eax
8100092d:	e8 57 03 00 00       	call   81000c89 <open>
81000932:	83 c4 10             	add    $0x10,%esp
    dup(0); // 标准输出
81000935:	83 ec 0c             	sub    $0xc,%esp
81000938:	6a 00                	push   $0x0
8100093a:	e8 82 04 00 00       	call   81000dc1 <dup>
8100093f:	83 c4 10             	add    $0x10,%esp
    dup(0); // 标准错误输出
81000942:	83 ec 0c             	sub    $0xc,%esp
81000945:	6a 00                	push   $0x0
81000947:	e8 75 04 00 00       	call   81000dc1 <dup>
8100094c:	83 c4 10             	add    $0x10,%esp

    cli_init(promot, cmd_list, sizeof(cmd_list) / sizeof(cli_cmd_t));
8100094f:	a1 60 8c 00 81       	mov    0x81008c60,%eax
81000954:	83 ec 04             	sub    $0x4,%esp
81000957:	6a 08                	push   $0x8
81000959:	68 80 87 00 81       	push   $0x81008780
8100095e:	50                   	push   %eax
8100095f:	e8 bd fd ff ff       	call   81000721 <cli_init>
81000964:	83 c4 10             	add    $0x10,%esp
    for (;;)
    {
        // 显示提示符，开始工作
        show_promot();
81000967:	e8 94 f6 ff ff       	call   81000000 <show_promot>

        // 获取输入的字符串，然后进行处理.
        // 注意，读取到的字符串结尾中会包含换行符和0
        char *str = fgets(cli.curr_input, CLI_INPUT_SIZE, stdin);
8100096c:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000971:	8b 40 04             	mov    0x4(%eax),%eax
81000974:	83 ec 04             	sub    $0x4,%esp
81000977:	50                   	push   %eax
81000978:	68 00 04 00 00       	push   $0x400
8100097d:	68 60 96 00 81       	push   $0x81009660
81000982:	e8 29 0c 00 00       	call   810015b0 <fgets>
81000987:	83 c4 10             	add    $0x10,%esp
8100098a:	89 45 ec             	mov    %eax,-0x14(%ebp)
        if (str == (char *)0)
8100098d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81000991:	75 0a                	jne    8100099d <main+0x8e>

        // 找不到命令，提示错误
        fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT, cli.curr_input);
    }

    return 0;
81000993:	b8 00 00 00 00       	mov    $0x0,%eax
81000998:	e9 35 01 00 00       	jmp    81000ad2 <main+0x1c3>
        char *cr = strchr(cli.curr_input, '\n');
8100099d:	83 ec 08             	sub    $0x8,%esp
810009a0:	6a 0a                	push   $0xa
810009a2:	68 60 96 00 81       	push   $0x81009660
810009a7:	e8 74 60 00 00       	call   81006a20 <strchr>
810009ac:	83 c4 10             	add    $0x10,%esp
810009af:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
810009b2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009b6:	74 06                	je     810009be <main+0xaf>
            *cr = '\0';
810009b8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009bb:	c6 00 00             	movb   $0x0,(%eax)
        cr = strchr(cli.curr_input, '\r');
810009be:	83 ec 08             	sub    $0x8,%esp
810009c1:	6a 0d                	push   $0xd
810009c3:	68 60 96 00 81       	push   $0x81009660
810009c8:	e8 53 60 00 00       	call   81006a20 <strchr>
810009cd:	83 c4 10             	add    $0x10,%esp
810009d0:	89 45 e8             	mov    %eax,-0x18(%ebp)
        if (cr)
810009d3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810009d7:	74 06                	je     810009df <main+0xd0>
            *cr = '\0';
810009d9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810009dc:	c6 00 00             	movb   $0x0,(%eax)
        int argc = 0;
810009df:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
        memset(argv, 0, sizeof(argv));
810009e6:	83 ec 04             	sub    $0x4,%esp
810009e9:	6a 28                	push   $0x28
810009eb:	6a 00                	push   $0x0
810009ed:	8d 45 b4             	lea    -0x4c(%ebp),%eax
810009f0:	50                   	push   %eax
810009f1:	e8 77 41 00 00       	call   81004b6d <memset>
810009f6:	83 c4 10             	add    $0x10,%esp
        const char *space = " "; // 字符分割器
810009f9:	c7 45 e4 39 88 00 81 	movl   $0x81008839,-0x1c(%ebp)
        char *token = strtok(cli.curr_input, space);
81000a00:	83 ec 08             	sub    $0x8,%esp
81000a03:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a06:	68 60 96 00 81       	push   $0x81009660
81000a0b:	e8 91 62 00 00       	call   81006ca1 <strtok>
81000a10:	83 c4 10             	add    $0x10,%esp
81000a13:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
81000a16:	eb 23                	jmp    81000a3b <main+0x12c>
            argv[argc++] = token;
81000a18:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000a1b:	8d 50 01             	lea    0x1(%eax),%edx
81000a1e:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000a21:	8b 55 f0             	mov    -0x10(%ebp),%edx
81000a24:	89 54 85 b4          	mov    %edx,-0x4c(%ebp,%eax,4)
            token = strtok(NULL, space);
81000a28:	83 ec 08             	sub    $0x8,%esp
81000a2b:	ff 75 e4             	pushl  -0x1c(%ebp)
81000a2e:	6a 00                	push   $0x0
81000a30:	e8 6c 62 00 00       	call   81006ca1 <strtok>
81000a35:	83 c4 10             	add    $0x10,%esp
81000a38:	89 45 f0             	mov    %eax,-0x10(%ebp)
        while (token)
81000a3b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000a3f:	75 d7                	jne    81000a18 <main+0x109>
        if (argc == 0)
81000a41:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000a45:	0f 84 81 00 00 00    	je     81000acc <main+0x1bd>
        const cli_cmd_t *cmd = find_builtin(argv[0]);
81000a4b:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a4e:	83 ec 0c             	sub    $0xc,%esp
81000a51:	50                   	push   %eax
81000a52:	e8 12 fd ff ff       	call   81000769 <find_builtin>
81000a57:	83 c4 10             	add    $0x10,%esp
81000a5a:	89 45 e0             	mov    %eax,-0x20(%ebp)
        if (cmd)
81000a5d:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81000a61:	74 17                	je     81000a7a <main+0x16b>
            run_builtin(cmd, argc, argv);
81000a63:	83 ec 04             	sub    $0x4,%esp
81000a66:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a69:	50                   	push   %eax
81000a6a:	ff 75 f4             	pushl  -0xc(%ebp)
81000a6d:	ff 75 e0             	pushl  -0x20(%ebp)
81000a70:	e8 38 fd ff ff       	call   810007ad <run_builtin>
81000a75:	83 c4 10             	add    $0x10,%esp
            continue;
81000a78:	eb 53                	jmp    81000acd <main+0x1be>
        const char *path = find_exec_path(argv[0]);
81000a7a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81000a7d:	83 ec 0c             	sub    $0xc,%esp
81000a80:	50                   	push   %eax
81000a81:	e8 69 fd ff ff       	call   810007ef <find_exec_path>
81000a86:	83 c4 10             	add    $0x10,%esp
81000a89:	89 45 dc             	mov    %eax,-0x24(%ebp)
        if (path)
81000a8c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81000a90:	74 17                	je     81000aa9 <main+0x19a>
            run_exec_file(path, argc, argv);
81000a92:	83 ec 04             	sub    $0x4,%esp
81000a95:	8d 45 b4             	lea    -0x4c(%ebp),%eax
81000a98:	50                   	push   %eax
81000a99:	ff 75 f4             	pushl  -0xc(%ebp)
81000a9c:	ff 75 dc             	pushl  -0x24(%ebp)
81000a9f:	e8 b9 fd ff ff       	call   8100085d <run_exec_file>
81000aa4:	83 c4 10             	add    $0x10,%esp
            continue;
81000aa7:	eb 24                	jmp    81000acd <main+0x1be>
        fprintf(stderr, ESC_COLOR_ERROR "Unknown command: %s\n" ESC_COLOR_DEFAULT, cli.curr_input);
81000aa9:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81000aae:	8b 40 0c             	mov    0xc(%eax),%eax
81000ab1:	83 ec 04             	sub    $0x4,%esp
81000ab4:	68 60 96 00 81       	push   $0x81009660
81000ab9:	68 3c 88 00 81       	push   $0x8100883c
81000abe:	50                   	push   %eax
81000abf:	e8 2a 10 00 00       	call   81001aee <fiprintf>
81000ac4:	83 c4 10             	add    $0x10,%esp
81000ac7:	e9 9b fe ff ff       	jmp    81000967 <main+0x58>
            continue;
81000acc:	90                   	nop
    {
81000acd:	e9 95 fe ff ff       	jmp    81000967 <main+0x58>
81000ad2:	8b 4d fc             	mov    -0x4(%ebp),%ecx
81000ad5:	c9                   	leave  
81000ad6:	8d 61 fc             	lea    -0x4(%ecx),%esp
81000ad9:	c3                   	ret    

81000ada <_start>:
    .global _start
    .extern cstart
_start:
    # 设置各数据段的选择子,由于应用任务都是用tss恢复的，所以
    # 实际不必设置，但为安全起见，还是设置一下
    mov %ss, %ax
81000ada:	66 8c d0             	mov    %ss,%ax
    mov %ax, %ds
81000add:	8e d8                	mov    %eax,%ds
    mov %ax, %es
81000adf:	8e c0                	mov    %eax,%es
    mov %ax, %fs
81000ae1:	8e e0                	mov    %eax,%fs
    mov %ax, %gs
81000ae3:	8e e8                	mov    %eax,%gs

    # 进入主函数执行，注意此时栈没有变，参数仍然在其中
    # 所以调用cstart时，仍然可以看到参数
    jmp cstart
81000ae5:	e9 00 00 00 00       	jmp    81000aea <cstart>

81000aea <cstart>:
extern uint8_t __bss_start__[], __bss_end__[];

/**
 * @brief 应用的初始化，C部分
 */
void cstart (int argc, char ** argv) {
81000aea:	55                   	push   %ebp
81000aeb:	89 e5                	mov    %esp,%ebp
81000aed:	83 ec 18             	sub    $0x18,%esp
    // 清空bss区，注意这是必须的！！！
    // 像newlib库中有些代码就依赖于此，未清空时数据未知，导致调用sbrk时申请很大内存空间
    uint8_t * start = __bss_start__;
81000af0:	c7 45 f4 60 96 00 81 	movl   $0x81009660,-0xc(%ebp)
    while (start < __bss_end__) {
81000af7:	eb 0c                	jmp    81000b05 <cstart+0x1b>
        *start++ = 0;
81000af9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000afc:	8d 50 01             	lea    0x1(%eax),%edx
81000aff:	89 55 f4             	mov    %edx,-0xc(%ebp)
81000b02:	c6 00 00             	movb   $0x0,(%eax)
    while (start < __bss_end__) {
81000b05:	81 7d f4 00 9c 00 81 	cmpl   $0x81009c00,-0xc(%ebp)
81000b0c:	72 eb                	jb     81000af9 <cstart+0xf>
    }

    exit(main(argc, argv));
81000b0e:	83 ec 08             	sub    $0x8,%esp
81000b11:	ff 75 0c             	pushl  0xc(%ebp)
81000b14:	ff 75 08             	pushl  0x8(%ebp)
81000b17:	e8 f3 fd ff ff       	call   8100090f <main>
81000b1c:	83 c4 10             	add    $0x10,%esp
81000b1f:	83 ec 0c             	sub    $0xc,%esp
81000b22:	50                   	push   %eax
81000b23:	e8 21 04 00 00       	call   81000f49 <exit>

81000b28 <sys_call>:
#include <string.h>

/**
 * 执行系统调用
 */
static inline int sys_call (syscall_args_t * args) {
81000b28:	55                   	push   %ebp
81000b29:	89 e5                	mov    %esp,%ebp
81000b2b:	57                   	push   %edi
81000b2c:	56                   	push   %esi
81000b2d:	53                   	push   %ebx
81000b2e:	83 ec 10             	sub    $0x10,%esp
    const unsigned long sys_gate_addr[] = {0, SELECTOR_SYSCALL | 0};  // 使用特权级0
81000b31:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81000b38:	c7 45 ec 18 00 00 00 	movl   $0x18,-0x14(%ebp)
            "push %[arg1]\n\t"
            "push %[arg0]\n\t"
            "push %[id]\n\t"
            "lcalll *(%[gate])\n\n"
            :"=a"(ret)
            :[arg3]"r"(args->arg3), [arg2]"r"(args->arg2), [arg1]"r"(args->arg1),
81000b3f:	8b 45 08             	mov    0x8(%ebp),%eax
81000b42:	8b 40 10             	mov    0x10(%eax),%eax
81000b45:	8b 55 08             	mov    0x8(%ebp),%edx
81000b48:	8b 52 0c             	mov    0xc(%edx),%edx
81000b4b:	8b 4d 08             	mov    0x8(%ebp),%ecx
81000b4e:	8b 49 08             	mov    0x8(%ecx),%ecx
    [arg0]"r"(args->arg0), [id]"r"(args->id),
81000b51:	8b 5d 08             	mov    0x8(%ebp),%ebx
81000b54:	8b 5b 04             	mov    0x4(%ebx),%ebx
81000b57:	8b 75 08             	mov    0x8(%ebp),%esi
81000b5a:	8b 36                	mov    (%esi),%esi
    __asm__ __volatile__(
81000b5c:	8d 7d e8             	lea    -0x18(%ebp),%edi
81000b5f:	50                   	push   %eax
81000b60:	52                   	push   %edx
81000b61:	51                   	push   %ecx
81000b62:	53                   	push   %ebx
81000b63:	56                   	push   %esi
81000b64:	ff 1f                	lcall  *(%edi)
81000b66:	89 45 f0             	mov    %eax,-0x10(%ebp)
    [gate]"r"(sys_gate_addr));
    return ret;
81000b69:	8b 45 f0             	mov    -0x10(%ebp),%eax
}
81000b6c:	83 c4 10             	add    $0x10,%esp
81000b6f:	5b                   	pop    %ebx
81000b70:	5e                   	pop    %esi
81000b71:	5f                   	pop    %edi
81000b72:	5d                   	pop    %ebp
81000b73:	c3                   	ret    

81000b74 <msleep>:

int msleep (int ms) {
81000b74:	55                   	push   %ebp
81000b75:	89 e5                	mov    %esp,%ebp
81000b77:	83 ec 20             	sub    $0x20,%esp
    if (ms <= 0) {
81000b7a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
81000b7e:	7f 07                	jg     81000b87 <msleep+0x13>
        return 0;
81000b80:	b8 00 00 00 00       	mov    $0x0,%eax
81000b85:	eb 19                	jmp    81000ba0 <msleep+0x2c>
    }

    syscall_args_t args;
    args.id = SYS_msleep;
81000b87:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
    args.arg0 = ms;
81000b8e:	8b 45 08             	mov    0x8(%ebp),%eax
81000b91:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000b94:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000b97:	50                   	push   %eax
81000b98:	e8 8b ff ff ff       	call   81000b28 <sys_call>
81000b9d:	83 c4 04             	add    $0x4,%esp
}
81000ba0:	c9                   	leave  
81000ba1:	c3                   	ret    

81000ba2 <getpid>:

int getpid() {
81000ba2:	55                   	push   %ebp
81000ba3:	89 e5                	mov    %esp,%ebp
81000ba5:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_getpid;
81000ba8:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%ebp)
    return sys_call(&args);
81000baf:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bb2:	50                   	push   %eax
81000bb3:	e8 70 ff ff ff       	call   81000b28 <sys_call>
81000bb8:	83 c4 04             	add    $0x4,%esp
}
81000bbb:	c9                   	leave  
81000bbc:	c3                   	ret    

81000bbd <print_msg>:

int print_msg(char * fmt, int arg) {
81000bbd:	55                   	push   %ebp
81000bbe:	89 e5                	mov    %esp,%ebp
81000bc0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_printmsg;
81000bc3:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%ebp)
    args.arg0 = (int)fmt;
81000bca:	8b 45 08             	mov    0x8(%ebp),%eax
81000bcd:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = arg;
81000bd0:	8b 45 0c             	mov    0xc(%ebp),%eax
81000bd3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000bd6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bd9:	50                   	push   %eax
81000bda:	e8 49 ff ff ff       	call   81000b28 <sys_call>
81000bdf:	83 c4 04             	add    $0x4,%esp
}
81000be2:	c9                   	leave  
81000be3:	c3                   	ret    

81000be4 <fork>:

int fork() {
81000be4:	55                   	push   %ebp
81000be5:	89 e5                	mov    %esp,%ebp
81000be7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fork;
81000bea:	c7 45 ec 02 00 00 00 	movl   $0x2,-0x14(%ebp)
    return sys_call(&args);
81000bf1:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000bf4:	50                   	push   %eax
81000bf5:	e8 2e ff ff ff       	call   81000b28 <sys_call>
81000bfa:	83 c4 04             	add    $0x4,%esp
}
81000bfd:	c9                   	leave  
81000bfe:	c3                   	ret    

81000bff <execve>:

int execve(const char *name, char * const *argv, char * const *env) {
81000bff:	55                   	push   %ebp
81000c00:	89 e5                	mov    %esp,%ebp
81000c02:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_execve;
81000c05:	c7 45 ec 03 00 00 00 	movl   $0x3,-0x14(%ebp)
    args.arg0 = (int)name;
81000c0c:	8b 45 08             	mov    0x8(%ebp),%eax
81000c0f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)argv;
81000c12:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c15:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = (int)env;
81000c18:	8b 45 10             	mov    0x10(%ebp),%eax
81000c1b:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000c1e:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c21:	50                   	push   %eax
81000c22:	e8 01 ff ff ff       	call   81000b28 <sys_call>
81000c27:	83 c4 04             	add    $0x4,%esp
}
81000c2a:	c9                   	leave  
81000c2b:	c3                   	ret    

81000c2c <yield>:

int yield (void) {
81000c2c:	55                   	push   %ebp
81000c2d:	89 e5                	mov    %esp,%ebp
81000c2f:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_yield;
81000c32:	c7 45 ec 04 00 00 00 	movl   $0x4,-0x14(%ebp)
    return sys_call(&args);
81000c39:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c3c:	50                   	push   %eax
81000c3d:	e8 e6 fe ff ff       	call   81000b28 <sys_call>
81000c42:	83 c4 04             	add    $0x4,%esp
}
81000c45:	c9                   	leave  
81000c46:	c3                   	ret    

81000c47 <wait>:

int wait(int* status) {
81000c47:	55                   	push   %ebp
81000c48:	89 e5                	mov    %esp,%ebp
81000c4a:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_wait;
81000c4d:	c7 45 ec 06 00 00 00 	movl   $0x6,-0x14(%ebp)
    args.arg0 = (int)status;
81000c54:	8b 45 08             	mov    0x8(%ebp),%eax
81000c57:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000c5a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c5d:	50                   	push   %eax
81000c5e:	e8 c5 fe ff ff       	call   81000b28 <sys_call>
81000c63:	83 c4 04             	add    $0x4,%esp
}
81000c66:	c9                   	leave  
81000c67:	c3                   	ret    

81000c68 <_exit>:

void _exit(int status) {
81000c68:	55                   	push   %ebp
81000c69:	89 e5                	mov    %esp,%ebp
81000c6b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_exit;
81000c6e:	c7 45 ec 05 00 00 00 	movl   $0x5,-0x14(%ebp)
    args.arg0 = (int)status;
81000c75:	8b 45 08             	mov    0x8(%ebp),%eax
81000c78:	89 45 f0             	mov    %eax,-0x10(%ebp)
    sys_call(&args);
81000c7b:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000c7e:	50                   	push   %eax
81000c7f:	e8 a4 fe ff ff       	call   81000b28 <sys_call>
81000c84:	83 c4 04             	add    $0x4,%esp
    for (;;) {}
81000c87:	eb fe                	jmp    81000c87 <_exit+0x1f>

81000c89 <open>:
}

int open(const char *name, int flags, ...) {
81000c89:	55                   	push   %ebp
81000c8a:	89 e5                	mov    %esp,%ebp
81000c8c:	83 ec 20             	sub    $0x20,%esp
    // 不考虑支持太多参数
    syscall_args_t args;
    args.id = SYS_open;
81000c8f:	c7 45 ec 32 00 00 00 	movl   $0x32,-0x14(%ebp)
    args.arg0 = (int)name;
81000c96:	8b 45 08             	mov    0x8(%ebp),%eax
81000c99:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)flags;
81000c9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81000c9f:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000ca2:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ca5:	50                   	push   %eax
81000ca6:	e8 7d fe ff ff       	call   81000b28 <sys_call>
81000cab:	83 c4 04             	add    $0x4,%esp
}
81000cae:	c9                   	leave  
81000caf:	c3                   	ret    

81000cb0 <read>:

int read(int file, char *ptr, int len) {
81000cb0:	55                   	push   %ebp
81000cb1:	89 e5                	mov    %esp,%ebp
81000cb3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_read;
81000cb6:	c7 45 ec 33 00 00 00 	movl   $0x33,-0x14(%ebp)
    args.arg0 = (int)file;
81000cbd:	8b 45 08             	mov    0x8(%ebp),%eax
81000cc0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cc3:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cc6:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cc9:	8b 45 10             	mov    0x10(%ebp),%eax
81000ccc:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000ccf:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cd2:	50                   	push   %eax
81000cd3:	e8 50 fe ff ff       	call   81000b28 <sys_call>
81000cd8:	83 c4 04             	add    $0x4,%esp
}
81000cdb:	c9                   	leave  
81000cdc:	c3                   	ret    

81000cdd <write>:

int write(int file, char *ptr, int len) {
81000cdd:	55                   	push   %ebp
81000cde:	89 e5                	mov    %esp,%ebp
81000ce0:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_write;
81000ce3:	c7 45 ec 34 00 00 00 	movl   $0x34,-0x14(%ebp)
    args.arg0 = (int)file;
81000cea:	8b 45 08             	mov    0x8(%ebp),%eax
81000ced:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000cf0:	8b 45 0c             	mov    0xc(%ebp),%eax
81000cf3:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = len;
81000cf6:	8b 45 10             	mov    0x10(%ebp),%eax
81000cf9:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000cfc:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000cff:	50                   	push   %eax
81000d00:	e8 23 fe ff ff       	call   81000b28 <sys_call>
81000d05:	83 c4 04             	add    $0x4,%esp
}
81000d08:	c9                   	leave  
81000d09:	c3                   	ret    

81000d0a <close>:

int close(int file) {
81000d0a:	55                   	push   %ebp
81000d0b:	89 e5                	mov    %esp,%ebp
81000d0d:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_close;
81000d10:	c7 45 ec 35 00 00 00 	movl   $0x35,-0x14(%ebp)
    args.arg0 = (int)file;
81000d17:	8b 45 08             	mov    0x8(%ebp),%eax
81000d1a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000d1d:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d20:	50                   	push   %eax
81000d21:	e8 02 fe ff ff       	call   81000b28 <sys_call>
81000d26:	83 c4 04             	add    $0x4,%esp
}
81000d29:	c9                   	leave  
81000d2a:	c3                   	ret    

81000d2b <lseek>:

int lseek(int file, int ptr, int dir) {
81000d2b:	55                   	push   %ebp
81000d2c:	89 e5                	mov    %esp,%ebp
81000d2e:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_lseek;
81000d31:	c7 45 ec 36 00 00 00 	movl   $0x36,-0x14(%ebp)
    args.arg0 = (int)file;
81000d38:	8b 45 08             	mov    0x8(%ebp),%eax
81000d3b:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)ptr;
81000d3e:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d41:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = dir;
81000d44:	8b 45 10             	mov    0x10(%ebp),%eax
81000d47:	89 45 f8             	mov    %eax,-0x8(%ebp)
    return sys_call(&args);
81000d4a:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d4d:	50                   	push   %eax
81000d4e:	e8 d5 fd ff ff       	call   81000b28 <sys_call>
81000d53:	83 c4 04             	add    $0x4,%esp
}
81000d56:	c9                   	leave  
81000d57:	c3                   	ret    

81000d58 <fstat>:

/**
 * 获取文件的状态
 */
int fstat(int file, struct stat *st) {
81000d58:	55                   	push   %ebp
81000d59:	89 e5                	mov    %esp,%ebp
81000d5b:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_fstat;
81000d5e:	c7 45 ec 39 00 00 00 	movl   $0x39,-0x14(%ebp)
    args.arg0 = (int)file;
81000d65:	8b 45 08             	mov    0x8(%ebp),%eax
81000d68:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = (int)st;
81000d6b:	8b 45 0c             	mov    0xc(%ebp),%eax
81000d6e:	89 45 f4             	mov    %eax,-0xc(%ebp)
    return sys_call(&args);
81000d71:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d74:	50                   	push   %eax
81000d75:	e8 ae fd ff ff       	call   81000b28 <sys_call>
81000d7a:	83 c4 04             	add    $0x4,%esp
}
81000d7d:	c9                   	leave  
81000d7e:	c3                   	ret    

81000d7f <isatty>:

/**
 * 判断文件描述符与tty关联
 */
int isatty(int file) {
81000d7f:	55                   	push   %ebp
81000d80:	89 e5                	mov    %esp,%ebp
81000d82:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_isatty;
81000d85:	c7 45 ec 37 00 00 00 	movl   $0x37,-0x14(%ebp)
    args.arg0 = (int)file;
81000d8c:	8b 45 08             	mov    0x8(%ebp),%eax
81000d8f:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000d92:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000d95:	50                   	push   %eax
81000d96:	e8 8d fd ff ff       	call   81000b28 <sys_call>
81000d9b:	83 c4 04             	add    $0x4,%esp
}
81000d9e:	c9                   	leave  
81000d9f:	c3                   	ret    

81000da0 <sbrk>:

void * sbrk(ptrdiff_t incr) {
81000da0:	55                   	push   %ebp
81000da1:	89 e5                	mov    %esp,%ebp
81000da3:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_sbrk;
81000da6:	c7 45 ec 38 00 00 00 	movl   $0x38,-0x14(%ebp)
    args.arg0 = (int)incr;
81000dad:	8b 45 08             	mov    0x8(%ebp),%eax
81000db0:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return (void *)sys_call(&args);
81000db3:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000db6:	50                   	push   %eax
81000db7:	e8 6c fd ff ff       	call   81000b28 <sys_call>
81000dbc:	83 c4 04             	add    $0x4,%esp
}
81000dbf:	c9                   	leave  
81000dc0:	c3                   	ret    

81000dc1 <dup>:

int dup (int file) {
81000dc1:	55                   	push   %ebp
81000dc2:	89 e5                	mov    %esp,%ebp
81000dc4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_dup;
81000dc7:	c7 45 ec 3a 00 00 00 	movl   $0x3a,-0x14(%ebp)
    args.arg0 = file;
81000dce:	8b 45 08             	mov    0x8(%ebp),%eax
81000dd1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000dd4:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000dd7:	50                   	push   %eax
81000dd8:	e8 4b fd ff ff       	call   81000b28 <sys_call>
81000ddd:	83 c4 04             	add    $0x4,%esp
}
81000de0:	c9                   	leave  
81000de1:	c3                   	ret    

81000de2 <opendir>:


DIR * opendir(const char * name) {
81000de2:	55                   	push   %ebp
81000de3:	89 e5                	mov    %esp,%ebp
81000de5:	83 ec 28             	sub    $0x28,%esp
    DIR * dir = (DIR *)malloc(sizeof(DIR));
81000de8:	83 ec 0c             	sub    $0xc,%esp
81000deb:	68 10 01 00 00       	push   $0x110
81000df0:	e8 cd 30 00 00       	call   81003ec2 <malloc>
81000df5:	83 c4 10             	add    $0x10,%esp
81000df8:	89 45 f4             	mov    %eax,-0xc(%ebp)
    if (dir == (DIR *)0) {
81000dfb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81000dff:	75 07                	jne    81000e08 <opendir+0x26>
        return (DIR *)0;
81000e01:	b8 00 00 00 00       	mov    $0x0,%eax
81000e06:	eb 43                	jmp    81000e4b <opendir+0x69>
    }

    syscall_args_t args;
    args.id = SYS_opendir;
81000e08:	c7 45 dc 3c 00 00 00 	movl   $0x3c,-0x24(%ebp)
    args.arg0 = (int)name;
81000e0f:	8b 45 08             	mov    0x8(%ebp),%eax
81000e12:	89 45 e0             	mov    %eax,-0x20(%ebp)
    args.arg1 = (int)dir;
81000e15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81000e18:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    int err = sys_call(&args);
81000e1b:	83 ec 0c             	sub    $0xc,%esp
81000e1e:	8d 45 dc             	lea    -0x24(%ebp),%eax
81000e21:	50                   	push   %eax
81000e22:	e8 01 fd ff ff       	call   81000b28 <sys_call>
81000e27:	83 c4 10             	add    $0x10,%esp
81000e2a:	89 45 f0             	mov    %eax,-0x10(%ebp)
    if (err < 0) {
81000e2d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000e31:	79 15                	jns    81000e48 <opendir+0x66>
        free(dir);
81000e33:	83 ec 0c             	sub    $0xc,%esp
81000e36:	ff 75 f4             	pushl  -0xc(%ebp)
81000e39:	e8 a0 30 00 00       	call   81003ede <free>
81000e3e:	83 c4 10             	add    $0x10,%esp
        return (DIR *)0;
81000e41:	b8 00 00 00 00       	mov    $0x0,%eax
81000e46:	eb 03                	jmp    81000e4b <opendir+0x69>
    }
    return dir;
81000e48:	8b 45 f4             	mov    -0xc(%ebp),%eax
}
81000e4b:	c9                   	leave  
81000e4c:	c3                   	ret    

81000e4d <readdir>:

struct dirent* readdir(DIR* dir) {
81000e4d:	55                   	push   %ebp
81000e4e:	89 e5                	mov    %esp,%ebp
81000e50:	83 ec 20             	sub    $0x20,%esp

    syscall_args_t args;
    args.id = SYS_readdir;
81000e53:	c7 45 e8 3d 00 00 00 	movl   $0x3d,-0x18(%ebp)
    args.arg0 = (int)dir;
81000e5a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e5d:	89 45 ec             	mov    %eax,-0x14(%ebp)
    args.arg1 = (int)&dir->dirent;
81000e60:	8b 45 08             	mov    0x8(%ebp),%eax
81000e63:	83 c0 04             	add    $0x4,%eax
81000e66:	89 45 f0             	mov    %eax,-0x10(%ebp)
    int err = sys_call(&args);
81000e69:	8d 45 e8             	lea    -0x18(%ebp),%eax
81000e6c:	50                   	push   %eax
81000e6d:	e8 b6 fc ff ff       	call   81000b28 <sys_call>
81000e72:	83 c4 04             	add    $0x4,%esp
81000e75:	89 45 fc             	mov    %eax,-0x4(%ebp)
    if (err < 0) {
81000e78:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
81000e7c:	79 07                	jns    81000e85 <readdir+0x38>
        return (struct dirent *)0;
81000e7e:	b8 00 00 00 00       	mov    $0x0,%eax
81000e83:	eb 06                	jmp    81000e8b <readdir+0x3e>
    }
    return &dir->dirent;
81000e85:	8b 45 08             	mov    0x8(%ebp),%eax
81000e88:	83 c0 04             	add    $0x4,%eax
}
81000e8b:	c9                   	leave  
81000e8c:	c3                   	ret    

81000e8d <closedir>:

int closedir(DIR *dir) {
81000e8d:	55                   	push   %ebp
81000e8e:	89 e5                	mov    %esp,%ebp
81000e90:	83 ec 28             	sub    $0x28,%esp
    syscall_args_t args;
    args.id = SYS_closedir;
81000e93:	c7 45 e4 3e 00 00 00 	movl   $0x3e,-0x1c(%ebp)
    args.arg0 = (int)dir;
81000e9a:	8b 45 08             	mov    0x8(%ebp),%eax
81000e9d:	89 45 e8             	mov    %eax,-0x18(%ebp)
    sys_call(&args);
81000ea0:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81000ea3:	50                   	push   %eax
81000ea4:	e8 7f fc ff ff       	call   81000b28 <sys_call>
81000ea9:	83 c4 04             	add    $0x4,%esp

    free(dir);
81000eac:	83 ec 0c             	sub    $0xc,%esp
81000eaf:	ff 75 08             	pushl  0x8(%ebp)
81000eb2:	e8 27 30 00 00       	call   81003ede <free>
81000eb7:	83 c4 10             	add    $0x10,%esp
    return 0;
81000eba:	b8 00 00 00 00       	mov    $0x0,%eax
}
81000ebf:	c9                   	leave  
81000ec0:	c3                   	ret    

81000ec1 <ioctl>:

int ioctl(int file, int cmd, int arg0, int arg1)
{
81000ec1:	55                   	push   %ebp
81000ec2:	89 e5                	mov    %esp,%ebp
81000ec4:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_ioctl;
81000ec7:	c7 45 ec 3b 00 00 00 	movl   $0x3b,-0x14(%ebp)
    args.arg0 = file;
81000ece:	8b 45 08             	mov    0x8(%ebp),%eax
81000ed1:	89 45 f0             	mov    %eax,-0x10(%ebp)
    args.arg1 = cmd;
81000ed4:	8b 45 0c             	mov    0xc(%ebp),%eax
81000ed7:	89 45 f4             	mov    %eax,-0xc(%ebp)
    args.arg2 = arg0;
81000eda:	8b 45 10             	mov    0x10(%ebp),%eax
81000edd:	89 45 f8             	mov    %eax,-0x8(%ebp)
    args.arg3 = arg1;
81000ee0:	8b 45 14             	mov    0x14(%ebp),%eax
81000ee3:	89 45 fc             	mov    %eax,-0x4(%ebp)
    return sys_call(&args);
81000ee6:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000ee9:	50                   	push   %eax
81000eea:	e8 39 fc ff ff       	call   81000b28 <sys_call>
81000eef:	83 c4 04             	add    $0x4,%esp
}
81000ef2:	c9                   	leave  
81000ef3:	c3                   	ret    

81000ef4 <unlink>:

int unlink(const char *name) {
81000ef4:	55                   	push   %ebp
81000ef5:	89 e5                	mov    %esp,%ebp
81000ef7:	83 ec 20             	sub    $0x20,%esp
    syscall_args_t args;
    args.id = SYS_unlink;
81000efa:	c7 45 ec 3f 00 00 00 	movl   $0x3f,-0x14(%ebp)
    args.arg0 = (int)name;
81000f01:	8b 45 08             	mov    0x8(%ebp),%eax
81000f04:	89 45 f0             	mov    %eax,-0x10(%ebp)
    return sys_call(&args);
81000f07:	8d 45 ec             	lea    -0x14(%ebp),%eax
81000f0a:	50                   	push   %eax
81000f0b:	e8 18 fc ff ff       	call   81000b28 <sys_call>
81000f10:	83 c4 04             	add    $0x4,%esp
81000f13:	c9                   	leave  
81000f14:	c3                   	ret    

81000f15 <atoi>:
81000f15:	55                   	push   %ebp
81000f16:	89 e5                	mov    %esp,%ebp
81000f18:	83 ec 08             	sub    $0x8,%esp
81000f1b:	83 ec 04             	sub    $0x4,%esp
81000f1e:	6a 0a                	push   $0xa
81000f20:	6a 00                	push   $0x0
81000f22:	ff 75 08             	pushl  0x8(%ebp)
81000f25:	e8 b4 60 00 00       	call   81006fde <strtol>
81000f2a:	83 c4 10             	add    $0x10,%esp
81000f2d:	c9                   	leave  
81000f2e:	c3                   	ret    

81000f2f <_atoi_r>:
81000f2f:	55                   	push   %ebp
81000f30:	89 e5                	mov    %esp,%ebp
81000f32:	83 ec 08             	sub    $0x8,%esp
81000f35:	6a 0a                	push   $0xa
81000f37:	6a 00                	push   $0x0
81000f39:	ff 75 0c             	pushl  0xc(%ebp)
81000f3c:	ff 75 08             	pushl  0x8(%ebp)
81000f3f:	e8 50 60 00 00       	call   81006f94 <_strtol_r>
81000f44:	83 c4 10             	add    $0x10,%esp
81000f47:	c9                   	leave  
81000f48:	c3                   	ret    

81000f49 <exit>:
81000f49:	55                   	push   %ebp
81000f4a:	89 e5                	mov    %esp,%ebp
81000f4c:	83 ec 08             	sub    $0x8,%esp
81000f4f:	83 ec 08             	sub    $0x8,%esp
81000f52:	6a 00                	push   $0x0
81000f54:	ff 75 08             	pushl  0x8(%ebp)
81000f57:	e8 7f 63 00 00       	call   810072db <__call_exitprocs>
81000f5c:	83 c4 10             	add    $0x10,%esp
81000f5f:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81000f64:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f67:	85 c0                	test   %eax,%eax
81000f69:	74 17                	je     81000f82 <exit+0x39>
81000f6b:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81000f70:	8b 40 3c             	mov    0x3c(%eax),%eax
81000f73:	8b 15 e4 88 00 81    	mov    0x810088e4,%edx
81000f79:	83 ec 0c             	sub    $0xc,%esp
81000f7c:	52                   	push   %edx
81000f7d:	ff d0                	call   *%eax
81000f7f:	83 c4 10             	add    $0x10,%esp
81000f82:	83 ec 0c             	sub    $0xc,%esp
81000f85:	ff 75 08             	pushl  0x8(%ebp)
81000f88:	e8 db fc ff ff       	call   81000c68 <_exit>

81000f8d <_fclose_r>:
81000f8d:	55                   	push   %ebp
81000f8e:	89 e5                	mov    %esp,%ebp
81000f90:	53                   	push   %ebx
81000f91:	83 ec 14             	sub    $0x14,%esp
81000f94:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81000f97:	85 db                	test   %ebx,%ebx
81000f99:	75 0a                	jne    81000fa5 <_fclose_r+0x18>
81000f9b:	b8 00 00 00 00       	mov    $0x0,%eax
81000fa0:	e9 ea 00 00 00       	jmp    8100108f <_fclose_r+0x102>
81000fa5:	8b 45 08             	mov    0x8(%ebp),%eax
81000fa8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81000fab:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81000faf:	74 18                	je     81000fc9 <_fclose_r+0x3c>
81000fb1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81000fb4:	8b 40 38             	mov    0x38(%eax),%eax
81000fb7:	85 c0                	test   %eax,%eax
81000fb9:	75 0e                	jne    81000fc9 <_fclose_r+0x3c>
81000fbb:	83 ec 0c             	sub    $0xc,%esp
81000fbe:	ff 75 f0             	pushl  -0x10(%ebp)
81000fc1:	e8 fe 08 00 00       	call   810018c4 <__sinit>
81000fc6:	83 c4 10             	add    $0x10,%esp
81000fc9:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81000fcd:	66 85 c0             	test   %ax,%ax
81000fd0:	75 0a                	jne    81000fdc <_fclose_r+0x4f>
81000fd2:	b8 00 00 00 00       	mov    $0x0,%eax
81000fd7:	e9 b3 00 00 00       	jmp    8100108f <_fclose_r+0x102>
81000fdc:	83 ec 08             	sub    $0x8,%esp
81000fdf:	53                   	push   %ebx
81000fe0:	ff 75 08             	pushl  0x8(%ebp)
81000fe3:	e8 c9 00 00 00       	call   810010b1 <__sflush_r>
81000fe8:	83 c4 10             	add    $0x10,%esp
81000feb:	89 45 f4             	mov    %eax,-0xc(%ebp)
81000fee:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000ff1:	85 c0                	test   %eax,%eax
81000ff3:	74 1d                	je     81001012 <_fclose_r+0x85>
81000ff5:	8b 43 2c             	mov    0x2c(%ebx),%eax
81000ff8:	8b 53 1c             	mov    0x1c(%ebx),%edx
81000ffb:	83 ec 08             	sub    $0x8,%esp
81000ffe:	52                   	push   %edx
81000fff:	ff 75 08             	pushl  0x8(%ebp)
81001002:	ff d0                	call   *%eax
81001004:	83 c4 10             	add    $0x10,%esp
81001007:	85 c0                	test   %eax,%eax
81001009:	79 07                	jns    81001012 <_fclose_r+0x85>
8100100b:	c7 45 f4 ff ff ff ff 	movl   $0xffffffff,-0xc(%ebp)
81001012:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001016:	98                   	cwtl   
81001017:	25 80 00 00 00       	and    $0x80,%eax
8100101c:	85 c0                	test   %eax,%eax
8100101e:	74 12                	je     81001032 <_fclose_r+0xa5>
81001020:	8b 43 10             	mov    0x10(%ebx),%eax
81001023:	83 ec 08             	sub    $0x8,%esp
81001026:	50                   	push   %eax
81001027:	ff 75 08             	pushl  0x8(%ebp)
8100102a:	e8 4a 0e 00 00       	call   81001e79 <_free_r>
8100102f:	83 c4 10             	add    $0x10,%esp
81001032:	8b 43 30             	mov    0x30(%ebx),%eax
81001035:	85 c0                	test   %eax,%eax
81001037:	74 23                	je     8100105c <_fclose_r+0xcf>
81001039:	8b 53 30             	mov    0x30(%ebx),%edx
8100103c:	8d 43 40             	lea    0x40(%ebx),%eax
8100103f:	39 c2                	cmp    %eax,%edx
81001041:	74 12                	je     81001055 <_fclose_r+0xc8>
81001043:	8b 43 30             	mov    0x30(%ebx),%eax
81001046:	83 ec 08             	sub    $0x8,%esp
81001049:	50                   	push   %eax
8100104a:	ff 75 08             	pushl  0x8(%ebp)
8100104d:	e8 27 0e 00 00       	call   81001e79 <_free_r>
81001052:	83 c4 10             	add    $0x10,%esp
81001055:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100105c:	8b 43 44             	mov    0x44(%ebx),%eax
8100105f:	85 c0                	test   %eax,%eax
81001061:	74 19                	je     8100107c <_fclose_r+0xef>
81001063:	8b 43 44             	mov    0x44(%ebx),%eax
81001066:	83 ec 08             	sub    $0x8,%esp
81001069:	50                   	push   %eax
8100106a:	ff 75 08             	pushl  0x8(%ebp)
8100106d:	e8 07 0e 00 00       	call   81001e79 <_free_r>
81001072:	83 c4 10             	add    $0x10,%esp
81001075:	c7 43 44 00 00 00 00 	movl   $0x0,0x44(%ebx)
8100107c:	e8 dc 08 00 00       	call   8100195d <__sfp_lock_acquire>
81001081:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001087:	e8 d7 08 00 00       	call   81001963 <__sfp_lock_release>
8100108c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100108f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81001092:	c9                   	leave  
81001093:	c3                   	ret    

81001094 <fclose>:
81001094:	55                   	push   %ebp
81001095:	89 e5                	mov    %esp,%ebp
81001097:	83 ec 08             	sub    $0x8,%esp
8100109a:	8b 55 08             	mov    0x8(%ebp),%edx
8100109d:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810010a2:	83 ec 08             	sub    $0x8,%esp
810010a5:	52                   	push   %edx
810010a6:	50                   	push   %eax
810010a7:	e8 e1 fe ff ff       	call   81000f8d <_fclose_r>
810010ac:	83 c4 10             	add    $0x10,%esp
810010af:	c9                   	leave  
810010b0:	c3                   	ret    

810010b1 <__sflush_r>:
810010b1:	55                   	push   %ebp
810010b2:	89 e5                	mov    %esp,%ebp
810010b4:	57                   	push   %edi
810010b5:	56                   	push   %esi
810010b6:	53                   	push   %ebx
810010b7:	83 ec 1c             	sub    $0x1c,%esp
810010ba:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810010bd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010c1:	66 89 45 de          	mov    %ax,-0x22(%ebp)
810010c5:	0f bf 45 de          	movswl -0x22(%ebp),%eax
810010c9:	83 e0 08             	and    $0x8,%eax
810010cc:	85 c0                	test   %eax,%eax
810010ce:	0f 85 93 01 00 00    	jne    81001267 <__sflush_r+0x1b6>
810010d4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810010d8:	80 cc 08             	or     $0x8,%ah
810010db:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810010df:	8b 43 04             	mov    0x4(%ebx),%eax
810010e2:	85 c0                	test   %eax,%eax
810010e4:	7f 0b                	jg     810010f1 <__sflush_r+0x40>
810010e6:	8b 43 3c             	mov    0x3c(%ebx),%eax
810010e9:	85 c0                	test   %eax,%eax
810010eb:	0f 8e 6f 01 00 00    	jle    81001260 <__sflush_r+0x1af>
810010f1:	8b 43 28             	mov    0x28(%ebx),%eax
810010f4:	85 c0                	test   %eax,%eax
810010f6:	0f 84 64 01 00 00    	je     81001260 <__sflush_r+0x1af>
810010fc:	8b 45 08             	mov    0x8(%ebp),%eax
810010ff:	8b 00                	mov    (%eax),%eax
81001101:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001104:	8b 45 08             	mov    0x8(%ebp),%eax
81001107:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100110d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001111:	98                   	cwtl   
81001112:	25 00 10 00 00       	and    $0x1000,%eax
81001117:	85 c0                	test   %eax,%eax
81001119:	74 08                	je     81001123 <__sflush_r+0x72>
8100111b:	8b 43 50             	mov    0x50(%ebx),%eax
8100111e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001121:	eb 64                	jmp    81001187 <__sflush_r+0xd6>
81001123:	8b 43 28             	mov    0x28(%ebx),%eax
81001126:	8b 53 1c             	mov    0x1c(%ebx),%edx
81001129:	6a 01                	push   $0x1
8100112b:	6a 00                	push   $0x0
8100112d:	52                   	push   %edx
8100112e:	ff 75 08             	pushl  0x8(%ebp)
81001131:	ff d0                	call   *%eax
81001133:	83 c4 10             	add    $0x10,%esp
81001136:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001139:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100113d:	75 48                	jne    81001187 <__sflush_r+0xd6>
8100113f:	8b 45 08             	mov    0x8(%ebp),%eax
81001142:	8b 00                	mov    (%eax),%eax
81001144:	85 c0                	test   %eax,%eax
81001146:	74 3f                	je     81001187 <__sflush_r+0xd6>
81001148:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
8100114f:	8b 45 08             	mov    0x8(%ebp),%eax
81001152:	8b 00                	mov    (%eax),%eax
81001154:	83 f8 1d             	cmp    $0x1d,%eax
81001157:	74 0a                	je     81001163 <__sflush_r+0xb2>
81001159:	8b 45 08             	mov    0x8(%ebp),%eax
8100115c:	8b 00                	mov    (%eax),%eax
8100115e:	83 f8 16             	cmp    $0x16,%eax
81001161:	75 11                	jne    81001174 <__sflush_r+0xc3>
81001163:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
8100116a:	8b 45 08             	mov    0x8(%ebp),%eax
8100116d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001170:	89 10                	mov    %edx,(%eax)
81001172:	eb 0b                	jmp    8100117f <__sflush_r+0xce>
81001174:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001178:	83 c8 40             	or     $0x40,%eax
8100117b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100117f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001182:	e9 48 01 00 00       	jmp    810012cf <__sflush_r+0x21e>
81001187:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100118b:	98                   	cwtl   
8100118c:	83 e0 04             	and    $0x4,%eax
8100118f:	85 c0                	test   %eax,%eax
81001191:	74 13                	je     810011a6 <__sflush_r+0xf5>
81001193:	8b 43 04             	mov    0x4(%ebx),%eax
81001196:	29 45 e4             	sub    %eax,-0x1c(%ebp)
81001199:	8b 43 30             	mov    0x30(%ebx),%eax
8100119c:	85 c0                	test   %eax,%eax
8100119e:	74 06                	je     810011a6 <__sflush_r+0xf5>
810011a0:	8b 43 3c             	mov    0x3c(%ebx),%eax
810011a3:	29 45 e4             	sub    %eax,-0x1c(%ebp)
810011a6:	8b 43 28             	mov    0x28(%ebx),%eax
810011a9:	8b 53 1c             	mov    0x1c(%ebx),%edx
810011ac:	6a 00                	push   $0x0
810011ae:	ff 75 e4             	pushl  -0x1c(%ebp)
810011b1:	52                   	push   %edx
810011b2:	ff 75 08             	pushl  0x8(%ebp)
810011b5:	ff d0                	call   *%eax
810011b7:	83 c4 10             	add    $0x10,%esp
810011ba:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810011bd:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
810011c1:	75 1d                	jne    810011e0 <__sflush_r+0x12f>
810011c3:	8b 45 08             	mov    0x8(%ebp),%eax
810011c6:	8b 00                	mov    (%eax),%eax
810011c8:	85 c0                	test   %eax,%eax
810011ca:	74 14                	je     810011e0 <__sflush_r+0x12f>
810011cc:	8b 45 08             	mov    0x8(%ebp),%eax
810011cf:	8b 00                	mov    (%eax),%eax
810011d1:	83 f8 1d             	cmp    $0x1d,%eax
810011d4:	74 0a                	je     810011e0 <__sflush_r+0x12f>
810011d6:	8b 45 08             	mov    0x8(%ebp),%eax
810011d9:	8b 00                	mov    (%eax),%eax
810011db:	83 f8 16             	cmp    $0x16,%eax
810011de:	75 6e                	jne    8100124e <__sflush_r+0x19d>
810011e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011e4:	80 e4 f7             	and    $0xf7,%ah
810011e7:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810011eb:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810011f2:	8b 43 10             	mov    0x10(%ebx),%eax
810011f5:	89 03                	mov    %eax,(%ebx)
810011f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810011fb:	98                   	cwtl   
810011fc:	25 00 10 00 00       	and    $0x1000,%eax
81001201:	85 c0                	test   %eax,%eax
81001203:	74 15                	je     8100121a <__sflush_r+0x169>
81001205:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
81001209:	75 09                	jne    81001214 <__sflush_r+0x163>
8100120b:	8b 45 08             	mov    0x8(%ebp),%eax
8100120e:	8b 00                	mov    (%eax),%eax
81001210:	85 c0                	test   %eax,%eax
81001212:	75 06                	jne    8100121a <__sflush_r+0x169>
81001214:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001217:	89 43 50             	mov    %eax,0x50(%ebx)
8100121a:	8b 45 08             	mov    0x8(%ebp),%eax
8100121d:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001220:	89 10                	mov    %edx,(%eax)
81001222:	8b 43 30             	mov    0x30(%ebx),%eax
81001225:	85 c0                	test   %eax,%eax
81001227:	74 37                	je     81001260 <__sflush_r+0x1af>
81001229:	8b 53 30             	mov    0x30(%ebx),%edx
8100122c:	8d 43 40             	lea    0x40(%ebx),%eax
8100122f:	39 c2                	cmp    %eax,%edx
81001231:	74 12                	je     81001245 <__sflush_r+0x194>
81001233:	8b 43 30             	mov    0x30(%ebx),%eax
81001236:	83 ec 08             	sub    $0x8,%esp
81001239:	50                   	push   %eax
8100123a:	ff 75 08             	pushl  0x8(%ebp)
8100123d:	e8 37 0c 00 00       	call   81001e79 <_free_r>
81001242:	83 c4 10             	add    $0x10,%esp
81001245:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100124c:	eb 12                	jmp    81001260 <__sflush_r+0x1af>
8100124e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001252:	83 c8 40             	or     $0x40,%eax
81001255:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001259:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100125e:	eb 6f                	jmp    810012cf <__sflush_r+0x21e>
81001260:	b8 00 00 00 00       	mov    $0x0,%eax
81001265:	eb 68                	jmp    810012cf <__sflush_r+0x21e>
81001267:	8b 73 10             	mov    0x10(%ebx),%esi
8100126a:	85 f6                	test   %esi,%esi
8100126c:	75 07                	jne    81001275 <__sflush_r+0x1c4>
8100126e:	b8 00 00 00 00       	mov    $0x0,%eax
81001273:	eb 5a                	jmp    810012cf <__sflush_r+0x21e>
81001275:	8b 03                	mov    (%ebx),%eax
81001277:	29 f0                	sub    %esi,%eax
81001279:	89 c7                	mov    %eax,%edi
8100127b:	89 33                	mov    %esi,(%ebx)
8100127d:	0f bf 45 de          	movswl -0x22(%ebp),%eax
81001281:	83 e0 03             	and    $0x3,%eax
81001284:	85 c0                	test   %eax,%eax
81001286:	75 05                	jne    8100128d <__sflush_r+0x1dc>
81001288:	8b 43 14             	mov    0x14(%ebx),%eax
8100128b:	eb 05                	jmp    81001292 <__sflush_r+0x1e1>
8100128d:	b8 00 00 00 00       	mov    $0x0,%eax
81001292:	89 43 08             	mov    %eax,0x8(%ebx)
81001295:	eb 2f                	jmp    810012c6 <__sflush_r+0x215>
81001297:	8b 43 24             	mov    0x24(%ebx),%eax
8100129a:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100129d:	57                   	push   %edi
8100129e:	56                   	push   %esi
8100129f:	52                   	push   %edx
810012a0:	ff 75 08             	pushl  0x8(%ebp)
810012a3:	ff d0                	call   *%eax
810012a5:	83 c4 10             	add    $0x10,%esp
810012a8:	85 c0                	test   %eax,%eax
810012aa:	7f 12                	jg     810012be <__sflush_r+0x20d>
810012ac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810012b0:	83 c8 40             	or     $0x40,%eax
810012b3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810012b7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810012bc:	eb 11                	jmp    810012cf <__sflush_r+0x21e>
810012be:	89 c1                	mov    %eax,%ecx
810012c0:	89 c8                	mov    %ecx,%eax
810012c2:	01 c6                	add    %eax,%esi
810012c4:	29 cf                	sub    %ecx,%edi
810012c6:	85 ff                	test   %edi,%edi
810012c8:	7f cd                	jg     81001297 <__sflush_r+0x1e6>
810012ca:	b8 00 00 00 00       	mov    $0x0,%eax
810012cf:	8d 65 f4             	lea    -0xc(%ebp),%esp
810012d2:	5b                   	pop    %ebx
810012d3:	5e                   	pop    %esi
810012d4:	5f                   	pop    %edi
810012d5:	5d                   	pop    %ebp
810012d6:	c3                   	ret    

810012d7 <_fflush_r>:
810012d7:	55                   	push   %ebp
810012d8:	89 e5                	mov    %esp,%ebp
810012da:	53                   	push   %ebx
810012db:	83 ec 14             	sub    $0x14,%esp
810012de:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810012e1:	8b 45 08             	mov    0x8(%ebp),%eax
810012e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810012e7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810012eb:	74 18                	je     81001305 <_fflush_r+0x2e>
810012ed:	8b 45 f4             	mov    -0xc(%ebp),%eax
810012f0:	8b 40 38             	mov    0x38(%eax),%eax
810012f3:	85 c0                	test   %eax,%eax
810012f5:	75 0e                	jne    81001305 <_fflush_r+0x2e>
810012f7:	83 ec 0c             	sub    $0xc,%esp
810012fa:	ff 75 f4             	pushl  -0xc(%ebp)
810012fd:	e8 c2 05 00 00       	call   810018c4 <__sinit>
81001302:	83 c4 10             	add    $0x10,%esp
81001305:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001309:	66 85 c0             	test   %ax,%ax
8100130c:	75 07                	jne    81001315 <_fflush_r+0x3e>
8100130e:	b8 00 00 00 00       	mov    $0x0,%eax
81001313:	eb 15                	jmp    8100132a <_fflush_r+0x53>
81001315:	83 ec 08             	sub    $0x8,%esp
81001318:	53                   	push   %ebx
81001319:	ff 75 08             	pushl  0x8(%ebp)
8100131c:	e8 90 fd ff ff       	call   810010b1 <__sflush_r>
81001321:	83 c4 10             	add    $0x10,%esp
81001324:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001327:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100132a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100132d:	c9                   	leave  
8100132e:	c3                   	ret    

8100132f <fflush>:
8100132f:	55                   	push   %ebp
81001330:	89 e5                	mov    %esp,%ebp
81001332:	83 ec 08             	sub    $0x8,%esp
81001335:	8b 55 08             	mov    0x8(%ebp),%edx
81001338:	85 d2                	test   %edx,%edx
8100133a:	75 18                	jne    81001354 <fflush+0x25>
8100133c:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001341:	83 ec 08             	sub    $0x8,%esp
81001344:	68 d7 12 00 81       	push   $0x810012d7
81001349:	50                   	push   %eax
8100134a:	e8 bd 1a 00 00       	call   81002e0c <_fwalk_reent>
8100134f:	83 c4 10             	add    $0x10,%esp
81001352:	eb 12                	jmp    81001366 <fflush+0x37>
81001354:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001359:	83 ec 08             	sub    $0x8,%esp
8100135c:	52                   	push   %edx
8100135d:	50                   	push   %eax
8100135e:	e8 74 ff ff ff       	call   810012d7 <_fflush_r>
81001363:	83 c4 10             	add    $0x10,%esp
81001366:	c9                   	leave  
81001367:	c3                   	ret    

81001368 <_fgetc_r>:
81001368:	55                   	push   %ebp
81001369:	89 e5                	mov    %esp,%ebp
8100136b:	83 ec 18             	sub    $0x18,%esp
8100136e:	8b 45 08             	mov    0x8(%ebp),%eax
81001371:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001374:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001378:	74 18                	je     81001392 <_fgetc_r+0x2a>
8100137a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100137d:	8b 40 38             	mov    0x38(%eax),%eax
81001380:	85 c0                	test   %eax,%eax
81001382:	75 0e                	jne    81001392 <_fgetc_r+0x2a>
81001384:	83 ec 0c             	sub    $0xc,%esp
81001387:	ff 75 f4             	pushl  -0xc(%ebp)
8100138a:	e8 35 05 00 00       	call   810018c4 <__sinit>
8100138f:	83 c4 10             	add    $0x10,%esp
81001392:	8b 45 0c             	mov    0xc(%ebp),%eax
81001395:	8b 40 04             	mov    0x4(%eax),%eax
81001398:	8d 50 ff             	lea    -0x1(%eax),%edx
8100139b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100139e:	89 50 04             	mov    %edx,0x4(%eax)
810013a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810013a4:	8b 40 04             	mov    0x4(%eax),%eax
810013a7:	85 c0                	test   %eax,%eax
810013a9:	79 13                	jns    810013be <_fgetc_r+0x56>
810013ab:	83 ec 08             	sub    $0x8,%esp
810013ae:	ff 75 0c             	pushl  0xc(%ebp)
810013b1:	ff 75 08             	pushl  0x8(%ebp)
810013b4:	e8 d0 51 00 00       	call   81006589 <__srget_r>
810013b9:	83 c4 10             	add    $0x10,%esp
810013bc:	eb 13                	jmp    810013d1 <_fgetc_r+0x69>
810013be:	8b 45 0c             	mov    0xc(%ebp),%eax
810013c1:	8b 00                	mov    (%eax),%eax
810013c3:	8d 48 01             	lea    0x1(%eax),%ecx
810013c6:	8b 55 0c             	mov    0xc(%ebp),%edx
810013c9:	89 0a                	mov    %ecx,(%edx)
810013cb:	0f b6 00             	movzbl (%eax),%eax
810013ce:	0f b6 c0             	movzbl %al,%eax
810013d1:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013d4:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013d7:	c9                   	leave  
810013d8:	c3                   	ret    

810013d9 <fgetc>:
810013d9:	55                   	push   %ebp
810013da:	89 e5                	mov    %esp,%ebp
810013dc:	83 ec 18             	sub    $0x18,%esp
810013df:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810013e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810013e7:	8b 45 f4             	mov    -0xc(%ebp),%eax
810013ea:	89 45 f0             	mov    %eax,-0x10(%ebp)
810013ed:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
810013f1:	74 18                	je     8100140b <fgetc+0x32>
810013f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810013f6:	8b 40 38             	mov    0x38(%eax),%eax
810013f9:	85 c0                	test   %eax,%eax
810013fb:	75 0e                	jne    8100140b <fgetc+0x32>
810013fd:	83 ec 0c             	sub    $0xc,%esp
81001400:	ff 75 f0             	pushl  -0x10(%ebp)
81001403:	e8 bc 04 00 00       	call   810018c4 <__sinit>
81001408:	83 c4 10             	add    $0x10,%esp
8100140b:	8b 45 08             	mov    0x8(%ebp),%eax
8100140e:	8b 40 04             	mov    0x4(%eax),%eax
81001411:	8d 50 ff             	lea    -0x1(%eax),%edx
81001414:	8b 45 08             	mov    0x8(%ebp),%eax
81001417:	89 50 04             	mov    %edx,0x4(%eax)
8100141a:	8b 45 08             	mov    0x8(%ebp),%eax
8100141d:	8b 40 04             	mov    0x4(%eax),%eax
81001420:	85 c0                	test   %eax,%eax
81001422:	79 13                	jns    81001437 <fgetc+0x5e>
81001424:	83 ec 08             	sub    $0x8,%esp
81001427:	ff 75 08             	pushl  0x8(%ebp)
8100142a:	ff 75 f4             	pushl  -0xc(%ebp)
8100142d:	e8 57 51 00 00       	call   81006589 <__srget_r>
81001432:	83 c4 10             	add    $0x10,%esp
81001435:	eb 13                	jmp    8100144a <fgetc+0x71>
81001437:	8b 45 08             	mov    0x8(%ebp),%eax
8100143a:	8b 00                	mov    (%eax),%eax
8100143c:	8d 48 01             	lea    0x1(%eax),%ecx
8100143f:	8b 55 08             	mov    0x8(%ebp),%edx
81001442:	89 0a                	mov    %ecx,(%edx)
81001444:	0f b6 00             	movzbl (%eax),%eax
81001447:	0f b6 c0             	movzbl %al,%eax
8100144a:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100144d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001450:	c9                   	leave  
81001451:	c3                   	ret    

81001452 <_fgets_r>:
81001452:	55                   	push   %ebp
81001453:	89 e5                	mov    %esp,%ebp
81001455:	83 ec 28             	sub    $0x28,%esp
81001458:	83 7d 10 01          	cmpl   $0x1,0x10(%ebp)
8100145c:	7f 0a                	jg     81001468 <_fgets_r+0x16>
8100145e:	b8 00 00 00 00       	mov    $0x0,%eax
81001463:	e9 46 01 00 00       	jmp    810015ae <_fgets_r+0x15c>
81001468:	8b 45 0c             	mov    0xc(%ebp),%eax
8100146b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100146e:	8b 45 08             	mov    0x8(%ebp),%eax
81001471:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001474:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81001478:	74 18                	je     81001492 <_fgets_r+0x40>
8100147a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100147d:	8b 40 38             	mov    0x38(%eax),%eax
81001480:	85 c0                	test   %eax,%eax
81001482:	75 0e                	jne    81001492 <_fgets_r+0x40>
81001484:	83 ec 0c             	sub    $0xc,%esp
81001487:	ff 75 ec             	pushl  -0x14(%ebp)
8100148a:	e8 35 04 00 00       	call   810018c4 <__sinit>
8100148f:	83 c4 10             	add    $0x10,%esp
81001492:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
81001496:	8b 45 14             	mov    0x14(%ebp),%eax
81001499:	8b 40 04             	mov    0x4(%eax),%eax
8100149c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100149f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810014a3:	75 34                	jne    810014d9 <_fgets_r+0x87>
810014a5:	83 ec 08             	sub    $0x8,%esp
810014a8:	ff 75 14             	pushl  0x14(%ebp)
810014ab:	ff 75 08             	pushl  0x8(%ebp)
810014ae:	e8 d5 4e 00 00       	call   81006388 <__srefill_r>
810014b3:	83 c4 10             	add    $0x10,%esp
810014b6:	85 c0                	test   %eax,%eax
810014b8:	74 16                	je     810014d0 <_fgets_r+0x7e>
810014ba:	8b 45 f0             	mov    -0x10(%ebp),%eax
810014bd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810014c0:	0f 85 de 00 00 00    	jne    810015a4 <_fgets_r+0x152>
810014c6:	b8 00 00 00 00       	mov    $0x0,%eax
810014cb:	e9 de 00 00 00       	jmp    810015ae <_fgets_r+0x15c>
810014d0:	8b 45 14             	mov    0x14(%ebp),%eax
810014d3:	8b 40 04             	mov    0x4(%eax),%eax
810014d6:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014d9:	8b 45 14             	mov    0x14(%ebp),%eax
810014dc:	8b 00                	mov    (%eax),%eax
810014de:	89 45 e8             	mov    %eax,-0x18(%ebp)
810014e1:	8b 45 10             	mov    0x10(%ebp),%eax
810014e4:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810014e7:	76 06                	jbe    810014ef <_fgets_r+0x9d>
810014e9:	8b 45 10             	mov    0x10(%ebp),%eax
810014ec:	89 45 f4             	mov    %eax,-0xc(%ebp)
810014ef:	83 ec 04             	sub    $0x4,%esp
810014f2:	ff 75 f4             	pushl  -0xc(%ebp)
810014f5:	6a 0a                	push   $0xa
810014f7:	ff 75 e8             	pushl  -0x18(%ebp)
810014fa:	e8 b1 34 00 00       	call   810049b0 <memchr>
810014ff:	83 c4 10             	add    $0x10,%esp
81001502:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001505:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001509:	74 4a                	je     81001555 <_fgets_r+0x103>
8100150b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100150f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001512:	2b 45 e8             	sub    -0x18(%ebp),%eax
81001515:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001518:	8b 45 14             	mov    0x14(%ebp),%eax
8100151b:	8b 40 04             	mov    0x4(%eax),%eax
8100151e:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001521:	89 c2                	mov    %eax,%edx
81001523:	8b 45 14             	mov    0x14(%ebp),%eax
81001526:	89 50 04             	mov    %edx,0x4(%eax)
81001529:	8b 45 14             	mov    0x14(%ebp),%eax
8100152c:	8b 55 e4             	mov    -0x1c(%ebp),%edx
8100152f:	89 10                	mov    %edx,(%eax)
81001531:	83 ec 04             	sub    $0x4,%esp
81001534:	ff 75 f4             	pushl  -0xc(%ebp)
81001537:	ff 75 e8             	pushl  -0x18(%ebp)
8100153a:	ff 75 f0             	pushl  -0x10(%ebp)
8100153d:	e8 56 35 00 00       	call   81004a98 <memcpy>
81001542:	83 c4 10             	add    $0x10,%esp
81001545:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001548:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100154b:	01 d0                	add    %edx,%eax
8100154d:	c6 00 00             	movb   $0x0,(%eax)
81001550:	8b 45 0c             	mov    0xc(%ebp),%eax
81001553:	eb 59                	jmp    810015ae <_fgets_r+0x15c>
81001555:	8b 45 14             	mov    0x14(%ebp),%eax
81001558:	8b 40 04             	mov    0x4(%eax),%eax
8100155b:	2b 45 f4             	sub    -0xc(%ebp),%eax
8100155e:	89 c2                	mov    %eax,%edx
81001560:	8b 45 14             	mov    0x14(%ebp),%eax
81001563:	89 50 04             	mov    %edx,0x4(%eax)
81001566:	8b 45 14             	mov    0x14(%ebp),%eax
81001569:	8b 10                	mov    (%eax),%edx
8100156b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100156e:	01 c2                	add    %eax,%edx
81001570:	8b 45 14             	mov    0x14(%ebp),%eax
81001573:	89 10                	mov    %edx,(%eax)
81001575:	83 ec 04             	sub    $0x4,%esp
81001578:	ff 75 f4             	pushl  -0xc(%ebp)
8100157b:	ff 75 e8             	pushl  -0x18(%ebp)
8100157e:	ff 75 f0             	pushl  -0x10(%ebp)
81001581:	e8 12 35 00 00       	call   81004a98 <memcpy>
81001586:	83 c4 10             	add    $0x10,%esp
81001589:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100158c:	01 45 f0             	add    %eax,-0x10(%ebp)
8100158f:	8b 45 10             	mov    0x10(%ebp),%eax
81001592:	2b 45 f4             	sub    -0xc(%ebp),%eax
81001595:	89 45 10             	mov    %eax,0x10(%ebp)
81001598:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
8100159c:	0f 85 f4 fe ff ff    	jne    81001496 <_fgets_r+0x44>
810015a2:	eb 01                	jmp    810015a5 <_fgets_r+0x153>
810015a4:	90                   	nop
810015a5:	8b 45 f0             	mov    -0x10(%ebp),%eax
810015a8:	c6 00 00             	movb   $0x0,(%eax)
810015ab:	8b 45 0c             	mov    0xc(%ebp),%eax
810015ae:	c9                   	leave  
810015af:	c3                   	ret    

810015b0 <fgets>:
810015b0:	55                   	push   %ebp
810015b1:	89 e5                	mov    %esp,%ebp
810015b3:	83 ec 08             	sub    $0x8,%esp
810015b6:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810015bb:	ff 75 10             	pushl  0x10(%ebp)
810015be:	ff 75 0c             	pushl  0xc(%ebp)
810015c1:	ff 75 08             	pushl  0x8(%ebp)
810015c4:	50                   	push   %eax
810015c5:	e8 88 fe ff ff       	call   81001452 <_fgets_r>
810015ca:	83 c4 10             	add    $0x10,%esp
810015cd:	c9                   	leave  
810015ce:	c3                   	ret    

810015cf <std>:
810015cf:	55                   	push   %ebp
810015d0:	89 e5                	mov    %esp,%ebp
810015d2:	83 ec 08             	sub    $0x8,%esp
810015d5:	8b 45 08             	mov    0x8(%ebp),%eax
810015d8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
810015de:	8b 45 08             	mov    0x8(%ebp),%eax
810015e1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
810015e8:	8b 45 08             	mov    0x8(%ebp),%eax
810015eb:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
810015f2:	8b 45 0c             	mov    0xc(%ebp),%eax
810015f5:	89 c2                	mov    %eax,%edx
810015f7:	8b 45 08             	mov    0x8(%ebp),%eax
810015fa:	66 89 50 0c          	mov    %dx,0xc(%eax)
810015fe:	8b 45 08             	mov    0x8(%ebp),%eax
81001601:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001608:	8b 45 10             	mov    0x10(%ebp),%eax
8100160b:	89 c2                	mov    %eax,%edx
8100160d:	8b 45 08             	mov    0x8(%ebp),%eax
81001610:	66 89 50 0e          	mov    %dx,0xe(%eax)
81001614:	8b 45 08             	mov    0x8(%ebp),%eax
81001617:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
8100161e:	8b 45 08             	mov    0x8(%ebp),%eax
81001621:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
81001628:	8b 45 08             	mov    0x8(%ebp),%eax
8100162b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001632:	8b 45 08             	mov    0x8(%ebp),%eax
81001635:	83 c0 5c             	add    $0x5c,%eax
81001638:	83 ec 04             	sub    $0x4,%esp
8100163b:	6a 08                	push   $0x8
8100163d:	6a 00                	push   $0x0
8100163f:	50                   	push   %eax
81001640:	e8 28 35 00 00       	call   81004b6d <memset>
81001645:	83 c4 10             	add    $0x10,%esp
81001648:	8b 45 08             	mov    0x8(%ebp),%eax
8100164b:	8b 55 08             	mov    0x8(%ebp),%edx
8100164e:	89 50 1c             	mov    %edx,0x1c(%eax)
81001651:	8b 45 08             	mov    0x8(%ebp),%eax
81001654:	c7 40 20 02 69 00 81 	movl   $0x81006902,0x20(%eax)
8100165b:	8b 45 08             	mov    0x8(%ebp),%eax
8100165e:	c7 40 24 50 69 00 81 	movl   $0x81006950,0x24(%eax)
81001665:	8b 45 08             	mov    0x8(%ebp),%eax
81001668:	c7 40 28 ab 69 00 81 	movl   $0x810069ab,0x28(%eax)
8100166f:	8b 45 08             	mov    0x8(%ebp),%eax
81001672:	c7 40 2c f5 69 00 81 	movl   $0x810069f5,0x2c(%eax)
81001679:	90                   	nop
8100167a:	c9                   	leave  
8100167b:	c3                   	ret    

8100167c <stdin_init>:
8100167c:	55                   	push   %ebp
8100167d:	89 e5                	mov    %esp,%ebp
8100167f:	83 ec 08             	sub    $0x8,%esp
81001682:	83 ec 04             	sub    $0x4,%esp
81001685:	6a 00                	push   $0x0
81001687:	6a 04                	push   $0x4
81001689:	ff 75 08             	pushl  0x8(%ebp)
8100168c:	e8 3e ff ff ff       	call   810015cf <std>
81001691:	83 c4 10             	add    $0x10,%esp
81001694:	90                   	nop
81001695:	c9                   	leave  
81001696:	c3                   	ret    

81001697 <stdout_init>:
81001697:	55                   	push   %ebp
81001698:	89 e5                	mov    %esp,%ebp
8100169a:	83 ec 08             	sub    $0x8,%esp
8100169d:	83 ec 04             	sub    $0x4,%esp
810016a0:	6a 01                	push   $0x1
810016a2:	6a 09                	push   $0x9
810016a4:	ff 75 08             	pushl  0x8(%ebp)
810016a7:	e8 23 ff ff ff       	call   810015cf <std>
810016ac:	83 c4 10             	add    $0x10,%esp
810016af:	90                   	nop
810016b0:	c9                   	leave  
810016b1:	c3                   	ret    

810016b2 <stderr_init>:
810016b2:	55                   	push   %ebp
810016b3:	89 e5                	mov    %esp,%ebp
810016b5:	83 ec 08             	sub    $0x8,%esp
810016b8:	83 ec 04             	sub    $0x4,%esp
810016bb:	6a 02                	push   $0x2
810016bd:	6a 12                	push   $0x12
810016bf:	ff 75 08             	pushl  0x8(%ebp)
810016c2:	e8 08 ff ff ff       	call   810015cf <std>
810016c7:	83 c4 10             	add    $0x10,%esp
810016ca:	90                   	nop
810016cb:	c9                   	leave  
810016cc:	c3                   	ret    

810016cd <__sfmoreglue>:
810016cd:	55                   	push   %ebp
810016ce:	89 e5                	mov    %esp,%ebp
810016d0:	53                   	push   %ebx
810016d1:	83 ec 14             	sub    $0x14,%esp
810016d4:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810016d7:	8d 43 ff             	lea    -0x1(%ebx),%eax
810016da:	6b c0 68             	imul   $0x68,%eax,%eax
810016dd:	83 c0 74             	add    $0x74,%eax
810016e0:	83 ec 08             	sub    $0x8,%esp
810016e3:	50                   	push   %eax
810016e4:	ff 75 08             	pushl  0x8(%ebp)
810016e7:	e8 a2 2a 00 00       	call   8100418e <_malloc_r>
810016ec:	83 c4 10             	add    $0x10,%esp
810016ef:	89 45 f4             	mov    %eax,-0xc(%ebp)
810016f2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810016f6:	75 07                	jne    810016ff <__sfmoreglue+0x32>
810016f8:	b8 00 00 00 00       	mov    $0x0,%eax
810016fd:	eb 38                	jmp    81001737 <__sfmoreglue+0x6a>
810016ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001702:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001708:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100170b:	89 58 04             	mov    %ebx,0x4(%eax)
8100170e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001711:	8d 50 0c             	lea    0xc(%eax),%edx
81001714:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001717:	89 50 08             	mov    %edx,0x8(%eax)
8100171a:	89 d8                	mov    %ebx,%eax
8100171c:	6b c0 68             	imul   $0x68,%eax,%eax
8100171f:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001722:	83 c2 0c             	add    $0xc,%edx
81001725:	83 ec 04             	sub    $0x4,%esp
81001728:	50                   	push   %eax
81001729:	6a 00                	push   $0x0
8100172b:	52                   	push   %edx
8100172c:	e8 3c 34 00 00       	call   81004b6d <memset>
81001731:	83 c4 10             	add    $0x10,%esp
81001734:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001737:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100173a:	c9                   	leave  
8100173b:	c3                   	ret    

8100173c <__sfp>:
8100173c:	55                   	push   %ebp
8100173d:	89 e5                	mov    %esp,%ebp
8100173f:	83 ec 18             	sub    $0x18,%esp
81001742:	e8 16 02 00 00       	call   8100195d <__sfp_lock_acquire>
81001747:	a1 e4 88 00 81       	mov    0x810088e4,%eax
8100174c:	8b 40 38             	mov    0x38(%eax),%eax
8100174f:	85 c0                	test   %eax,%eax
81001751:	75 11                	jne    81001764 <__sfp+0x28>
81001753:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001758:	83 ec 0c             	sub    $0xc,%esp
8100175b:	50                   	push   %eax
8100175c:	e8 63 01 00 00       	call   810018c4 <__sinit>
81001761:	83 c4 10             	add    $0x10,%esp
81001764:	a1 e4 88 00 81       	mov    0x810088e4,%eax
81001769:	05 e0 02 00 00       	add    $0x2e0,%eax
8100176e:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001771:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001774:	8b 40 08             	mov    0x8(%eax),%eax
81001777:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100177a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100177d:	8b 40 04             	mov    0x4(%eax),%eax
81001780:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001783:	eb 10                	jmp    81001795 <__sfp+0x59>
81001785:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001788:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100178c:	66 85 c0             	test   %ax,%ax
8100178f:	74 58                	je     810017e9 <__sfp+0xad>
81001791:	83 45 f4 68          	addl   $0x68,-0xc(%ebp)
81001795:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
81001799:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100179d:	79 e6                	jns    81001785 <__sfp+0x49>
8100179f:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017a2:	8b 00                	mov    (%eax),%eax
810017a4:	85 c0                	test   %eax,%eax
810017a6:	75 1e                	jne    810017c6 <__sfp+0x8a>
810017a8:	83 ec 08             	sub    $0x8,%esp
810017ab:	6a 04                	push   $0x4
810017ad:	ff 75 08             	pushl  0x8(%ebp)
810017b0:	e8 18 ff ff ff       	call   810016cd <__sfmoreglue>
810017b5:	83 c4 10             	add    $0x10,%esp
810017b8:	8b 55 ec             	mov    -0x14(%ebp),%edx
810017bb:	89 02                	mov    %eax,(%edx)
810017bd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017c0:	8b 00                	mov    (%eax),%eax
810017c2:	85 c0                	test   %eax,%eax
810017c4:	74 0a                	je     810017d0 <__sfp+0x94>
810017c6:	8b 45 ec             	mov    -0x14(%ebp),%eax
810017c9:	8b 00                	mov    (%eax),%eax
810017cb:	89 45 ec             	mov    %eax,-0x14(%ebp)
810017ce:	eb a1                	jmp    81001771 <__sfp+0x35>
810017d0:	90                   	nop
810017d1:	e8 8d 01 00 00       	call   81001963 <__sfp_lock_release>
810017d6:	8b 45 08             	mov    0x8(%ebp),%eax
810017d9:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810017df:	b8 00 00 00 00       	mov    $0x0,%eax
810017e4:	e9 9e 00 00 00       	jmp    81001887 <__sfp+0x14b>
810017e9:	90                   	nop
810017ea:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ed:	66 c7 40 0e ff ff    	movw   $0xffff,0xe(%eax)
810017f3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017f6:	66 c7 40 0c 01 00    	movw   $0x1,0xc(%eax)
810017fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810017ff:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)
81001806:	e8 58 01 00 00       	call   81001963 <__sfp_lock_release>
8100180b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100180e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81001814:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001817:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
8100181e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001821:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001828:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100182b:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81001832:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001835:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
8100183c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100183f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81001846:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001849:	83 c0 5c             	add    $0x5c,%eax
8100184c:	83 ec 04             	sub    $0x4,%esp
8100184f:	6a 08                	push   $0x8
81001851:	6a 00                	push   $0x0
81001853:	50                   	push   %eax
81001854:	e8 14 33 00 00       	call   81004b6d <memset>
81001859:	83 c4 10             	add    $0x10,%esp
8100185c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100185f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001866:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001869:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
81001870:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001873:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)
8100187a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100187d:	c7 40 48 00 00 00 00 	movl   $0x0,0x48(%eax)
81001884:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001887:	c9                   	leave  
81001888:	c3                   	ret    

81001889 <_cleanup_r>:
81001889:	55                   	push   %ebp
8100188a:	89 e5                	mov    %esp,%ebp
8100188c:	83 ec 18             	sub    $0x18,%esp
8100188f:	c7 45 f4 8d 0f 00 81 	movl   $0x81000f8d,-0xc(%ebp)
81001896:	83 ec 08             	sub    $0x8,%esp
81001899:	ff 75 f4             	pushl  -0xc(%ebp)
8100189c:	ff 75 08             	pushl  0x8(%ebp)
8100189f:	e8 68 15 00 00       	call   81002e0c <_fwalk_reent>
810018a4:	83 c4 10             	add    $0x10,%esp
810018a7:	90                   	nop
810018a8:	c9                   	leave  
810018a9:	c3                   	ret    

810018aa <_cleanup>:
810018aa:	55                   	push   %ebp
810018ab:	89 e5                	mov    %esp,%ebp
810018ad:	83 ec 08             	sub    $0x8,%esp
810018b0:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810018b5:	83 ec 0c             	sub    $0xc,%esp
810018b8:	50                   	push   %eax
810018b9:	e8 cb ff ff ff       	call   81001889 <_cleanup_r>
810018be:	83 c4 10             	add    $0x10,%esp
810018c1:	90                   	nop
810018c2:	c9                   	leave  
810018c3:	c3                   	ret    

810018c4 <__sinit>:
810018c4:	55                   	push   %ebp
810018c5:	89 e5                	mov    %esp,%ebp
810018c7:	83 ec 08             	sub    $0x8,%esp
810018ca:	e8 9a 00 00 00       	call   81001969 <__sinit_lock_acquire>
810018cf:	8b 45 08             	mov    0x8(%ebp),%eax
810018d2:	8b 40 38             	mov    0x38(%eax),%eax
810018d5:	85 c0                	test   %eax,%eax
810018d7:	74 07                	je     810018e0 <__sinit+0x1c>
810018d9:	e8 91 00 00 00       	call   8100196f <__sinit_lock_release>
810018de:	eb 7b                	jmp    8100195b <__sinit+0x97>
810018e0:	8b 45 08             	mov    0x8(%ebp),%eax
810018e3:	c7 40 3c 89 18 00 81 	movl   $0x81001889,0x3c(%eax)
810018ea:	8b 45 08             	mov    0x8(%ebp),%eax
810018ed:	c7 80 e0 02 00 00 00 	movl   $0x0,0x2e0(%eax)
810018f4:	00 00 00 
810018f7:	8b 45 08             	mov    0x8(%ebp),%eax
810018fa:	c7 80 e4 02 00 00 03 	movl   $0x3,0x2e4(%eax)
81001901:	00 00 00 
81001904:	8b 45 08             	mov    0x8(%ebp),%eax
81001907:	8d 90 ec 02 00 00    	lea    0x2ec(%eax),%edx
8100190d:	8b 45 08             	mov    0x8(%ebp),%eax
81001910:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%eax)
81001916:	8b 45 08             	mov    0x8(%ebp),%eax
81001919:	8b 40 04             	mov    0x4(%eax),%eax
8100191c:	83 ec 0c             	sub    $0xc,%esp
8100191f:	50                   	push   %eax
81001920:	e8 57 fd ff ff       	call   8100167c <stdin_init>
81001925:	83 c4 10             	add    $0x10,%esp
81001928:	8b 45 08             	mov    0x8(%ebp),%eax
8100192b:	8b 40 08             	mov    0x8(%eax),%eax
8100192e:	83 ec 0c             	sub    $0xc,%esp
81001931:	50                   	push   %eax
81001932:	e8 60 fd ff ff       	call   81001697 <stdout_init>
81001937:	83 c4 10             	add    $0x10,%esp
8100193a:	8b 45 08             	mov    0x8(%ebp),%eax
8100193d:	8b 40 0c             	mov    0xc(%eax),%eax
81001940:	83 ec 0c             	sub    $0xc,%esp
81001943:	50                   	push   %eax
81001944:	e8 69 fd ff ff       	call   810016b2 <stderr_init>
81001949:	83 c4 10             	add    $0x10,%esp
8100194c:	8b 45 08             	mov    0x8(%ebp),%eax
8100194f:	c7 40 38 01 00 00 00 	movl   $0x1,0x38(%eax)
81001956:	e8 14 00 00 00       	call   8100196f <__sinit_lock_release>
8100195b:	c9                   	leave  
8100195c:	c3                   	ret    

8100195d <__sfp_lock_acquire>:
8100195d:	55                   	push   %ebp
8100195e:	89 e5                	mov    %esp,%ebp
81001960:	90                   	nop
81001961:	5d                   	pop    %ebp
81001962:	c3                   	ret    

81001963 <__sfp_lock_release>:
81001963:	55                   	push   %ebp
81001964:	89 e5                	mov    %esp,%ebp
81001966:	90                   	nop
81001967:	5d                   	pop    %ebp
81001968:	c3                   	ret    

81001969 <__sinit_lock_acquire>:
81001969:	55                   	push   %ebp
8100196a:	89 e5                	mov    %esp,%ebp
8100196c:	90                   	nop
8100196d:	5d                   	pop    %ebp
8100196e:	c3                   	ret    

8100196f <__sinit_lock_release>:
8100196f:	55                   	push   %ebp
81001970:	89 e5                	mov    %esp,%ebp
81001972:	90                   	nop
81001973:	5d                   	pop    %ebp
81001974:	c3                   	ret    

81001975 <__fp_lock>:
81001975:	55                   	push   %ebp
81001976:	89 e5                	mov    %esp,%ebp
81001978:	b8 00 00 00 00       	mov    $0x0,%eax
8100197d:	5d                   	pop    %ebp
8100197e:	c3                   	ret    

8100197f <__fp_unlock>:
8100197f:	55                   	push   %ebp
81001980:	89 e5                	mov    %esp,%ebp
81001982:	b8 00 00 00 00       	mov    $0x0,%eax
81001987:	5d                   	pop    %ebp
81001988:	c3                   	ret    

81001989 <__fp_lock_all>:
81001989:	55                   	push   %ebp
8100198a:	89 e5                	mov    %esp,%ebp
8100198c:	83 ec 08             	sub    $0x8,%esp
8100198f:	e8 c9 ff ff ff       	call   8100195d <__sfp_lock_acquire>
81001994:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001999:	83 ec 08             	sub    $0x8,%esp
8100199c:	68 75 19 00 81       	push   $0x81001975
810019a1:	50                   	push   %eax
810019a2:	e8 fd 13 00 00       	call   81002da4 <_fwalk>
810019a7:	83 c4 10             	add    $0x10,%esp
810019aa:	90                   	nop
810019ab:	c9                   	leave  
810019ac:	c3                   	ret    

810019ad <__fp_unlock_all>:
810019ad:	55                   	push   %ebp
810019ae:	89 e5                	mov    %esp,%ebp
810019b0:	83 ec 08             	sub    $0x8,%esp
810019b3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810019b8:	83 ec 08             	sub    $0x8,%esp
810019bb:	68 7f 19 00 81       	push   $0x8100197f
810019c0:	50                   	push   %eax
810019c1:	e8 de 13 00 00       	call   81002da4 <_fwalk>
810019c6:	83 c4 10             	add    $0x10,%esp
810019c9:	e8 95 ff ff ff       	call   81001963 <__sfp_lock_release>
810019ce:	90                   	nop
810019cf:	c9                   	leave  
810019d0:	c3                   	ret    

810019d1 <_fopen_r>:
810019d1:	55                   	push   %ebp
810019d2:	89 e5                	mov    %esp,%ebp
810019d4:	56                   	push   %esi
810019d5:	53                   	push   %ebx
810019d6:	83 ec 10             	sub    $0x10,%esp
810019d9:	83 ec 04             	sub    $0x4,%esp
810019dc:	8d 45 f0             	lea    -0x10(%ebp),%eax
810019df:	50                   	push   %eax
810019e0:	ff 75 10             	pushl  0x10(%ebp)
810019e3:	ff 75 08             	pushl  0x8(%ebp)
810019e6:	e8 4f 5a 00 00       	call   8100743a <__sflags>
810019eb:	83 c4 10             	add    $0x10,%esp
810019ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810019f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810019f5:	75 0a                	jne    81001a01 <_fopen_r+0x30>
810019f7:	b8 00 00 00 00       	mov    $0x0,%eax
810019fc:	e9 9e 00 00 00       	jmp    81001a9f <_fopen_r+0xce>
81001a01:	83 ec 0c             	sub    $0xc,%esp
81001a04:	ff 75 08             	pushl  0x8(%ebp)
81001a07:	e8 30 fd ff ff       	call   8100173c <__sfp>
81001a0c:	83 c4 10             	add    $0x10,%esp
81001a0f:	89 c3                	mov    %eax,%ebx
81001a11:	85 db                	test   %ebx,%ebx
81001a13:	75 0a                	jne    81001a1f <_fopen_r+0x4e>
81001a15:	b8 00 00 00 00       	mov    $0x0,%eax
81001a1a:	e9 80 00 00 00       	jmp    81001a9f <_fopen_r+0xce>
81001a1f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001a22:	68 b6 01 00 00       	push   $0x1b6
81001a27:	50                   	push   %eax
81001a28:	ff 75 0c             	pushl  0xc(%ebp)
81001a2b:	ff 75 08             	pushl  0x8(%ebp)
81001a2e:	e8 1d 3d 00 00       	call   81005750 <_open_r>
81001a33:	83 c4 10             	add    $0x10,%esp
81001a36:	89 c6                	mov    %eax,%esi
81001a38:	85 f6                	test   %esi,%esi
81001a3a:	79 17                	jns    81001a53 <_fopen_r+0x82>
81001a3c:	e8 1c ff ff ff       	call   8100195d <__sfp_lock_acquire>
81001a41:	66 c7 43 0c 00 00    	movw   $0x0,0xc(%ebx)
81001a47:	e8 17 ff ff ff       	call   81001963 <__sfp_lock_release>
81001a4c:	b8 00 00 00 00       	mov    $0x0,%eax
81001a51:	eb 4c                	jmp    81001a9f <_fopen_r+0xce>
81001a53:	89 f0                	mov    %esi,%eax
81001a55:	66 89 43 0e          	mov    %ax,0xe(%ebx)
81001a59:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001a5c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81001a60:	89 5b 1c             	mov    %ebx,0x1c(%ebx)
81001a63:	c7 43 20 02 69 00 81 	movl   $0x81006902,0x20(%ebx)
81001a6a:	c7 43 24 50 69 00 81 	movl   $0x81006950,0x24(%ebx)
81001a71:	c7 43 28 ab 69 00 81 	movl   $0x810069ab,0x28(%ebx)
81001a78:	c7 43 2c f5 69 00 81 	movl   $0x810069f5,0x2c(%ebx)
81001a7f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81001a83:	98                   	cwtl   
81001a84:	25 00 01 00 00       	and    $0x100,%eax
81001a89:	85 c0                	test   %eax,%eax
81001a8b:	74 10                	je     81001a9d <_fopen_r+0xcc>
81001a8d:	6a 02                	push   $0x2
81001a8f:	6a 00                	push   $0x0
81001a91:	53                   	push   %ebx
81001a92:	ff 75 08             	pushl  0x8(%ebp)
81001a95:	e8 1b 09 00 00       	call   810023b5 <_fseek_r>
81001a9a:	83 c4 10             	add    $0x10,%esp
81001a9d:	89 d8                	mov    %ebx,%eax
81001a9f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81001aa2:	5b                   	pop    %ebx
81001aa3:	5e                   	pop    %esi
81001aa4:	5d                   	pop    %ebp
81001aa5:	c3                   	ret    

81001aa6 <fopen>:
81001aa6:	55                   	push   %ebp
81001aa7:	89 e5                	mov    %esp,%ebp
81001aa9:	83 ec 08             	sub    $0x8,%esp
81001aac:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001ab1:	83 ec 04             	sub    $0x4,%esp
81001ab4:	ff 75 0c             	pushl  0xc(%ebp)
81001ab7:	ff 75 08             	pushl  0x8(%ebp)
81001aba:	50                   	push   %eax
81001abb:	e8 11 ff ff ff       	call   810019d1 <_fopen_r>
81001ac0:	83 c4 10             	add    $0x10,%esp
81001ac3:	c9                   	leave  
81001ac4:	c3                   	ret    

81001ac5 <_fiprintf_r>:
81001ac5:	55                   	push   %ebp
81001ac6:	89 e5                	mov    %esp,%ebp
81001ac8:	83 ec 18             	sub    $0x18,%esp
81001acb:	8d 45 14             	lea    0x14(%ebp),%eax
81001ace:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001ad1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001ad4:	50                   	push   %eax
81001ad5:	ff 75 10             	pushl  0x10(%ebp)
81001ad8:	ff 75 0c             	pushl  0xc(%ebp)
81001adb:	ff 75 08             	pushl  0x8(%ebp)
81001ade:	e8 2d 33 00 00       	call   81004e10 <_vfiprintf_r>
81001ae3:	83 c4 10             	add    $0x10,%esp
81001ae6:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ae9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001aec:	c9                   	leave  
81001aed:	c3                   	ret    

81001aee <fiprintf>:
81001aee:	55                   	push   %ebp
81001aef:	89 e5                	mov    %esp,%ebp
81001af1:	83 ec 18             	sub    $0x18,%esp
81001af4:	8d 45 10             	lea    0x10(%ebp),%eax
81001af7:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001afa:	8b 55 f0             	mov    -0x10(%ebp),%edx
81001afd:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001b02:	52                   	push   %edx
81001b03:	ff 75 0c             	pushl  0xc(%ebp)
81001b06:	ff 75 08             	pushl  0x8(%ebp)
81001b09:	50                   	push   %eax
81001b0a:	e8 01 33 00 00       	call   81004e10 <_vfiprintf_r>
81001b0f:	83 c4 10             	add    $0x10,%esp
81001b12:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b15:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b18:	c9                   	leave  
81001b19:	c3                   	ret    

81001b1a <_fputs_r>:
81001b1a:	55                   	push   %ebp
81001b1b:	89 e5                	mov    %esp,%ebp
81001b1d:	83 ec 28             	sub    $0x28,%esp
81001b20:	8b 45 0c             	mov    0xc(%ebp),%eax
81001b23:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001b26:	83 ec 0c             	sub    $0xc,%esp
81001b29:	ff 75 0c             	pushl  0xc(%ebp)
81001b2c:	e8 9f 50 00 00       	call   81006bd0 <strlen>
81001b31:	83 c4 10             	add    $0x10,%esp
81001b34:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001b37:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001b3a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001b3d:	8d 45 dc             	lea    -0x24(%ebp),%eax
81001b40:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001b43:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81001b4a:	8b 45 08             	mov    0x8(%ebp),%eax
81001b4d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001b50:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81001b54:	74 18                	je     81001b6e <_fputs_r+0x54>
81001b56:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001b59:	8b 40 38             	mov    0x38(%eax),%eax
81001b5c:	85 c0                	test   %eax,%eax
81001b5e:	75 0e                	jne    81001b6e <_fputs_r+0x54>
81001b60:	83 ec 0c             	sub    $0xc,%esp
81001b63:	ff 75 f4             	pushl  -0xc(%ebp)
81001b66:	e8 59 fd ff ff       	call   810018c4 <__sinit>
81001b6b:	83 c4 10             	add    $0x10,%esp
81001b6e:	8b 45 10             	mov    0x10(%ebp),%eax
81001b71:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b75:	98                   	cwtl   
81001b76:	25 00 20 00 00       	and    $0x2000,%eax
81001b7b:	85 c0                	test   %eax,%eax
81001b7d:	75 24                	jne    81001ba3 <_fputs_r+0x89>
81001b7f:	8b 45 10             	mov    0x10(%ebp),%eax
81001b82:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001b86:	80 cc 20             	or     $0x20,%ah
81001b89:	89 c2                	mov    %eax,%edx
81001b8b:	8b 45 10             	mov    0x10(%ebp),%eax
81001b8e:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001b92:	8b 45 10             	mov    0x10(%ebp),%eax
81001b95:	8b 40 64             	mov    0x64(%eax),%eax
81001b98:	80 e4 df             	and    $0xdf,%ah
81001b9b:	89 c2                	mov    %eax,%edx
81001b9d:	8b 45 10             	mov    0x10(%ebp),%eax
81001ba0:	89 50 64             	mov    %edx,0x64(%eax)
81001ba3:	83 ec 04             	sub    $0x4,%esp
81001ba6:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81001ba9:	50                   	push   %eax
81001baa:	ff 75 10             	pushl  0x10(%ebp)
81001bad:	ff 75 08             	pushl  0x8(%ebp)
81001bb0:	e8 51 0d 00 00       	call   81002906 <__sfvwrite_r>
81001bb5:	83 c4 10             	add    $0x10,%esp
81001bb8:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001bbb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001bbe:	c9                   	leave  
81001bbf:	c3                   	ret    

81001bc0 <fputs>:
81001bc0:	55                   	push   %ebp
81001bc1:	89 e5                	mov    %esp,%ebp
81001bc3:	83 ec 08             	sub    $0x8,%esp
81001bc6:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001bcb:	83 ec 04             	sub    $0x4,%esp
81001bce:	ff 75 0c             	pushl  0xc(%ebp)
81001bd1:	ff 75 08             	pushl  0x8(%ebp)
81001bd4:	50                   	push   %eax
81001bd5:	e8 40 ff ff ff       	call   81001b1a <_fputs_r>
81001bda:	83 c4 10             	add    $0x10,%esp
81001bdd:	c9                   	leave  
81001bde:	c3                   	ret    

81001bdf <_fread_r>:
81001bdf:	55                   	push   %ebp
81001be0:	89 e5                	mov    %esp,%ebp
81001be2:	57                   	push   %edi
81001be3:	56                   	push   %esi
81001be4:	53                   	push   %ebx
81001be5:	83 ec 2c             	sub    $0x2c,%esp
81001be8:	8b 45 14             	mov    0x14(%ebp),%eax
81001beb:	0f af 45 10          	imul   0x10(%ebp),%eax
81001bef:	89 c3                	mov    %eax,%ebx
81001bf1:	85 db                	test   %ebx,%ebx
81001bf3:	75 0a                	jne    81001bff <_fread_r+0x20>
81001bf5:	b8 00 00 00 00       	mov    $0x0,%eax
81001bfa:	e9 4d 02 00 00       	jmp    81001e4c <_fread_r+0x26d>
81001bff:	8b 45 08             	mov    0x8(%ebp),%eax
81001c02:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81001c05:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001c09:	74 18                	je     81001c23 <_fread_r+0x44>
81001c0b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81001c0e:	8b 40 38             	mov    0x38(%eax),%eax
81001c11:	85 c0                	test   %eax,%eax
81001c13:	75 0e                	jne    81001c23 <_fread_r+0x44>
81001c15:	83 ec 0c             	sub    $0xc,%esp
81001c18:	ff 75 e4             	pushl  -0x1c(%ebp)
81001c1b:	e8 a4 fc ff ff       	call   810018c4 <__sinit>
81001c20:	83 c4 10             	add    $0x10,%esp
81001c23:	8b 45 18             	mov    0x18(%ebp),%eax
81001c26:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c2a:	98                   	cwtl   
81001c2b:	25 00 20 00 00       	and    $0x2000,%eax
81001c30:	85 c0                	test   %eax,%eax
81001c32:	75 24                	jne    81001c58 <_fread_r+0x79>
81001c34:	8b 45 18             	mov    0x18(%ebp),%eax
81001c37:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c3b:	80 cc 20             	or     $0x20,%ah
81001c3e:	89 c2                	mov    %eax,%edx
81001c40:	8b 45 18             	mov    0x18(%ebp),%eax
81001c43:	66 89 50 0c          	mov    %dx,0xc(%eax)
81001c47:	8b 45 18             	mov    0x18(%ebp),%eax
81001c4a:	8b 40 64             	mov    0x64(%eax),%eax
81001c4d:	80 e4 df             	and    $0xdf,%ah
81001c50:	89 c2                	mov    %eax,%edx
81001c52:	8b 45 18             	mov    0x18(%ebp),%eax
81001c55:	89 50 64             	mov    %edx,0x64(%eax)
81001c58:	8b 45 18             	mov    0x18(%ebp),%eax
81001c5b:	8b 40 04             	mov    0x4(%eax),%eax
81001c5e:	85 c0                	test   %eax,%eax
81001c60:	79 0a                	jns    81001c6c <_fread_r+0x8d>
81001c62:	8b 45 18             	mov    0x18(%ebp),%eax
81001c65:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001c6c:	89 5d e0             	mov    %ebx,-0x20(%ebp)
81001c6f:	8b 75 0c             	mov    0xc(%ebp),%esi
81001c72:	8b 45 18             	mov    0x18(%ebp),%eax
81001c75:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81001c79:	98                   	cwtl   
81001c7a:	83 e0 02             	and    $0x2,%eax
81001c7d:	85 c0                	test   %eax,%eax
81001c7f:	0f 84 88 01 00 00    	je     81001e0d <_fread_r+0x22e>
81001c85:	8b 45 18             	mov    0x18(%ebp),%eax
81001c88:	8b 40 04             	mov    0x4(%eax),%eax
81001c8b:	39 c3                	cmp    %eax,%ebx
81001c8d:	0f 46 c3             	cmovbe %ebx,%eax
81001c90:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001c93:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001c96:	8b 45 18             	mov    0x18(%ebp),%eax
81001c99:	8b 00                	mov    (%eax),%eax
81001c9b:	83 ec 04             	sub    $0x4,%esp
81001c9e:	52                   	push   %edx
81001c9f:	50                   	push   %eax
81001ca0:	56                   	push   %esi
81001ca1:	e8 f2 2d 00 00       	call   81004a98 <memcpy>
81001ca6:	83 c4 10             	add    $0x10,%esp
81001ca9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cac:	8b 10                	mov    (%eax),%edx
81001cae:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cb1:	01 c2                	add    %eax,%edx
81001cb3:	8b 45 18             	mov    0x18(%ebp),%eax
81001cb6:	89 10                	mov    %edx,(%eax)
81001cb8:	8b 45 18             	mov    0x18(%ebp),%eax
81001cbb:	8b 40 04             	mov    0x4(%eax),%eax
81001cbe:	2b 45 dc             	sub    -0x24(%ebp),%eax
81001cc1:	89 c2                	mov    %eax,%edx
81001cc3:	8b 45 18             	mov    0x18(%ebp),%eax
81001cc6:	89 50 04             	mov    %edx,0x4(%eax)
81001cc9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ccc:	01 c6                	add    %eax,%esi
81001cce:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001cd1:	29 c3                	sub    %eax,%ebx
81001cd3:	8b 45 18             	mov    0x18(%ebp),%eax
81001cd6:	8b 40 30             	mov    0x30(%eax),%eax
81001cd9:	85 c0                	test   %eax,%eax
81001cdb:	0f 84 d0 00 00 00    	je     81001db1 <_fread_r+0x1d2>
81001ce1:	85 db                	test   %ebx,%ebx
81001ce3:	0f 84 c8 00 00 00    	je     81001db1 <_fread_r+0x1d2>
81001ce9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cec:	8b 40 30             	mov    0x30(%eax),%eax
81001cef:	8b 55 18             	mov    0x18(%ebp),%edx
81001cf2:	83 c2 40             	add    $0x40,%edx
81001cf5:	39 d0                	cmp    %edx,%eax
81001cf7:	74 15                	je     81001d0e <_fread_r+0x12f>
81001cf9:	8b 45 18             	mov    0x18(%ebp),%eax
81001cfc:	8b 40 30             	mov    0x30(%eax),%eax
81001cff:	83 ec 08             	sub    $0x8,%esp
81001d02:	50                   	push   %eax
81001d03:	ff 75 08             	pushl  0x8(%ebp)
81001d06:	e8 6e 01 00 00       	call   81001e79 <_free_r>
81001d0b:	83 c4 10             	add    $0x10,%esp
81001d0e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d11:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)
81001d18:	e9 94 00 00 00       	jmp    81001db1 <_fread_r+0x1d2>
81001d1d:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81001d24:	8b 45 18             	mov    0x18(%ebp),%eax
81001d27:	8b 40 10             	mov    0x10(%eax),%eax
81001d2a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001d2d:	8b 45 18             	mov    0x18(%ebp),%eax
81001d30:	8b 00                	mov    (%eax),%eax
81001d32:	89 45 d0             	mov    %eax,-0x30(%ebp)
81001d35:	8b 45 18             	mov    0x18(%ebp),%eax
81001d38:	8b 40 14             	mov    0x14(%eax),%eax
81001d3b:	89 45 cc             	mov    %eax,-0x34(%ebp)
81001d3e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d41:	89 70 10             	mov    %esi,0x10(%eax)
81001d44:	89 da                	mov    %ebx,%edx
81001d46:	8b 45 18             	mov    0x18(%ebp),%eax
81001d49:	89 50 14             	mov    %edx,0x14(%eax)
81001d4c:	8b 45 18             	mov    0x18(%ebp),%eax
81001d4f:	89 30                	mov    %esi,(%eax)
81001d51:	83 ec 08             	sub    $0x8,%esp
81001d54:	ff 75 18             	pushl  0x18(%ebp)
81001d57:	ff 75 08             	pushl  0x8(%ebp)
81001d5a:	e8 29 46 00 00       	call   81006388 <__srefill_r>
81001d5f:	83 c4 10             	add    $0x10,%esp
81001d62:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001d65:	8b 45 18             	mov    0x18(%ebp),%eax
81001d68:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81001d6b:	89 50 10             	mov    %edx,0x10(%eax)
81001d6e:	8b 45 18             	mov    0x18(%ebp),%eax
81001d71:	8b 55 cc             	mov    -0x34(%ebp),%edx
81001d74:	89 50 14             	mov    %edx,0x14(%eax)
81001d77:	8b 45 18             	mov    0x18(%ebp),%eax
81001d7a:	8b 55 d0             	mov    -0x30(%ebp),%edx
81001d7d:	89 10                	mov    %edx,(%eax)
81001d7f:	8b 45 18             	mov    0x18(%ebp),%eax
81001d82:	8b 40 04             	mov    0x4(%eax),%eax
81001d85:	29 c3                	sub    %eax,%ebx
81001d87:	8b 45 18             	mov    0x18(%ebp),%eax
81001d8a:	8b 40 04             	mov    0x4(%eax),%eax
81001d8d:	01 c6                	add    %eax,%esi
81001d8f:	8b 45 18             	mov    0x18(%ebp),%eax
81001d92:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
81001d99:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)
81001d9d:	74 12                	je     81001db1 <_fread_r+0x1d2>
81001d9f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001da2:	29 d8                	sub    %ebx,%eax
81001da4:	ba 00 00 00 00       	mov    $0x0,%edx
81001da9:	f7 75 10             	divl   0x10(%ebp)
81001dac:	e9 9b 00 00 00       	jmp    81001e4c <_fread_r+0x26d>
81001db1:	85 db                	test   %ebx,%ebx
81001db3:	0f 85 64 ff ff ff    	jne    81001d1d <_fread_r+0x13e>
81001db9:	e9 8b 00 00 00       	jmp    81001e49 <_fread_r+0x26a>
81001dbe:	89 fa                	mov    %edi,%edx
81001dc0:	8b 45 18             	mov    0x18(%ebp),%eax
81001dc3:	8b 00                	mov    (%eax),%eax
81001dc5:	83 ec 04             	sub    $0x4,%esp
81001dc8:	52                   	push   %edx
81001dc9:	50                   	push   %eax
81001dca:	56                   	push   %esi
81001dcb:	e8 c8 2c 00 00       	call   81004a98 <memcpy>
81001dd0:	83 c4 10             	add    $0x10,%esp
81001dd3:	8b 45 18             	mov    0x18(%ebp),%eax
81001dd6:	8b 00                	mov    (%eax),%eax
81001dd8:	89 fa                	mov    %edi,%edx
81001dda:	01 c2                	add    %eax,%edx
81001ddc:	8b 45 18             	mov    0x18(%ebp),%eax
81001ddf:	89 10                	mov    %edx,(%eax)
81001de1:	89 f8                	mov    %edi,%eax
81001de3:	01 c6                	add    %eax,%esi
81001de5:	89 f8                	mov    %edi,%eax
81001de7:	29 c3                	sub    %eax,%ebx
81001de9:	83 ec 08             	sub    $0x8,%esp
81001dec:	ff 75 18             	pushl  0x18(%ebp)
81001def:	ff 75 08             	pushl  0x8(%ebp)
81001df2:	e8 91 45 00 00       	call   81006388 <__srefill_r>
81001df7:	83 c4 10             	add    $0x10,%esp
81001dfa:	85 c0                	test   %eax,%eax
81001dfc:	74 0f                	je     81001e0d <_fread_r+0x22e>
81001dfe:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001e01:	29 d8                	sub    %ebx,%eax
81001e03:	ba 00 00 00 00       	mov    $0x0,%edx
81001e08:	f7 75 10             	divl   0x10(%ebp)
81001e0b:	eb 3f                	jmp    81001e4c <_fread_r+0x26d>
81001e0d:	8b 45 18             	mov    0x18(%ebp),%eax
81001e10:	8b 78 04             	mov    0x4(%eax),%edi
81001e13:	89 f8                	mov    %edi,%eax
81001e15:	39 c3                	cmp    %eax,%ebx
81001e17:	77 a5                	ja     81001dbe <_fread_r+0x1df>
81001e19:	8b 45 18             	mov    0x18(%ebp),%eax
81001e1c:	8b 00                	mov    (%eax),%eax
81001e1e:	83 ec 04             	sub    $0x4,%esp
81001e21:	53                   	push   %ebx
81001e22:	50                   	push   %eax
81001e23:	56                   	push   %esi
81001e24:	e8 6f 2c 00 00       	call   81004a98 <memcpy>
81001e29:	83 c4 10             	add    $0x10,%esp
81001e2c:	8b 45 18             	mov    0x18(%ebp),%eax
81001e2f:	8b 40 04             	mov    0x4(%eax),%eax
81001e32:	29 d8                	sub    %ebx,%eax
81001e34:	89 c2                	mov    %eax,%edx
81001e36:	8b 45 18             	mov    0x18(%ebp),%eax
81001e39:	89 50 04             	mov    %edx,0x4(%eax)
81001e3c:	8b 45 18             	mov    0x18(%ebp),%eax
81001e3f:	8b 00                	mov    (%eax),%eax
81001e41:	8d 14 18             	lea    (%eax,%ebx,1),%edx
81001e44:	8b 45 18             	mov    0x18(%ebp),%eax
81001e47:	89 10                	mov    %edx,(%eax)
81001e49:	8b 45 14             	mov    0x14(%ebp),%eax
81001e4c:	8d 65 f4             	lea    -0xc(%ebp),%esp
81001e4f:	5b                   	pop    %ebx
81001e50:	5e                   	pop    %esi
81001e51:	5f                   	pop    %edi
81001e52:	5d                   	pop    %ebp
81001e53:	c3                   	ret    

81001e54 <fread>:
81001e54:	55                   	push   %ebp
81001e55:	89 e5                	mov    %esp,%ebp
81001e57:	83 ec 08             	sub    $0x8,%esp
81001e5a:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81001e5f:	83 ec 0c             	sub    $0xc,%esp
81001e62:	ff 75 14             	pushl  0x14(%ebp)
81001e65:	ff 75 10             	pushl  0x10(%ebp)
81001e68:	ff 75 0c             	pushl  0xc(%ebp)
81001e6b:	ff 75 08             	pushl  0x8(%ebp)
81001e6e:	50                   	push   %eax
81001e6f:	e8 6b fd ff ff       	call   81001bdf <_fread_r>
81001e74:	83 c4 20             	add    $0x20,%esp
81001e77:	c9                   	leave  
81001e78:	c3                   	ret    

81001e79 <_free_r>:
81001e79:	55                   	push   %ebp
81001e7a:	89 e5                	mov    %esp,%ebp
81001e7c:	53                   	push   %ebx
81001e7d:	83 ec 34             	sub    $0x34,%esp
81001e80:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81001e84:	0f 84 c4 03 00 00    	je     8100224e <_free_r+0x3d5>
81001e8a:	83 ec 0c             	sub    $0xc,%esp
81001e8d:	ff 75 08             	pushl  0x8(%ebp)
81001e90:	e8 60 2d 00 00       	call   81004bf5 <__malloc_lock>
81001e95:	83 c4 10             	add    $0x10,%esp
81001e98:	8b 45 0c             	mov    0xc(%ebp),%eax
81001e9b:	83 e8 08             	sub    $0x8,%eax
81001e9e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81001ea1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001ea4:	8b 40 04             	mov    0x4(%eax),%eax
81001ea7:	89 45 e0             	mov    %eax,-0x20(%ebp)
81001eaa:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ead:	83 e0 fe             	and    $0xfffffffe,%eax
81001eb0:	89 45 f0             	mov    %eax,-0x10(%ebp)
81001eb3:	8b 55 f4             	mov    -0xc(%ebp),%edx
81001eb6:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001eb9:	01 d0                	add    %edx,%eax
81001ebb:	89 45 dc             	mov    %eax,-0x24(%ebp)
81001ebe:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ec1:	8b 40 04             	mov    0x4(%eax),%eax
81001ec4:	83 e0 fc             	and    $0xfffffffc,%eax
81001ec7:	89 45 d8             	mov    %eax,-0x28(%ebp)
81001eca:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81001ecf:	8b 40 08             	mov    0x8(%eax),%eax
81001ed2:	39 45 dc             	cmp    %eax,-0x24(%ebp)
81001ed5:	0f 85 94 00 00 00    	jne    81001f6f <_free_r+0xf6>
81001edb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ede:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ee1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001ee4:	83 e0 01             	and    $0x1,%eax
81001ee7:	85 c0                	test   %eax,%eax
81001ee9:	75 3a                	jne    81001f25 <_free_r+0xac>
81001eeb:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001eee:	8b 00                	mov    (%eax),%eax
81001ef0:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001ef3:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001ef6:	f7 d8                	neg    %eax
81001ef8:	01 45 f4             	add    %eax,-0xc(%ebp)
81001efb:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001efe:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f04:	8b 40 0c             	mov    0xc(%eax),%eax
81001f07:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001f0a:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f0d:	8b 40 08             	mov    0x8(%eax),%eax
81001f10:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001f13:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001f16:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001f19:	89 50 0c             	mov    %edx,0xc(%eax)
81001f1c:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001f1f:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001f22:	89 50 08             	mov    %edx,0x8(%eax)
81001f25:	8b 45 f0             	mov    -0x10(%ebp),%eax
81001f28:	83 c8 01             	or     $0x1,%eax
81001f2b:	89 c2                	mov    %eax,%edx
81001f2d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f30:	89 50 04             	mov    %edx,0x4(%eax)
81001f33:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81001f38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f3b:	89 42 08             	mov    %eax,0x8(%edx)
81001f3e:	a1 c8 94 00 81       	mov    0x810094c8,%eax
81001f43:	39 45 f0             	cmp    %eax,-0x10(%ebp)
81001f46:	72 14                	jb     81001f5c <_free_r+0xe3>
81001f48:	a1 a0 9b 00 81       	mov    0x81009ba0,%eax
81001f4d:	83 ec 08             	sub    $0x8,%esp
81001f50:	50                   	push   %eax
81001f51:	ff 75 08             	pushl  0x8(%ebp)
81001f54:	e8 fb 02 00 00       	call   81002254 <_malloc_trim_r>
81001f59:	83 c4 10             	add    $0x10,%esp
81001f5c:	83 ec 0c             	sub    $0xc,%esp
81001f5f:	ff 75 08             	pushl  0x8(%ebp)
81001f62:	e8 94 2c 00 00       	call   81004bfb <__malloc_unlock>
81001f67:	83 c4 10             	add    $0x10,%esp
81001f6a:	e9 e0 02 00 00       	jmp    8100224f <_free_r+0x3d6>
81001f6f:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001f72:	8b 55 d8             	mov    -0x28(%ebp),%edx
81001f75:	89 50 04             	mov    %edx,0x4(%eax)
81001f78:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81001f7f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81001f82:	83 e0 01             	and    $0x1,%eax
81001f85:	85 c0                	test   %eax,%eax
81001f87:	75 52                	jne    81001fdb <_free_r+0x162>
81001f89:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001f8c:	8b 00                	mov    (%eax),%eax
81001f8e:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81001f91:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f94:	f7 d8                	neg    %eax
81001f96:	01 45 f4             	add    %eax,-0xc(%ebp)
81001f99:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81001f9c:	01 45 f0             	add    %eax,-0x10(%ebp)
81001f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fa2:	8b 40 08             	mov    0x8(%eax),%eax
81001fa5:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81001faa:	39 d0                	cmp    %edx,%eax
81001fac:	75 09                	jne    81001fb7 <_free_r+0x13e>
81001fae:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81001fb5:	eb 24                	jmp    81001fdb <_free_r+0x162>
81001fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fba:	8b 40 0c             	mov    0xc(%eax),%eax
81001fbd:	89 45 ec             	mov    %eax,-0x14(%ebp)
81001fc0:	8b 45 f4             	mov    -0xc(%ebp),%eax
81001fc3:	8b 40 08             	mov    0x8(%eax),%eax
81001fc6:	89 45 e8             	mov    %eax,-0x18(%ebp)
81001fc9:	8b 45 e8             	mov    -0x18(%ebp),%eax
81001fcc:	8b 55 ec             	mov    -0x14(%ebp),%edx
81001fcf:	89 50 0c             	mov    %edx,0xc(%eax)
81001fd2:	8b 45 ec             	mov    -0x14(%ebp),%eax
81001fd5:	8b 55 e8             	mov    -0x18(%ebp),%edx
81001fd8:	89 50 08             	mov    %edx,0x8(%eax)
81001fdb:	8b 55 dc             	mov    -0x24(%ebp),%edx
81001fde:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001fe1:	01 d0                	add    %edx,%eax
81001fe3:	8b 40 04             	mov    0x4(%eax),%eax
81001fe6:	83 e0 01             	and    $0x1,%eax
81001fe9:	85 c0                	test   %eax,%eax
81001feb:	75 75                	jne    81002062 <_free_r+0x1e9>
81001fed:	8b 45 d8             	mov    -0x28(%ebp),%eax
81001ff0:	01 45 f0             	add    %eax,-0x10(%ebp)
81001ff3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81001ff7:	75 45                	jne    8100203e <_free_r+0x1c5>
81001ff9:	8b 45 dc             	mov    -0x24(%ebp),%eax
81001ffc:	8b 40 08             	mov    0x8(%eax),%eax
81001fff:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81002004:	39 d0                	cmp    %edx,%eax
81002006:	75 36                	jne    8100203e <_free_r+0x1c5>
81002008:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100200f:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81002014:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002017:	89 50 0c             	mov    %edx,0xc(%eax)
8100201a:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100201f:	8b 40 0c             	mov    0xc(%eax),%eax
81002022:	89 42 08             	mov    %eax,0x8(%edx)
81002025:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100202a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100202d:	89 50 0c             	mov    %edx,0xc(%eax)
81002030:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002033:	8b 50 0c             	mov    0xc(%eax),%edx
81002036:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002039:	89 50 08             	mov    %edx,0x8(%eax)
8100203c:	eb 24                	jmp    81002062 <_free_r+0x1e9>
8100203e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002041:	8b 40 0c             	mov    0xc(%eax),%eax
81002044:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002047:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100204a:	8b 40 08             	mov    0x8(%eax),%eax
8100204d:	89 45 e8             	mov    %eax,-0x18(%ebp)
81002050:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002053:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002056:	89 50 0c             	mov    %edx,0xc(%eax)
81002059:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100205c:	8b 55 e8             	mov    -0x18(%ebp),%edx
8100205f:	89 50 08             	mov    %edx,0x8(%eax)
81002062:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002065:	83 c8 01             	or     $0x1,%eax
81002068:	89 c2                	mov    %eax,%edx
8100206a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100206d:	89 50 04             	mov    %edx,0x4(%eax)
81002070:	8b 55 f4             	mov    -0xc(%ebp),%edx
81002073:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002076:	01 c2                	add    %eax,%edx
81002078:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100207b:	89 02                	mov    %eax,(%edx)
8100207d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002081:	0f 85 b7 01 00 00    	jne    8100223e <_free_r+0x3c5>
81002087:	81 7d f0 ff 01 00 00 	cmpl   $0x1ff,-0x10(%ebp)
8100208e:	77 7f                	ja     8100210f <_free_r+0x296>
81002090:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002093:	c1 e8 03             	shr    $0x3,%eax
81002096:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002099:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100209e:	8b 58 04             	mov    0x4(%eax),%ebx
810020a1:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020a4:	8d 50 03             	lea    0x3(%eax),%edx
810020a7:	85 c0                	test   %eax,%eax
810020a9:	0f 48 c2             	cmovs  %edx,%eax
810020ac:	c1 f8 02             	sar    $0x2,%eax
810020af:	ba 01 00 00 00       	mov    $0x1,%edx
810020b4:	89 c1                	mov    %eax,%ecx
810020b6:	d3 e2                	shl    %cl,%edx
810020b8:	89 d0                	mov    %edx,%eax
810020ba:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810020bf:	09 d8                	or     %ebx,%eax
810020c1:	89 42 04             	mov    %eax,0x4(%edx)
810020c4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810020c7:	83 c0 01             	add    $0x1,%eax
810020ca:	01 c0                	add    %eax,%eax
810020cc:	c1 e0 02             	shl    $0x2,%eax
810020cf:	05 c0 90 00 81       	add    $0x810090c0,%eax
810020d4:	83 e8 08             	sub    $0x8,%eax
810020d7:	89 45 ec             	mov    %eax,-0x14(%ebp)
810020da:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020dd:	8b 40 08             	mov    0x8(%eax),%eax
810020e0:	89 45 e8             	mov    %eax,-0x18(%ebp)
810020e3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020e6:	8b 55 ec             	mov    -0x14(%ebp),%edx
810020e9:	89 50 0c             	mov    %edx,0xc(%eax)
810020ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
810020ef:	8b 55 e8             	mov    -0x18(%ebp),%edx
810020f2:	89 50 08             	mov    %edx,0x8(%eax)
810020f5:	8b 45 ec             	mov    -0x14(%ebp),%eax
810020f8:	8b 55 f4             	mov    -0xc(%ebp),%edx
810020fb:	89 50 08             	mov    %edx,0x8(%eax)
810020fe:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002101:	8b 50 08             	mov    0x8(%eax),%edx
81002104:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002107:	89 50 0c             	mov    %edx,0xc(%eax)
8100210a:	e9 2f 01 00 00       	jmp    8100223e <_free_r+0x3c5>
8100210f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002112:	c1 e8 09             	shr    $0x9,%eax
81002115:	85 c0                	test   %eax,%eax
81002117:	75 08                	jne    81002121 <_free_r+0x2a8>
81002119:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100211c:	c1 e8 03             	shr    $0x3,%eax
8100211f:	eb 77                	jmp    81002198 <_free_r+0x31f>
81002121:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002124:	c1 e8 09             	shr    $0x9,%eax
81002127:	83 f8 04             	cmp    $0x4,%eax
8100212a:	77 0b                	ja     81002137 <_free_r+0x2be>
8100212c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100212f:	c1 e8 06             	shr    $0x6,%eax
81002132:	83 c0 38             	add    $0x38,%eax
81002135:	eb 61                	jmp    81002198 <_free_r+0x31f>
81002137:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100213a:	c1 e8 09             	shr    $0x9,%eax
8100213d:	83 f8 14             	cmp    $0x14,%eax
81002140:	77 0b                	ja     8100214d <_free_r+0x2d4>
81002142:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002145:	c1 e8 09             	shr    $0x9,%eax
81002148:	83 c0 5b             	add    $0x5b,%eax
8100214b:	eb 4b                	jmp    81002198 <_free_r+0x31f>
8100214d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002150:	c1 e8 09             	shr    $0x9,%eax
81002153:	83 f8 54             	cmp    $0x54,%eax
81002156:	77 0b                	ja     81002163 <_free_r+0x2ea>
81002158:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100215b:	c1 e8 0c             	shr    $0xc,%eax
8100215e:	83 c0 6e             	add    $0x6e,%eax
81002161:	eb 35                	jmp    81002198 <_free_r+0x31f>
81002163:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002166:	c1 e8 09             	shr    $0x9,%eax
81002169:	3d 54 01 00 00       	cmp    $0x154,%eax
8100216e:	77 0b                	ja     8100217b <_free_r+0x302>
81002170:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002173:	c1 e8 0f             	shr    $0xf,%eax
81002176:	83 c0 77             	add    $0x77,%eax
81002179:	eb 1d                	jmp    81002198 <_free_r+0x31f>
8100217b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100217e:	c1 e8 09             	shr    $0x9,%eax
81002181:	3d 54 05 00 00       	cmp    $0x554,%eax
81002186:	77 0b                	ja     81002193 <_free_r+0x31a>
81002188:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100218b:	c1 e8 12             	shr    $0x12,%eax
8100218e:	83 c0 7c             	add    $0x7c,%eax
81002191:	eb 05                	jmp    81002198 <_free_r+0x31f>
81002193:	b8 7e 00 00 00       	mov    $0x7e,%eax
81002198:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100219b:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100219e:	83 c0 01             	add    $0x1,%eax
810021a1:	01 c0                	add    %eax,%eax
810021a3:	c1 e0 02             	shl    $0x2,%eax
810021a6:	05 c0 90 00 81       	add    $0x810090c0,%eax
810021ab:	83 e8 08             	sub    $0x8,%eax
810021ae:	89 45 ec             	mov    %eax,-0x14(%ebp)
810021b1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810021b4:	8b 40 08             	mov    0x8(%eax),%eax
810021b7:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021ba:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021bd:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021c0:	75 36                	jne    810021f8 <_free_r+0x37f>
810021c2:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810021c7:	8b 58 04             	mov    0x4(%eax),%ebx
810021ca:	8b 45 d0             	mov    -0x30(%ebp),%eax
810021cd:	8d 50 03             	lea    0x3(%eax),%edx
810021d0:	85 c0                	test   %eax,%eax
810021d2:	0f 48 c2             	cmovs  %edx,%eax
810021d5:	c1 f8 02             	sar    $0x2,%eax
810021d8:	ba 01 00 00 00       	mov    $0x1,%edx
810021dd:	89 c1                	mov    %eax,%ecx
810021df:	d3 e2                	shl    %cl,%edx
810021e1:	89 d0                	mov    %edx,%eax
810021e3:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810021e8:	09 d8                	or     %ebx,%eax
810021ea:	89 42 04             	mov    %eax,0x4(%edx)
810021ed:	eb 28                	jmp    81002217 <_free_r+0x39e>
810021ef:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021f2:	8b 40 08             	mov    0x8(%eax),%eax
810021f5:	89 45 e8             	mov    %eax,-0x18(%ebp)
810021f8:	8b 45 e8             	mov    -0x18(%ebp),%eax
810021fb:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810021fe:	74 0e                	je     8100220e <_free_r+0x395>
81002200:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002203:	8b 40 04             	mov    0x4(%eax),%eax
81002206:	83 e0 fc             	and    $0xfffffffc,%eax
81002209:	39 45 f0             	cmp    %eax,-0x10(%ebp)
8100220c:	72 e1                	jb     810021ef <_free_r+0x376>
8100220e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81002211:	8b 40 0c             	mov    0xc(%eax),%eax
81002214:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002217:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100221a:	8b 55 ec             	mov    -0x14(%ebp),%edx
8100221d:	89 50 0c             	mov    %edx,0xc(%eax)
81002220:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002223:	8b 55 e8             	mov    -0x18(%ebp),%edx
81002226:	89 50 08             	mov    %edx,0x8(%eax)
81002229:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100222c:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100222f:	89 50 08             	mov    %edx,0x8(%eax)
81002232:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002235:	8b 50 08             	mov    0x8(%eax),%edx
81002238:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100223b:	89 50 0c             	mov    %edx,0xc(%eax)
8100223e:	83 ec 0c             	sub    $0xc,%esp
81002241:	ff 75 08             	pushl  0x8(%ebp)
81002244:	e8 b2 29 00 00       	call   81004bfb <__malloc_unlock>
81002249:	83 c4 10             	add    $0x10,%esp
8100224c:	eb 01                	jmp    8100224f <_free_r+0x3d6>
8100224e:	90                   	nop
8100224f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81002252:	c9                   	leave  
81002253:	c3                   	ret    

81002254 <_malloc_trim_r>:
81002254:	55                   	push   %ebp
81002255:	89 e5                	mov    %esp,%ebp
81002257:	83 ec 28             	sub    $0x28,%esp
8100225a:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)
81002261:	83 ec 0c             	sub    $0xc,%esp
81002264:	ff 75 08             	pushl  0x8(%ebp)
81002267:	e8 89 29 00 00       	call   81004bf5 <__malloc_lock>
8100226c:	83 c4 10             	add    $0x10,%esp
8100226f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002274:	8b 40 08             	mov    0x8(%eax),%eax
81002277:	8b 40 04             	mov    0x4(%eax),%eax
8100227a:	83 e0 fc             	and    $0xfffffffc,%eax
8100227d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002280:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002283:	2b 45 0c             	sub    0xc(%ebp),%eax
81002286:	89 c2                	mov    %eax,%edx
81002288:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100228b:	01 d0                	add    %edx,%eax
8100228d:	83 e8 11             	sub    $0x11,%eax
81002290:	ba 00 00 00 00       	mov    $0x0,%edx
81002295:	f7 75 f4             	divl   -0xc(%ebp)
81002298:	83 e8 01             	sub    $0x1,%eax
8100229b:	0f af 45 f4          	imul   -0xc(%ebp),%eax
8100229f:	89 45 ec             	mov    %eax,-0x14(%ebp)
810022a2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810022a5:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810022a8:	7d 18                	jge    810022c2 <_malloc_trim_r+0x6e>
810022aa:	83 ec 0c             	sub    $0xc,%esp
810022ad:	ff 75 08             	pushl  0x8(%ebp)
810022b0:	e8 46 29 00 00       	call   81004bfb <__malloc_unlock>
810022b5:	83 c4 10             	add    $0x10,%esp
810022b8:	b8 00 00 00 00       	mov    $0x0,%eax
810022bd:	e9 f1 00 00 00       	jmp    810023b3 <_malloc_trim_r+0x15f>
810022c2:	83 ec 08             	sub    $0x8,%esp
810022c5:	6a 00                	push   $0x0
810022c7:	ff 75 08             	pushl  0x8(%ebp)
810022ca:	e8 3a 43 00 00       	call   81006609 <_sbrk_r>
810022cf:	83 c4 10             	add    $0x10,%esp
810022d2:	89 45 e8             	mov    %eax,-0x18(%ebp)
810022d5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810022da:	8b 50 08             	mov    0x8(%eax),%edx
810022dd:	8b 45 f0             	mov    -0x10(%ebp),%eax
810022e0:	01 d0                	add    %edx,%eax
810022e2:	39 45 e8             	cmp    %eax,-0x18(%ebp)
810022e5:	74 18                	je     810022ff <_malloc_trim_r+0xab>
810022e7:	83 ec 0c             	sub    $0xc,%esp
810022ea:	ff 75 08             	pushl  0x8(%ebp)
810022ed:	e8 09 29 00 00       	call   81004bfb <__malloc_unlock>
810022f2:	83 c4 10             	add    $0x10,%esp
810022f5:	b8 00 00 00 00       	mov    $0x0,%eax
810022fa:	e9 b4 00 00 00       	jmp    810023b3 <_malloc_trim_r+0x15f>
810022ff:	8b 45 ec             	mov    -0x14(%ebp),%eax
81002302:	f7 d8                	neg    %eax
81002304:	83 ec 08             	sub    $0x8,%esp
81002307:	50                   	push   %eax
81002308:	ff 75 08             	pushl  0x8(%ebp)
8100230b:	e8 f9 42 00 00       	call   81006609 <_sbrk_r>
81002310:	83 c4 10             	add    $0x10,%esp
81002313:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002316:	83 7d e4 ff          	cmpl   $0xffffffff,-0x1c(%ebp)
8100231a:	75 61                	jne    8100237d <_malloc_trim_r+0x129>
8100231c:	83 ec 08             	sub    $0x8,%esp
8100231f:	6a 00                	push   $0x0
81002321:	ff 75 08             	pushl  0x8(%ebp)
81002324:	e8 e0 42 00 00       	call   81006609 <_sbrk_r>
81002329:	83 c4 10             	add    $0x10,%esp
8100232c:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100232f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002334:	8b 50 08             	mov    0x8(%eax),%edx
81002337:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100233a:	29 d0                	sub    %edx,%eax
8100233c:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100233f:	83 7d f0 0f          	cmpl   $0xf,-0x10(%ebp)
81002343:	7e 23                	jle    81002368 <_malloc_trim_r+0x114>
81002345:	8b 15 cc 94 00 81    	mov    0x810094cc,%edx
8100234b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100234e:	29 d0                	sub    %edx,%eax
81002350:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81002355:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002358:	83 c8 01             	or     $0x1,%eax
8100235b:	89 c2                	mov    %eax,%edx
8100235d:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81002362:	8b 40 08             	mov    0x8(%eax),%eax
81002365:	89 50 04             	mov    %edx,0x4(%eax)
81002368:	83 ec 0c             	sub    $0xc,%esp
8100236b:	ff 75 08             	pushl  0x8(%ebp)
8100236e:	e8 88 28 00 00       	call   81004bfb <__malloc_unlock>
81002373:	83 c4 10             	add    $0x10,%esp
81002376:	b8 00 00 00 00       	mov    $0x0,%eax
8100237b:	eb 36                	jmp    810023b3 <_malloc_trim_r+0x15f>
8100237d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002380:	2b 45 ec             	sub    -0x14(%ebp),%eax
81002383:	83 c8 01             	or     $0x1,%eax
81002386:	89 c2                	mov    %eax,%edx
81002388:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100238d:	8b 40 08             	mov    0x8(%eax),%eax
81002390:	89 50 04             	mov    %edx,0x4(%eax)
81002393:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81002398:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100239b:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
810023a0:	83 ec 0c             	sub    $0xc,%esp
810023a3:	ff 75 08             	pushl  0x8(%ebp)
810023a6:	e8 50 28 00 00       	call   81004bfb <__malloc_unlock>
810023ab:	83 c4 10             	add    $0x10,%esp
810023ae:	b8 01 00 00 00       	mov    $0x1,%eax
810023b3:	c9                   	leave  
810023b4:	c3                   	ret    

810023b5 <_fseek_r>:
810023b5:	55                   	push   %ebp
810023b6:	89 e5                	mov    %esp,%ebp
810023b8:	83 ec 08             	sub    $0x8,%esp
810023bb:	8b 45 0c             	mov    0xc(%ebp),%eax
810023be:	ff 75 14             	pushl  0x14(%ebp)
810023c1:	ff 75 10             	pushl  0x10(%ebp)
810023c4:	50                   	push   %eax
810023c5:	ff 75 08             	pushl  0x8(%ebp)
810023c8:	e8 25 00 00 00       	call   810023f2 <_fseeko_r>
810023cd:	83 c4 10             	add    $0x10,%esp
810023d0:	c9                   	leave  
810023d1:	c3                   	ret    

810023d2 <fseek>:
810023d2:	55                   	push   %ebp
810023d3:	89 e5                	mov    %esp,%ebp
810023d5:	83 ec 08             	sub    $0x8,%esp
810023d8:	8b 55 08             	mov    0x8(%ebp),%edx
810023db:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810023e0:	ff 75 10             	pushl  0x10(%ebp)
810023e3:	ff 75 0c             	pushl  0xc(%ebp)
810023e6:	52                   	push   %edx
810023e7:	50                   	push   %eax
810023e8:	e8 c8 ff ff ff       	call   810023b5 <_fseek_r>
810023ed:	83 c4 10             	add    $0x10,%esp
810023f0:	c9                   	leave  
810023f1:	c3                   	ret    

810023f2 <_fseeko_r>:
810023f2:	55                   	push   %ebp
810023f3:	89 e5                	mov    %esp,%ebp
810023f5:	56                   	push   %esi
810023f6:	53                   	push   %ebx
810023f7:	83 ec 60             	sub    $0x60,%esp
810023fa:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810023fd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81002404:	8b 45 08             	mov    0x8(%ebp),%eax
81002407:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100240a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100240e:	74 18                	je     81002428 <_fseeko_r+0x36>
81002410:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002413:	8b 40 38             	mov    0x38(%eax),%eax
81002416:	85 c0                	test   %eax,%eax
81002418:	75 0e                	jne    81002428 <_fseeko_r+0x36>
8100241a:	83 ec 0c             	sub    $0xc,%esp
8100241d:	ff 75 e4             	pushl  -0x1c(%ebp)
81002420:	e8 9f f4 ff ff       	call   810018c4 <__sinit>
81002425:	83 c4 10             	add    $0x10,%esp
81002428:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100242c:	98                   	cwtl   
8100242d:	25 00 01 00 00       	and    $0x100,%eax
81002432:	85 c0                	test   %eax,%eax
81002434:	74 1b                	je     81002451 <_fseeko_r+0x5f>
81002436:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100243a:	98                   	cwtl   
8100243b:	83 e0 08             	and    $0x8,%eax
8100243e:	85 c0                	test   %eax,%eax
81002440:	74 0f                	je     81002451 <_fseeko_r+0x5f>
81002442:	83 ec 08             	sub    $0x8,%esp
81002445:	53                   	push   %ebx
81002446:	ff 75 08             	pushl  0x8(%ebp)
81002449:	e8 89 ee ff ff       	call   810012d7 <_fflush_r>
8100244e:	83 c4 10             	add    $0x10,%esp
81002451:	8b 43 28             	mov    0x28(%ebx),%eax
81002454:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002457:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
8100245b:	75 13                	jne    81002470 <_fseeko_r+0x7e>
8100245d:	8b 45 08             	mov    0x8(%ebp),%eax
81002460:	c7 00 1d 00 00 00    	movl   $0x1d,(%eax)
81002466:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100246b:	e9 2c 04 00 00       	jmp    8100289c <_fseeko_r+0x4aa>
81002470:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
81002474:	0f 84 bc 00 00 00    	je     81002536 <_fseeko_r+0x144>
8100247a:	83 7d 14 02          	cmpl   $0x2,0x14(%ebp)
8100247e:	0f 8f bb 00 00 00    	jg     8100253f <_fseeko_r+0x14d>
81002484:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81002488:	0f 84 a8 00 00 00    	je     81002536 <_fseeko_r+0x144>
8100248e:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81002492:	0f 85 a7 00 00 00    	jne    8100253f <_fseeko_r+0x14d>
81002498:	83 ec 08             	sub    $0x8,%esp
8100249b:	53                   	push   %ebx
8100249c:	ff 75 08             	pushl  0x8(%ebp)
8100249f:	e8 33 ee ff ff       	call   810012d7 <_fflush_r>
810024a4:	83 c4 10             	add    $0x10,%esp
810024a7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024ab:	98                   	cwtl   
810024ac:	25 00 10 00 00       	and    $0x1000,%eax
810024b1:	85 c0                	test   %eax,%eax
810024b3:	74 08                	je     810024bd <_fseeko_r+0xcb>
810024b5:	8b 43 50             	mov    0x50(%ebx),%eax
810024b8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024bb:	eb 26                	jmp    810024e3 <_fseeko_r+0xf1>
810024bd:	8b 43 1c             	mov    0x1c(%ebx),%eax
810024c0:	6a 01                	push   $0x1
810024c2:	6a 00                	push   $0x0
810024c4:	50                   	push   %eax
810024c5:	ff 75 08             	pushl  0x8(%ebp)
810024c8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810024cb:	ff d0                	call   *%eax
810024cd:	83 c4 10             	add    $0x10,%esp
810024d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810024d3:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
810024d7:	75 0a                	jne    810024e3 <_fseeko_r+0xf1>
810024d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810024de:	e9 b9 03 00 00       	jmp    8100289c <_fseeko_r+0x4aa>
810024e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810024e7:	98                   	cwtl   
810024e8:	83 e0 04             	and    $0x4,%eax
810024eb:	85 c0                	test   %eax,%eax
810024ed:	74 15                	je     81002504 <_fseeko_r+0x112>
810024ef:	8b 43 04             	mov    0x4(%ebx),%eax
810024f2:	29 45 f0             	sub    %eax,-0x10(%ebp)
810024f5:	8b 43 30             	mov    0x30(%ebx),%eax
810024f8:	85 c0                	test   %eax,%eax
810024fa:	74 24                	je     81002520 <_fseeko_r+0x12e>
810024fc:	8b 43 3c             	mov    0x3c(%ebx),%eax
810024ff:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002502:	eb 1c                	jmp    81002520 <_fseeko_r+0x12e>
81002504:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002508:	98                   	cwtl   
81002509:	83 e0 08             	and    $0x8,%eax
8100250c:	85 c0                	test   %eax,%eax
8100250e:	74 10                	je     81002520 <_fseeko_r+0x12e>
81002510:	8b 03                	mov    (%ebx),%eax
81002512:	85 c0                	test   %eax,%eax
81002514:	74 0a                	je     81002520 <_fseeko_r+0x12e>
81002516:	8b 03                	mov    (%ebx),%eax
81002518:	8b 53 10             	mov    0x10(%ebx),%edx
8100251b:	29 d0                	sub    %edx,%eax
8100251d:	01 45 f0             	add    %eax,-0x10(%ebp)
81002520:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002523:	01 45 10             	add    %eax,0x10(%ebp)
81002526:	c7 45 14 00 00 00 00 	movl   $0x0,0x14(%ebp)
8100252d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002534:	eb 1c                	jmp    81002552 <_fseeko_r+0x160>
81002536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
8100253d:	eb 13                	jmp    81002552 <_fseeko_r+0x160>
8100253f:	8b 45 08             	mov    0x8(%ebp),%eax
81002542:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81002548:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100254d:	e9 4a 03 00 00       	jmp    8100289c <_fseeko_r+0x4aa>
81002552:	8b 43 10             	mov    0x10(%ebx),%eax
81002555:	85 c0                	test   %eax,%eax
81002557:	75 0f                	jne    81002568 <_fseeko_r+0x176>
81002559:	83 ec 08             	sub    $0x8,%esp
8100255c:	53                   	push   %ebx
8100255d:	ff 75 08             	pushl  0x8(%ebp)
81002560:	e8 dd 17 00 00       	call   81003d42 <__smakebuf_r>
81002565:	83 c4 10             	add    $0x10,%esp
81002568:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100256c:	98                   	cwtl   
8100256d:	25 1a 08 00 00       	and    $0x81a,%eax
81002572:	85 c0                	test   %eax,%eax
81002574:	0f 85 7d 02 00 00    	jne    810027f7 <_fseeko_r+0x405>
8100257a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100257e:	98                   	cwtl   
8100257f:	25 00 04 00 00       	and    $0x400,%eax
81002584:	85 c0                	test   %eax,%eax
81002586:	75 5f                	jne    810025e7 <_fseeko_r+0x1f5>
81002588:	81 7d e0 ab 69 00 81 	cmpl   $0x810069ab,-0x20(%ebp)
8100258f:	75 34                	jne    810025c5 <_fseeko_r+0x1d3>
81002591:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002595:	66 85 c0             	test   %ax,%ax
81002598:	78 2b                	js     810025c5 <_fseeko_r+0x1d3>
8100259a:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100259e:	98                   	cwtl   
8100259f:	83 ec 04             	sub    $0x4,%esp
810025a2:	8d 55 98             	lea    -0x68(%ebp),%edx
810025a5:	52                   	push   %edx
810025a6:	50                   	push   %eax
810025a7:	ff 75 08             	pushl  0x8(%ebp)
810025aa:	e8 14 03 00 00       	call   810028c3 <_fstat_r>
810025af:	83 c4 10             	add    $0x10,%esp
810025b2:	85 c0                	test   %eax,%eax
810025b4:	75 0f                	jne    810025c5 <_fseeko_r+0x1d3>
810025b6:	8b 45 9c             	mov    -0x64(%ebp),%eax
810025b9:	25 00 f0 00 00       	and    $0xf000,%eax
810025be:	3d 00 80 00 00       	cmp    $0x8000,%eax
810025c3:	74 10                	je     810025d5 <_fseeko_r+0x1e3>
810025c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025c9:	80 cc 08             	or     $0x8,%ah
810025cc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025d0:	e9 2f 02 00 00       	jmp    81002804 <_fseeko_r+0x412>
810025d5:	c7 43 4c 00 04 00 00 	movl   $0x400,0x4c(%ebx)
810025dc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810025e0:	80 cc 04             	or     $0x4,%ah
810025e3:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810025e7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
810025eb:	75 08                	jne    810025f5 <_fseeko_r+0x203>
810025ed:	8b 45 10             	mov    0x10(%ebp),%eax
810025f0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810025f3:	eb 2b                	jmp    81002620 <_fseeko_r+0x22e>
810025f5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810025f9:	98                   	cwtl   
810025fa:	83 ec 04             	sub    $0x4,%esp
810025fd:	8d 55 98             	lea    -0x68(%ebp),%edx
81002600:	52                   	push   %edx
81002601:	50                   	push   %eax
81002602:	ff 75 08             	pushl  0x8(%ebp)
81002605:	e8 b9 02 00 00       	call   810028c3 <_fstat_r>
8100260a:	83 c4 10             	add    $0x10,%esp
8100260d:	85 c0                	test   %eax,%eax
8100260f:	0f 85 e5 01 00 00    	jne    810027fa <_fseeko_r+0x408>
81002615:	8b 55 a8             	mov    -0x58(%ebp),%edx
81002618:	8b 45 10             	mov    0x10(%ebp),%eax
8100261b:	01 d0                	add    %edx,%eax
8100261d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002620:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81002624:	75 49                	jne    8100266f <_fseeko_r+0x27d>
81002626:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100262a:	98                   	cwtl   
8100262b:	25 00 10 00 00       	and    $0x1000,%eax
81002630:	85 c0                	test   %eax,%eax
81002632:	74 08                	je     8100263c <_fseeko_r+0x24a>
81002634:	8b 43 50             	mov    0x50(%ebx),%eax
81002637:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100263a:	eb 20                	jmp    8100265c <_fseeko_r+0x26a>
8100263c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100263f:	6a 01                	push   $0x1
81002641:	6a 00                	push   $0x0
81002643:	50                   	push   %eax
81002644:	ff 75 08             	pushl  0x8(%ebp)
81002647:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100264a:	ff d0                	call   *%eax
8100264c:	83 c4 10             	add    $0x10,%esp
8100264f:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002652:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
81002656:	0f 84 a1 01 00 00    	je     810027fd <_fseeko_r+0x40b>
8100265c:	8b 43 04             	mov    0x4(%ebx),%eax
8100265f:	29 45 f0             	sub    %eax,-0x10(%ebp)
81002662:	8b 43 30             	mov    0x30(%ebx),%eax
81002665:	85 c0                	test   %eax,%eax
81002667:	74 06                	je     8100266f <_fseeko_r+0x27d>
81002669:	8b 43 3c             	mov    0x3c(%ebx),%eax
8100266c:	29 45 f0             	sub    %eax,-0x10(%ebp)
8100266f:	8b 43 30             	mov    0x30(%ebx),%eax
81002672:	85 c0                	test   %eax,%eax
81002674:	74 22                	je     81002698 <_fseeko_r+0x2a6>
81002676:	8b 43 04             	mov    0x4(%ebx),%eax
81002679:	01 45 f0             	add    %eax,-0x10(%ebp)
8100267c:	8b 43 38             	mov    0x38(%ebx),%eax
8100267f:	8b 53 10             	mov    0x10(%ebx),%edx
81002682:	29 d0                	sub    %edx,%eax
81002684:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002687:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100268a:	2b 45 ec             	sub    -0x14(%ebp),%eax
8100268d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002690:	8b 43 3c             	mov    0x3c(%ebx),%eax
81002693:	01 45 ec             	add    %eax,-0x14(%ebp)
81002696:	eb 19                	jmp    810026b1 <_fseeko_r+0x2bf>
81002698:	8b 03                	mov    (%ebx),%eax
8100269a:	8b 53 10             	mov    0x10(%ebx),%edx
8100269d:	29 d0                	sub    %edx,%eax
8100269f:	89 45 ec             	mov    %eax,-0x14(%ebp)
810026a2:	8b 45 f0             	mov    -0x10(%ebp),%eax
810026a5:	2b 45 ec             	sub    -0x14(%ebp),%eax
810026a8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810026ab:	8b 43 04             	mov    0x4(%ebx),%eax
810026ae:	01 45 ec             	add    %eax,-0x14(%ebp)
810026b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026b4:	3b 45 f0             	cmp    -0x10(%ebp),%eax
810026b7:	7c 7c                	jl     81002735 <_fseeko_r+0x343>
810026b9:	8b 55 f0             	mov    -0x10(%ebp),%edx
810026bc:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026bf:	01 c2                	add    %eax,%edx
810026c1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026c4:	39 c2                	cmp    %eax,%edx
810026c6:	76 6d                	jbe    81002735 <_fseeko_r+0x343>
810026c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810026cb:	2b 45 f0             	sub    -0x10(%ebp),%eax
810026ce:	89 c6                	mov    %eax,%esi
810026d0:	8b 43 10             	mov    0x10(%ebx),%eax
810026d3:	89 f2                	mov    %esi,%edx
810026d5:	01 d0                	add    %edx,%eax
810026d7:	89 03                	mov    %eax,(%ebx)
810026d9:	89 f2                	mov    %esi,%edx
810026db:	8b 45 ec             	mov    -0x14(%ebp),%eax
810026de:	29 d0                	sub    %edx,%eax
810026e0:	89 43 04             	mov    %eax,0x4(%ebx)
810026e3:	8b 43 30             	mov    0x30(%ebx),%eax
810026e6:	85 c0                	test   %eax,%eax
810026e8:	74 23                	je     8100270d <_fseeko_r+0x31b>
810026ea:	8b 53 30             	mov    0x30(%ebx),%edx
810026ed:	8d 43 40             	lea    0x40(%ebx),%eax
810026f0:	39 c2                	cmp    %eax,%edx
810026f2:	74 12                	je     81002706 <_fseeko_r+0x314>
810026f4:	8b 43 30             	mov    0x30(%ebx),%eax
810026f7:	83 ec 08             	sub    $0x8,%esp
810026fa:	50                   	push   %eax
810026fb:	ff 75 08             	pushl  0x8(%ebp)
810026fe:	e8 76 f7 ff ff       	call   81001e79 <_free_r>
81002703:	83 c4 10             	add    $0x10,%esp
81002706:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
8100270d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002711:	83 e0 df             	and    $0xffffffdf,%eax
81002714:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002718:	8d 43 5c             	lea    0x5c(%ebx),%eax
8100271b:	83 ec 04             	sub    $0x4,%esp
8100271e:	6a 08                	push   $0x8
81002720:	6a 00                	push   $0x0
81002722:	50                   	push   %eax
81002723:	e8 45 24 00 00       	call   81004b6d <memset>
81002728:	83 c4 10             	add    $0x10,%esp
8100272b:	b8 00 00 00 00       	mov    $0x0,%eax
81002730:	e9 67 01 00 00       	jmp    8100289c <_fseeko_r+0x4aa>
81002735:	8b 43 4c             	mov    0x4c(%ebx),%eax
81002738:	f7 d8                	neg    %eax
8100273a:	23 45 f4             	and    -0xc(%ebp),%eax
8100273d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002740:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002743:	6a 00                	push   $0x0
81002745:	ff 75 f0             	pushl  -0x10(%ebp)
81002748:	50                   	push   %eax
81002749:	ff 75 08             	pushl  0x8(%ebp)
8100274c:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100274f:	ff d0                	call   *%eax
81002751:	83 c4 10             	add    $0x10,%esp
81002754:	83 f8 ff             	cmp    $0xffffffff,%eax
81002757:	0f 84 a3 00 00 00    	je     81002800 <_fseeko_r+0x40e>
8100275d:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81002764:	8b 43 10             	mov    0x10(%ebx),%eax
81002767:	89 03                	mov    %eax,(%ebx)
81002769:	8b 43 30             	mov    0x30(%ebx),%eax
8100276c:	85 c0                	test   %eax,%eax
8100276e:	74 23                	je     81002793 <_fseeko_r+0x3a1>
81002770:	8b 53 30             	mov    0x30(%ebx),%edx
81002773:	8d 43 40             	lea    0x40(%ebx),%eax
81002776:	39 c2                	cmp    %eax,%edx
81002778:	74 12                	je     8100278c <_fseeko_r+0x39a>
8100277a:	8b 43 30             	mov    0x30(%ebx),%eax
8100277d:	83 ec 08             	sub    $0x8,%esp
81002780:	50                   	push   %eax
81002781:	ff 75 08             	pushl  0x8(%ebp)
81002784:	e8 f0 f6 ff ff       	call   81001e79 <_free_r>
81002789:	83 c4 10             	add    $0x10,%esp
8100278c:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002793:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002797:	83 e0 df             	and    $0xffffffdf,%eax
8100279a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100279e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810027a1:	2b 45 f0             	sub    -0x10(%ebp),%eax
810027a4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810027a7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
810027ab:	74 2d                	je     810027da <_fseeko_r+0x3e8>
810027ad:	83 ec 08             	sub    $0x8,%esp
810027b0:	53                   	push   %ebx
810027b1:	ff 75 08             	pushl  0x8(%ebp)
810027b4:	e8 cf 3b 00 00       	call   81006388 <__srefill_r>
810027b9:	83 c4 10             	add    $0x10,%esp
810027bc:	85 c0                	test   %eax,%eax
810027be:	75 43                	jne    81002803 <_fseeko_r+0x411>
810027c0:	8b 43 04             	mov    0x4(%ebx),%eax
810027c3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810027c6:	77 3b                	ja     81002803 <_fseeko_r+0x411>
810027c8:	8b 13                	mov    (%ebx),%edx
810027ca:	8b 45 ec             	mov    -0x14(%ebp),%eax
810027cd:	01 d0                	add    %edx,%eax
810027cf:	89 03                	mov    %eax,(%ebx)
810027d1:	8b 43 04             	mov    0x4(%ebx),%eax
810027d4:	2b 45 ec             	sub    -0x14(%ebp),%eax
810027d7:	89 43 04             	mov    %eax,0x4(%ebx)
810027da:	8d 43 5c             	lea    0x5c(%ebx),%eax
810027dd:	83 ec 04             	sub    $0x4,%esp
810027e0:	6a 08                	push   $0x8
810027e2:	6a 00                	push   $0x0
810027e4:	50                   	push   %eax
810027e5:	e8 83 23 00 00       	call   81004b6d <memset>
810027ea:	83 c4 10             	add    $0x10,%esp
810027ed:	b8 00 00 00 00       	mov    $0x0,%eax
810027f2:	e9 a5 00 00 00       	jmp    8100289c <_fseeko_r+0x4aa>
810027f7:	90                   	nop
810027f8:	eb 0a                	jmp    81002804 <_fseeko_r+0x412>
810027fa:	90                   	nop
810027fb:	eb 07                	jmp    81002804 <_fseeko_r+0x412>
810027fd:	90                   	nop
810027fe:	eb 04                	jmp    81002804 <_fseeko_r+0x412>
81002800:	90                   	nop
81002801:	eb 01                	jmp    81002804 <_fseeko_r+0x412>
81002803:	90                   	nop
81002804:	83 ec 08             	sub    $0x8,%esp
81002807:	53                   	push   %ebx
81002808:	ff 75 08             	pushl  0x8(%ebp)
8100280b:	e8 c7 ea ff ff       	call   810012d7 <_fflush_r>
81002810:	83 c4 10             	add    $0x10,%esp
81002813:	85 c0                	test   %eax,%eax
81002815:	75 1a                	jne    81002831 <_fseeko_r+0x43f>
81002817:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100281a:	ff 75 14             	pushl  0x14(%ebp)
8100281d:	ff 75 10             	pushl  0x10(%ebp)
81002820:	50                   	push   %eax
81002821:	ff 75 08             	pushl  0x8(%ebp)
81002824:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002827:	ff d0                	call   *%eax
81002829:	83 c4 10             	add    $0x10,%esp
8100282c:	83 f8 ff             	cmp    $0xffffffff,%eax
8100282f:	75 07                	jne    81002838 <_fseeko_r+0x446>
81002831:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002836:	eb 64                	jmp    8100289c <_fseeko_r+0x4aa>
81002838:	8b 43 30             	mov    0x30(%ebx),%eax
8100283b:	85 c0                	test   %eax,%eax
8100283d:	74 23                	je     81002862 <_fseeko_r+0x470>
8100283f:	8b 53 30             	mov    0x30(%ebx),%edx
81002842:	8d 43 40             	lea    0x40(%ebx),%eax
81002845:	39 c2                	cmp    %eax,%edx
81002847:	74 12                	je     8100285b <_fseeko_r+0x469>
81002849:	8b 43 30             	mov    0x30(%ebx),%eax
8100284c:	83 ec 08             	sub    $0x8,%esp
8100284f:	50                   	push   %eax
81002850:	ff 75 08             	pushl  0x8(%ebp)
81002853:	e8 21 f6 ff ff       	call   81001e79 <_free_r>
81002858:	83 c4 10             	add    $0x10,%esp
8100285b:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81002862:	8b 43 10             	mov    0x10(%ebx),%eax
81002865:	89 03                	mov    %eax,(%ebx)
81002867:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100286e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002872:	83 e0 df             	and    $0xffffffdf,%eax
81002875:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002879:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100287d:	80 e4 f7             	and    $0xf7,%ah
81002880:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002884:	8d 43 5c             	lea    0x5c(%ebx),%eax
81002887:	83 ec 04             	sub    $0x4,%esp
8100288a:	6a 08                	push   $0x8
8100288c:	6a 00                	push   $0x0
8100288e:	50                   	push   %eax
8100288f:	e8 d9 22 00 00       	call   81004b6d <memset>
81002894:	83 c4 10             	add    $0x10,%esp
81002897:	b8 00 00 00 00       	mov    $0x0,%eax
8100289c:	8d 65 f8             	lea    -0x8(%ebp),%esp
8100289f:	5b                   	pop    %ebx
810028a0:	5e                   	pop    %esi
810028a1:	5d                   	pop    %ebp
810028a2:	c3                   	ret    

810028a3 <fseeko>:
810028a3:	55                   	push   %ebp
810028a4:	89 e5                	mov    %esp,%ebp
810028a6:	83 ec 08             	sub    $0x8,%esp
810028a9:	8b 55 08             	mov    0x8(%ebp),%edx
810028ac:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810028b1:	ff 75 10             	pushl  0x10(%ebp)
810028b4:	ff 75 0c             	pushl  0xc(%ebp)
810028b7:	52                   	push   %edx
810028b8:	50                   	push   %eax
810028b9:	e8 34 fb ff ff       	call   810023f2 <_fseeko_r>
810028be:	83 c4 10             	add    $0x10,%esp
810028c1:	c9                   	leave  
810028c2:	c3                   	ret    

810028c3 <_fstat_r>:
810028c3:	55                   	push   %ebp
810028c4:	89 e5                	mov    %esp,%ebp
810028c6:	83 ec 18             	sub    $0x18,%esp
810028c9:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
810028d0:	00 00 00 
810028d3:	83 ec 08             	sub    $0x8,%esp
810028d6:	ff 75 10             	pushl  0x10(%ebp)
810028d9:	ff 75 0c             	pushl  0xc(%ebp)
810028dc:	e8 77 e4 ff ff       	call   81000d58 <fstat>
810028e1:	83 c4 10             	add    $0x10,%esp
810028e4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810028e7:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810028eb:	75 14                	jne    81002901 <_fstat_r+0x3e>
810028ed:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810028f2:	85 c0                	test   %eax,%eax
810028f4:	74 0b                	je     81002901 <_fstat_r+0x3e>
810028f6:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810028fc:	8b 45 08             	mov    0x8(%ebp),%eax
810028ff:	89 10                	mov    %edx,(%eax)
81002901:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002904:	c9                   	leave  
81002905:	c3                   	ret    

81002906 <__sfvwrite_r>:
81002906:	55                   	push   %ebp
81002907:	89 e5                	mov    %esp,%ebp
81002909:	57                   	push   %edi
8100290a:	56                   	push   %esi
8100290b:	53                   	push   %ebx
8100290c:	83 ec 3c             	sub    $0x3c,%esp
8100290f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81002912:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
81002919:	8b 45 10             	mov    0x10(%ebp),%eax
8100291c:	8b 78 08             	mov    0x8(%eax),%edi
8100291f:	85 ff                	test   %edi,%edi
81002921:	75 0a                	jne    8100292d <__sfvwrite_r+0x27>
81002923:	b8 00 00 00 00       	mov    $0x0,%eax
81002928:	e9 6f 04 00 00       	jmp    81002d9c <__sfvwrite_r+0x496>
8100292d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002931:	98                   	cwtl   
81002932:	83 e0 08             	and    $0x8,%eax
81002935:	85 c0                	test   %eax,%eax
81002937:	74 07                	je     81002940 <__sfvwrite_r+0x3a>
81002939:	8b 43 10             	mov    0x10(%ebx),%eax
8100293c:	85 c0                	test   %eax,%eax
8100293e:	75 1d                	jne    8100295d <__sfvwrite_r+0x57>
81002940:	83 ec 08             	sub    $0x8,%esp
81002943:	53                   	push   %ebx
81002944:	ff 75 08             	pushl  0x8(%ebp)
81002947:	e8 34 48 00 00       	call   81007180 <__swsetup_r>
8100294c:	83 c4 10             	add    $0x10,%esp
8100294f:	85 c0                	test   %eax,%eax
81002951:	74 0a                	je     8100295d <__sfvwrite_r+0x57>
81002953:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002958:	e9 3f 04 00 00       	jmp    81002d9c <__sfvwrite_r+0x496>
8100295d:	8b 45 10             	mov    0x10(%ebp),%eax
81002960:	8b 00                	mov    (%eax),%eax
81002962:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002965:	bf 00 00 00 00       	mov    $0x0,%edi
8100296a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100296e:	98                   	cwtl   
8100296f:	83 e0 02             	and    $0x2,%eax
81002972:	85 c0                	test   %eax,%eax
81002974:	74 68                	je     810029de <__sfvwrite_r+0xd8>
81002976:	eb 11                	jmp    81002989 <__sfvwrite_r+0x83>
81002978:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100297b:	8b 08                	mov    (%eax),%ecx
8100297d:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002980:	8b 78 04             	mov    0x4(%eax),%edi
81002983:	83 c0 08             	add    $0x8,%eax
81002986:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002989:	85 ff                	test   %edi,%edi
8100298b:	74 eb                	je     81002978 <__sfvwrite_r+0x72>
8100298d:	8b 4b 24             	mov    0x24(%ebx),%ecx
81002990:	b8 00 fc ff 7f       	mov    $0x7ffffc00,%eax
81002995:	39 c7                	cmp    %eax,%edi
81002997:	0f 46 c7             	cmovbe %edi,%eax
8100299a:	89 c2                	mov    %eax,%edx
8100299c:	8b 43 1c             	mov    0x1c(%ebx),%eax
8100299f:	52                   	push   %edx
810029a0:	ff 75 c4             	pushl  -0x3c(%ebp)
810029a3:	50                   	push   %eax
810029a4:	ff 75 08             	pushl  0x8(%ebp)
810029a7:	ff d1                	call   *%ecx
810029a9:	83 c4 10             	add    $0x10,%esp
810029ac:	89 c6                	mov    %eax,%esi
810029ae:	85 f6                	test   %esi,%esi
810029b0:	0f 8e cf 03 00 00    	jle    81002d85 <__sfvwrite_r+0x47f>
810029b6:	89 f0                	mov    %esi,%eax
810029b8:	01 45 c4             	add    %eax,-0x3c(%ebp)
810029bb:	89 f0                	mov    %esi,%eax
810029bd:	29 c7                	sub    %eax,%edi
810029bf:	8b 45 10             	mov    0x10(%ebp),%eax
810029c2:	8b 40 08             	mov    0x8(%eax),%eax
810029c5:	89 f2                	mov    %esi,%edx
810029c7:	29 d0                	sub    %edx,%eax
810029c9:	8b 4d 10             	mov    0x10(%ebp),%ecx
810029cc:	89 41 08             	mov    %eax,0x8(%ecx)
810029cf:	8b 45 10             	mov    0x10(%ebp),%eax
810029d2:	8b 40 08             	mov    0x8(%eax),%eax
810029d5:	85 c0                	test   %eax,%eax
810029d7:	75 b0                	jne    81002989 <__sfvwrite_r+0x83>
810029d9:	e9 a0 03 00 00       	jmp    81002d7e <__sfvwrite_r+0x478>
810029de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810029e2:	98                   	cwtl   
810029e3:	83 e0 01             	and    $0x1,%eax
810029e6:	85 c0                	test   %eax,%eax
810029e8:	0f 85 44 02 00 00    	jne    81002c32 <__sfvwrite_r+0x32c>
810029ee:	eb 11                	jmp    81002a01 <__sfvwrite_r+0xfb>
810029f0:	8b 45 c0             	mov    -0x40(%ebp),%eax
810029f3:	8b 08                	mov    (%eax),%ecx
810029f5:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
810029f8:	8b 78 04             	mov    0x4(%eax),%edi
810029fb:	83 c0 08             	add    $0x8,%eax
810029fe:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002a01:	85 ff                	test   %edi,%edi
81002a03:	74 eb                	je     810029f0 <__sfvwrite_r+0xea>
81002a05:	8b 73 08             	mov    0x8(%ebx),%esi
81002a08:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a0c:	98                   	cwtl   
81002a0d:	25 00 02 00 00       	and    $0x200,%eax
81002a12:	85 c0                	test   %eax,%eax
81002a14:	0f 84 4f 01 00 00    	je     81002b69 <__sfvwrite_r+0x263>
81002a1a:	89 f0                	mov    %esi,%eax
81002a1c:	39 c7                	cmp    %eax,%edi
81002a1e:	0f 82 12 01 00 00    	jb     81002b36 <__sfvwrite_r+0x230>
81002a24:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a28:	98                   	cwtl   
81002a29:	25 80 04 00 00       	and    $0x480,%eax
81002a2e:	85 c0                	test   %eax,%eax
81002a30:	0f 84 00 01 00 00    	je     81002b36 <__sfvwrite_r+0x230>
81002a36:	8b 03                	mov    (%ebx),%eax
81002a38:	8b 53 10             	mov    0x10(%ebx),%edx
81002a3b:	29 d0                	sub    %edx,%eax
81002a3d:	89 45 d0             	mov    %eax,-0x30(%ebp)
81002a40:	8b 53 14             	mov    0x14(%ebx),%edx
81002a43:	89 d0                	mov    %edx,%eax
81002a45:	01 c0                	add    %eax,%eax
81002a47:	01 d0                	add    %edx,%eax
81002a49:	89 c2                	mov    %eax,%edx
81002a4b:	c1 ea 1f             	shr    $0x1f,%edx
81002a4e:	01 d0                	add    %edx,%eax
81002a50:	d1 f8                	sar    %eax
81002a52:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a55:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a58:	01 f8                	add    %edi,%eax
81002a5a:	8d 50 01             	lea    0x1(%eax),%edx
81002a5d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a60:	39 c2                	cmp    %eax,%edx
81002a62:	76 0b                	jbe    81002a6f <__sfvwrite_r+0x169>
81002a64:	8b 45 d0             	mov    -0x30(%ebp),%eax
81002a67:	01 f8                	add    %edi,%eax
81002a69:	83 c0 01             	add    $0x1,%eax
81002a6c:	89 45 d8             	mov    %eax,-0x28(%ebp)
81002a6f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002a73:	98                   	cwtl   
81002a74:	25 00 04 00 00       	and    $0x400,%eax
81002a79:	85 c0                	test   %eax,%eax
81002a7b:	74 4f                	je     81002acc <__sfvwrite_r+0x1c6>
81002a7d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002a80:	83 ec 08             	sub    $0x8,%esp
81002a83:	50                   	push   %eax
81002a84:	ff 75 08             	pushl  0x8(%ebp)
81002a87:	e8 02 17 00 00       	call   8100418e <_malloc_r>
81002a8c:	83 c4 10             	add    $0x10,%esp
81002a8f:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002a92:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002a96:	75 0e                	jne    81002aa6 <__sfvwrite_r+0x1a0>
81002a98:	8b 45 08             	mov    0x8(%ebp),%eax
81002a9b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002aa1:	e9 e6 02 00 00       	jmp    81002d8c <__sfvwrite_r+0x486>
81002aa6:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002aa9:	8b 43 10             	mov    0x10(%ebx),%eax
81002aac:	83 ec 04             	sub    $0x4,%esp
81002aaf:	52                   	push   %edx
81002ab0:	50                   	push   %eax
81002ab1:	ff 75 dc             	pushl  -0x24(%ebp)
81002ab4:	e8 df 1f 00 00       	call   81004a98 <memcpy>
81002ab9:	83 c4 10             	add    $0x10,%esp
81002abc:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002ac0:	66 25 7f fb          	and    $0xfb7f,%ax
81002ac4:	0c 80                	or     $0x80,%al
81002ac6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002aca:	eb 49                	jmp    81002b15 <__sfvwrite_r+0x20f>
81002acc:	8b 55 d8             	mov    -0x28(%ebp),%edx
81002acf:	8b 43 10             	mov    0x10(%ebx),%eax
81002ad2:	83 ec 04             	sub    $0x4,%esp
81002ad5:	52                   	push   %edx
81002ad6:	50                   	push   %eax
81002ad7:	ff 75 08             	pushl  0x8(%ebp)
81002ada:	e8 0b 2e 00 00       	call   810058ea <_realloc_r>
81002adf:	83 c4 10             	add    $0x10,%esp
81002ae2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002ae5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81002ae9:	75 2a                	jne    81002b15 <__sfvwrite_r+0x20f>
81002aeb:	8b 43 10             	mov    0x10(%ebx),%eax
81002aee:	83 ec 08             	sub    $0x8,%esp
81002af1:	50                   	push   %eax
81002af2:	ff 75 08             	pushl  0x8(%ebp)
81002af5:	e8 7f f3 ff ff       	call   81001e79 <_free_r>
81002afa:	83 c4 10             	add    $0x10,%esp
81002afd:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002b01:	24 7f                	and    $0x7f,%al
81002b03:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002b07:	8b 45 08             	mov    0x8(%ebp),%eax
81002b0a:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81002b10:	e9 77 02 00 00       	jmp    81002d8c <__sfvwrite_r+0x486>
81002b15:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b18:	89 43 10             	mov    %eax,0x10(%ebx)
81002b1b:	8b 55 d0             	mov    -0x30(%ebp),%edx
81002b1e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81002b21:	01 d0                	add    %edx,%eax
81002b23:	89 03                	mov    %eax,(%ebx)
81002b25:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b28:	89 43 14             	mov    %eax,0x14(%ebx)
81002b2b:	89 fe                	mov    %edi,%esi
81002b2d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81002b30:	2b 45 d0             	sub    -0x30(%ebp),%eax
81002b33:	89 43 08             	mov    %eax,0x8(%ebx)
81002b36:	89 f0                	mov    %esi,%eax
81002b38:	39 c7                	cmp    %eax,%edi
81002b3a:	73 02                	jae    81002b3e <__sfvwrite_r+0x238>
81002b3c:	89 fe                	mov    %edi,%esi
81002b3e:	89 f2                	mov    %esi,%edx
81002b40:	8b 03                	mov    (%ebx),%eax
81002b42:	83 ec 04             	sub    $0x4,%esp
81002b45:	52                   	push   %edx
81002b46:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b49:	50                   	push   %eax
81002b4a:	e8 91 1f 00 00       	call   81004ae0 <memmove>
81002b4f:	83 c4 10             	add    $0x10,%esp
81002b52:	8b 43 08             	mov    0x8(%ebx),%eax
81002b55:	29 f0                	sub    %esi,%eax
81002b57:	89 43 08             	mov    %eax,0x8(%ebx)
81002b5a:	8b 03                	mov    (%ebx),%eax
81002b5c:	89 f2                	mov    %esi,%edx
81002b5e:	01 d0                	add    %edx,%eax
81002b60:	89 03                	mov    %eax,(%ebx)
81002b62:	89 fe                	mov    %edi,%esi
81002b64:	e9 9d 00 00 00       	jmp    81002c06 <__sfvwrite_r+0x300>
81002b69:	8b 13                	mov    (%ebx),%edx
81002b6b:	8b 43 10             	mov    0x10(%ebx),%eax
81002b6e:	39 c2                	cmp    %eax,%edx
81002b70:	77 07                	ja     81002b79 <__sfvwrite_r+0x273>
81002b72:	8b 43 14             	mov    0x14(%ebx),%eax
81002b75:	39 c7                	cmp    %eax,%edi
81002b77:	73 4c                	jae    81002bc5 <__sfvwrite_r+0x2bf>
81002b79:	89 f0                	mov    %esi,%eax
81002b7b:	39 c7                	cmp    %eax,%edi
81002b7d:	0f 46 c7             	cmovbe %edi,%eax
81002b80:	89 c6                	mov    %eax,%esi
81002b82:	89 f2                	mov    %esi,%edx
81002b84:	8b 03                	mov    (%ebx),%eax
81002b86:	83 ec 04             	sub    $0x4,%esp
81002b89:	52                   	push   %edx
81002b8a:	ff 75 c4             	pushl  -0x3c(%ebp)
81002b8d:	50                   	push   %eax
81002b8e:	e8 4d 1f 00 00       	call   81004ae0 <memmove>
81002b93:	83 c4 10             	add    $0x10,%esp
81002b96:	8b 43 08             	mov    0x8(%ebx),%eax
81002b99:	29 f0                	sub    %esi,%eax
81002b9b:	89 43 08             	mov    %eax,0x8(%ebx)
81002b9e:	8b 03                	mov    (%ebx),%eax
81002ba0:	89 f2                	mov    %esi,%edx
81002ba2:	01 d0                	add    %edx,%eax
81002ba4:	89 03                	mov    %eax,(%ebx)
81002ba6:	8b 43 08             	mov    0x8(%ebx),%eax
81002ba9:	85 c0                	test   %eax,%eax
81002bab:	75 58                	jne    81002c05 <__sfvwrite_r+0x2ff>
81002bad:	83 ec 08             	sub    $0x8,%esp
81002bb0:	53                   	push   %ebx
81002bb1:	ff 75 08             	pushl  0x8(%ebp)
81002bb4:	e8 1e e7 ff ff       	call   810012d7 <_fflush_r>
81002bb9:	83 c4 10             	add    $0x10,%esp
81002bbc:	85 c0                	test   %eax,%eax
81002bbe:	74 45                	je     81002c05 <__sfvwrite_r+0x2ff>
81002bc0:	e9 c7 01 00 00       	jmp    81002d8c <__sfvwrite_r+0x486>
81002bc5:	81 ff fe ff ff 7f    	cmp    $0x7ffffffe,%edi
81002bcb:	77 04                	ja     81002bd1 <__sfvwrite_r+0x2cb>
81002bcd:	89 f8                	mov    %edi,%eax
81002bcf:	eb 05                	jmp    81002bd6 <__sfvwrite_r+0x2d0>
81002bd1:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81002bd6:	8b 4b 14             	mov    0x14(%ebx),%ecx
81002bd9:	99                   	cltd   
81002bda:	f7 f9                	idiv   %ecx
81002bdc:	89 c2                	mov    %eax,%edx
81002bde:	8b 43 14             	mov    0x14(%ebx),%eax
81002be1:	89 d6                	mov    %edx,%esi
81002be3:	0f af f0             	imul   %eax,%esi
81002be6:	8b 53 24             	mov    0x24(%ebx),%edx
81002be9:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002bec:	56                   	push   %esi
81002bed:	ff 75 c4             	pushl  -0x3c(%ebp)
81002bf0:	50                   	push   %eax
81002bf1:	ff 75 08             	pushl  0x8(%ebp)
81002bf4:	ff d2                	call   *%edx
81002bf6:	83 c4 10             	add    $0x10,%esp
81002bf9:	89 c6                	mov    %eax,%esi
81002bfb:	85 f6                	test   %esi,%esi
81002bfd:	0f 8e 85 01 00 00    	jle    81002d88 <__sfvwrite_r+0x482>
81002c03:	eb 01                	jmp    81002c06 <__sfvwrite_r+0x300>
81002c05:	90                   	nop
81002c06:	89 f0                	mov    %esi,%eax
81002c08:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002c0b:	89 f0                	mov    %esi,%eax
81002c0d:	29 c7                	sub    %eax,%edi
81002c0f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c12:	8b 40 08             	mov    0x8(%eax),%eax
81002c15:	89 f2                	mov    %esi,%edx
81002c17:	29 d0                	sub    %edx,%eax
81002c19:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002c1c:	89 41 08             	mov    %eax,0x8(%ecx)
81002c1f:	8b 45 10             	mov    0x10(%ebp),%eax
81002c22:	8b 40 08             	mov    0x8(%eax),%eax
81002c25:	85 c0                	test   %eax,%eax
81002c27:	0f 85 d4 fd ff ff    	jne    81002a01 <__sfvwrite_r+0xfb>
81002c2d:	e9 4c 01 00 00       	jmp    81002d7e <__sfvwrite_r+0x478>
81002c32:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c39:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)
81002c40:	eb 18                	jmp    81002c5a <__sfvwrite_r+0x354>
81002c42:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002c49:	8b 45 c0             	mov    -0x40(%ebp),%eax
81002c4c:	8b 08                	mov    (%eax),%ecx
81002c4e:	89 4d c4             	mov    %ecx,-0x3c(%ebp)
81002c51:	8b 78 04             	mov    0x4(%eax),%edi
81002c54:	83 c0 08             	add    $0x8,%eax
81002c57:	89 45 c0             	mov    %eax,-0x40(%ebp)
81002c5a:	85 ff                	test   %edi,%edi
81002c5c:	74 e4                	je     81002c42 <__sfvwrite_r+0x33c>
81002c5e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81002c62:	75 32                	jne    81002c96 <__sfvwrite_r+0x390>
81002c64:	83 ec 04             	sub    $0x4,%esp
81002c67:	57                   	push   %edi
81002c68:	6a 0a                	push   $0xa
81002c6a:	8b 75 c4             	mov    -0x3c(%ebp),%esi
81002c6d:	56                   	push   %esi
81002c6e:	e8 3d 1d 00 00       	call   810049b0 <memchr>
81002c73:	83 c4 10             	add    $0x10,%esp
81002c76:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81002c79:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81002c7d:	74 0a                	je     81002c89 <__sfvwrite_r+0x383>
81002c7f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81002c82:	83 c0 01             	add    $0x1,%eax
81002c85:	29 f0                	sub    %esi,%eax
81002c87:	eb 03                	jmp    81002c8c <__sfvwrite_r+0x386>
81002c89:	8d 47 01             	lea    0x1(%edi),%eax
81002c8c:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002c8f:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81002c96:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002c99:	39 c7                	cmp    %eax,%edi
81002c9b:	0f 46 c7             	cmovbe %edi,%eax
81002c9e:	89 c1                	mov    %eax,%ecx
81002ca0:	8b 53 08             	mov    0x8(%ebx),%edx
81002ca3:	8b 43 14             	mov    0x14(%ebx),%eax
81002ca6:	8d 34 02             	lea    (%edx,%eax,1),%esi
81002ca9:	8b 13                	mov    (%ebx),%edx
81002cab:	8b 43 10             	mov    0x10(%ebx),%eax
81002cae:	39 c2                	cmp    %eax,%edx
81002cb0:	76 38                	jbe    81002cea <__sfvwrite_r+0x3e4>
81002cb2:	39 f1                	cmp    %esi,%ecx
81002cb4:	7e 34                	jle    81002cea <__sfvwrite_r+0x3e4>
81002cb6:	89 f2                	mov    %esi,%edx
81002cb8:	8b 03                	mov    (%ebx),%eax
81002cba:	83 ec 04             	sub    $0x4,%esp
81002cbd:	52                   	push   %edx
81002cbe:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cc1:	50                   	push   %eax
81002cc2:	e8 19 1e 00 00       	call   81004ae0 <memmove>
81002cc7:	83 c4 10             	add    $0x10,%esp
81002cca:	8b 03                	mov    (%ebx),%eax
81002ccc:	89 f2                	mov    %esi,%edx
81002cce:	01 d0                	add    %edx,%eax
81002cd0:	89 03                	mov    %eax,(%ebx)
81002cd2:	83 ec 08             	sub    $0x8,%esp
81002cd5:	53                   	push   %ebx
81002cd6:	ff 75 08             	pushl  0x8(%ebp)
81002cd9:	e8 f9 e5 ff ff       	call   810012d7 <_fflush_r>
81002cde:	83 c4 10             	add    $0x10,%esp
81002ce1:	85 c0                	test   %eax,%eax
81002ce3:	74 4f                	je     81002d34 <__sfvwrite_r+0x42e>
81002ce5:	e9 a2 00 00 00       	jmp    81002d8c <__sfvwrite_r+0x486>
81002cea:	8b 73 14             	mov    0x14(%ebx),%esi
81002ced:	89 c8                	mov    %ecx,%eax
81002cef:	39 c6                	cmp    %eax,%esi
81002cf1:	7f 1b                	jg     81002d0e <__sfvwrite_r+0x408>
81002cf3:	8b 53 24             	mov    0x24(%ebx),%edx
81002cf6:	8b 43 1c             	mov    0x1c(%ebx),%eax
81002cf9:	56                   	push   %esi
81002cfa:	ff 75 c4             	pushl  -0x3c(%ebp)
81002cfd:	50                   	push   %eax
81002cfe:	ff 75 08             	pushl  0x8(%ebp)
81002d01:	ff d2                	call   *%edx
81002d03:	83 c4 10             	add    $0x10,%esp
81002d06:	89 c6                	mov    %eax,%esi
81002d08:	85 f6                	test   %esi,%esi
81002d0a:	7f 28                	jg     81002d34 <__sfvwrite_r+0x42e>
81002d0c:	eb 7e                	jmp    81002d8c <__sfvwrite_r+0x486>
81002d0e:	89 ce                	mov    %ecx,%esi
81002d10:	89 f2                	mov    %esi,%edx
81002d12:	8b 03                	mov    (%ebx),%eax
81002d14:	83 ec 04             	sub    $0x4,%esp
81002d17:	52                   	push   %edx
81002d18:	ff 75 c4             	pushl  -0x3c(%ebp)
81002d1b:	50                   	push   %eax
81002d1c:	e8 bf 1d 00 00       	call   81004ae0 <memmove>
81002d21:	83 c4 10             	add    $0x10,%esp
81002d24:	8b 43 08             	mov    0x8(%ebx),%eax
81002d27:	29 f0                	sub    %esi,%eax
81002d29:	89 43 08             	mov    %eax,0x8(%ebx)
81002d2c:	8b 03                	mov    (%ebx),%eax
81002d2e:	89 f2                	mov    %esi,%edx
81002d30:	01 d0                	add    %edx,%eax
81002d32:	89 03                	mov    %eax,(%ebx)
81002d34:	29 75 e0             	sub    %esi,-0x20(%ebp)
81002d37:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81002d3b:	75 1a                	jne    81002d57 <__sfvwrite_r+0x451>
81002d3d:	83 ec 08             	sub    $0x8,%esp
81002d40:	53                   	push   %ebx
81002d41:	ff 75 08             	pushl  0x8(%ebp)
81002d44:	e8 8e e5 ff ff       	call   810012d7 <_fflush_r>
81002d49:	83 c4 10             	add    $0x10,%esp
81002d4c:	85 c0                	test   %eax,%eax
81002d4e:	75 3b                	jne    81002d8b <__sfvwrite_r+0x485>
81002d50:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002d57:	89 f0                	mov    %esi,%eax
81002d59:	01 45 c4             	add    %eax,-0x3c(%ebp)
81002d5c:	89 f0                	mov    %esi,%eax
81002d5e:	29 c7                	sub    %eax,%edi
81002d60:	8b 45 10             	mov    0x10(%ebp),%eax
81002d63:	8b 40 08             	mov    0x8(%eax),%eax
81002d66:	89 f2                	mov    %esi,%edx
81002d68:	29 d0                	sub    %edx,%eax
81002d6a:	8b 4d 10             	mov    0x10(%ebp),%ecx
81002d6d:	89 41 08             	mov    %eax,0x8(%ecx)
81002d70:	8b 45 10             	mov    0x10(%ebp),%eax
81002d73:	8b 40 08             	mov    0x8(%eax),%eax
81002d76:	85 c0                	test   %eax,%eax
81002d78:	0f 85 dc fe ff ff    	jne    81002c5a <__sfvwrite_r+0x354>
81002d7e:	b8 00 00 00 00       	mov    $0x0,%eax
81002d83:	eb 17                	jmp    81002d9c <__sfvwrite_r+0x496>
81002d85:	90                   	nop
81002d86:	eb 04                	jmp    81002d8c <__sfvwrite_r+0x486>
81002d88:	90                   	nop
81002d89:	eb 01                	jmp    81002d8c <__sfvwrite_r+0x486>
81002d8b:	90                   	nop
81002d8c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002d90:	83 c8 40             	or     $0x40,%eax
81002d93:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81002d97:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81002d9c:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002d9f:	5b                   	pop    %ebx
81002da0:	5e                   	pop    %esi
81002da1:	5f                   	pop    %edi
81002da2:	5d                   	pop    %ebp
81002da3:	c3                   	ret    

81002da4 <_fwalk>:
81002da4:	55                   	push   %ebp
81002da5:	89 e5                	mov    %esp,%ebp
81002da7:	57                   	push   %edi
81002da8:	56                   	push   %esi
81002da9:	53                   	push   %ebx
81002daa:	83 ec 1c             	sub    $0x1c,%esp
81002dad:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002db4:	8b 45 08             	mov    0x8(%ebp),%eax
81002db7:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002dbd:	eb 3e                	jmp    81002dfd <_fwalk+0x59>
81002dbf:	8b 5e 08             	mov    0x8(%esi),%ebx
81002dc2:	8b 7e 04             	mov    0x4(%esi),%edi
81002dc5:	eb 2d                	jmp    81002df4 <_fwalk+0x50>
81002dc7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dcb:	66 85 c0             	test   %ax,%ax
81002dce:	74 21                	je     81002df1 <_fwalk+0x4d>
81002dd0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002dd4:	66 83 f8 01          	cmp    $0x1,%ax
81002dd8:	74 17                	je     81002df1 <_fwalk+0x4d>
81002dda:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002dde:	66 83 f8 ff          	cmp    $0xffff,%ax
81002de2:	74 0d                	je     81002df1 <_fwalk+0x4d>
81002de4:	83 ec 0c             	sub    $0xc,%esp
81002de7:	53                   	push   %ebx
81002de8:	ff 55 0c             	call   *0xc(%ebp)
81002deb:	83 c4 10             	add    $0x10,%esp
81002dee:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002df1:	83 c3 68             	add    $0x68,%ebx
81002df4:	83 ef 01             	sub    $0x1,%edi
81002df7:	85 ff                	test   %edi,%edi
81002df9:	79 cc                	jns    81002dc7 <_fwalk+0x23>
81002dfb:	8b 36                	mov    (%esi),%esi
81002dfd:	85 f6                	test   %esi,%esi
81002dff:	75 be                	jne    81002dbf <_fwalk+0x1b>
81002e01:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e04:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e07:	5b                   	pop    %ebx
81002e08:	5e                   	pop    %esi
81002e09:	5f                   	pop    %edi
81002e0a:	5d                   	pop    %ebp
81002e0b:	c3                   	ret    

81002e0c <_fwalk_reent>:
81002e0c:	55                   	push   %ebp
81002e0d:	89 e5                	mov    %esp,%ebp
81002e0f:	57                   	push   %edi
81002e10:	56                   	push   %esi
81002e11:	53                   	push   %ebx
81002e12:	83 ec 1c             	sub    $0x1c,%esp
81002e15:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81002e1c:	8b 45 08             	mov    0x8(%ebp),%eax
81002e1f:	8d b0 e0 02 00 00    	lea    0x2e0(%eax),%esi
81002e25:	eb 41                	jmp    81002e68 <_fwalk_reent+0x5c>
81002e27:	8b 5e 08             	mov    0x8(%esi),%ebx
81002e2a:	8b 7e 04             	mov    0x4(%esi),%edi
81002e2d:	eb 30                	jmp    81002e5f <_fwalk_reent+0x53>
81002e2f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e33:	66 85 c0             	test   %ax,%ax
81002e36:	74 24                	je     81002e5c <_fwalk_reent+0x50>
81002e38:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81002e3c:	66 83 f8 01          	cmp    $0x1,%ax
81002e40:	74 1a                	je     81002e5c <_fwalk_reent+0x50>
81002e42:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81002e46:	66 83 f8 ff          	cmp    $0xffff,%ax
81002e4a:	74 10                	je     81002e5c <_fwalk_reent+0x50>
81002e4c:	83 ec 08             	sub    $0x8,%esp
81002e4f:	53                   	push   %ebx
81002e50:	ff 75 08             	pushl  0x8(%ebp)
81002e53:	ff 55 0c             	call   *0xc(%ebp)
81002e56:	83 c4 10             	add    $0x10,%esp
81002e59:	09 45 e4             	or     %eax,-0x1c(%ebp)
81002e5c:	83 c3 68             	add    $0x68,%ebx
81002e5f:	83 ef 01             	sub    $0x1,%edi
81002e62:	85 ff                	test   %edi,%edi
81002e64:	79 c9                	jns    81002e2f <_fwalk_reent+0x23>
81002e66:	8b 36                	mov    (%esi),%esi
81002e68:	85 f6                	test   %esi,%esi
81002e6a:	75 bb                	jne    81002e27 <_fwalk_reent+0x1b>
81002e6c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81002e6f:	8d 65 f4             	lea    -0xc(%ebp),%esp
81002e72:	5b                   	pop    %ebx
81002e73:	5e                   	pop    %esi
81002e74:	5f                   	pop    %edi
81002e75:	5d                   	pop    %ebp
81002e76:	c3                   	ret    

81002e77 <_fwrite_r>:
81002e77:	55                   	push   %ebp
81002e78:	89 e5                	mov    %esp,%ebp
81002e7a:	83 ec 28             	sub    $0x28,%esp
81002e7d:	8b 45 0c             	mov    0xc(%ebp),%eax
81002e80:	89 45 dc             	mov    %eax,-0x24(%ebp)
81002e83:	8b 45 14             	mov    0x14(%ebp),%eax
81002e86:	0f af 45 10          	imul   0x10(%ebp),%eax
81002e8a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81002e8d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002e90:	89 45 e0             	mov    %eax,-0x20(%ebp)
81002e93:	8b 45 e0             	mov    -0x20(%ebp),%eax
81002e96:	89 45 ec             	mov    %eax,-0x14(%ebp)
81002e99:	8d 45 dc             	lea    -0x24(%ebp),%eax
81002e9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81002e9f:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)
81002ea6:	8b 45 08             	mov    0x8(%ebp),%eax
81002ea9:	89 45 f0             	mov    %eax,-0x10(%ebp)
81002eac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81002eb0:	74 18                	je     81002eca <_fwrite_r+0x53>
81002eb2:	8b 45 f0             	mov    -0x10(%ebp),%eax
81002eb5:	8b 40 38             	mov    0x38(%eax),%eax
81002eb8:	85 c0                	test   %eax,%eax
81002eba:	75 0e                	jne    81002eca <_fwrite_r+0x53>
81002ebc:	83 ec 0c             	sub    $0xc,%esp
81002ebf:	ff 75 f0             	pushl  -0x10(%ebp)
81002ec2:	e8 fd e9 ff ff       	call   810018c4 <__sinit>
81002ec7:	83 c4 10             	add    $0x10,%esp
81002eca:	8b 45 18             	mov    0x18(%ebp),%eax
81002ecd:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ed1:	98                   	cwtl   
81002ed2:	25 00 20 00 00       	and    $0x2000,%eax
81002ed7:	85 c0                	test   %eax,%eax
81002ed9:	75 24                	jne    81002eff <_fwrite_r+0x88>
81002edb:	8b 45 18             	mov    0x18(%ebp),%eax
81002ede:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81002ee2:	80 cc 20             	or     $0x20,%ah
81002ee5:	89 c2                	mov    %eax,%edx
81002ee7:	8b 45 18             	mov    0x18(%ebp),%eax
81002eea:	66 89 50 0c          	mov    %dx,0xc(%eax)
81002eee:	8b 45 18             	mov    0x18(%ebp),%eax
81002ef1:	8b 40 64             	mov    0x64(%eax),%eax
81002ef4:	80 e4 df             	and    $0xdf,%ah
81002ef7:	89 c2                	mov    %eax,%edx
81002ef9:	8b 45 18             	mov    0x18(%ebp),%eax
81002efc:	89 50 64             	mov    %edx,0x64(%eax)
81002eff:	83 ec 04             	sub    $0x4,%esp
81002f02:	8d 45 e4             	lea    -0x1c(%ebp),%eax
81002f05:	50                   	push   %eax
81002f06:	ff 75 18             	pushl  0x18(%ebp)
81002f09:	ff 75 08             	pushl  0x8(%ebp)
81002f0c:	e8 f5 f9 ff ff       	call   81002906 <__sfvwrite_r>
81002f11:	83 c4 10             	add    $0x10,%esp
81002f14:	85 c0                	test   %eax,%eax
81002f16:	75 05                	jne    81002f1d <_fwrite_r+0xa6>
81002f18:	8b 45 14             	mov    0x14(%ebp),%eax
81002f1b:	eb 10                	jmp    81002f2d <_fwrite_r+0xb6>
81002f1d:	8b 55 ec             	mov    -0x14(%ebp),%edx
81002f20:	8b 45 f4             	mov    -0xc(%ebp),%eax
81002f23:	29 d0                	sub    %edx,%eax
81002f25:	ba 00 00 00 00       	mov    $0x0,%edx
81002f2a:	f7 75 10             	divl   0x10(%ebp)
81002f2d:	c9                   	leave  
81002f2e:	c3                   	ret    

81002f2f <fwrite>:
81002f2f:	55                   	push   %ebp
81002f30:	89 e5                	mov    %esp,%ebp
81002f32:	83 ec 08             	sub    $0x8,%esp
81002f35:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81002f3a:	83 ec 0c             	sub    $0xc,%esp
81002f3d:	ff 75 14             	pushl  0x14(%ebp)
81002f40:	ff 75 10             	pushl  0x10(%ebp)
81002f43:	ff 75 0c             	pushl  0xc(%ebp)
81002f46:	ff 75 08             	pushl  0x8(%ebp)
81002f49:	50                   	push   %eax
81002f4a:	e8 28 ff ff ff       	call   81002e77 <_fwrite_r>
81002f4f:	83 c4 20             	add    $0x20,%esp
81002f52:	c9                   	leave  
81002f53:	c3                   	ret    

81002f54 <reverse_argv_elements>:
81002f54:	55                   	push   %ebp
81002f55:	89 e5                	mov    %esp,%ebp
81002f57:	83 ec 10             	sub    $0x10,%esp
81002f5a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
81002f61:	eb 5e                	jmp    81002fc1 <reverse_argv_elements+0x6d>
81002f63:	8b 45 fc             	mov    -0x4(%ebp),%eax
81002f66:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f6d:	8b 45 08             	mov    0x8(%ebp),%eax
81002f70:	01 d0                	add    %edx,%eax
81002f72:	8b 00                	mov    (%eax),%eax
81002f74:	89 45 f8             	mov    %eax,-0x8(%ebp)
81002f77:	8b 45 0c             	mov    0xc(%ebp),%eax
81002f7a:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002f7d:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002f82:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002f89:	8b 45 08             	mov    0x8(%ebp),%eax
81002f8c:	01 d0                	add    %edx,%eax
81002f8e:	8b 55 fc             	mov    -0x4(%ebp),%edx
81002f91:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81002f98:	8b 55 08             	mov    0x8(%ebp),%edx
81002f9b:	01 ca                	add    %ecx,%edx
81002f9d:	8b 00                	mov    (%eax),%eax
81002f9f:	89 02                	mov    %eax,(%edx)
81002fa1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fa4:	2b 45 fc             	sub    -0x4(%ebp),%eax
81002fa7:	05 ff ff ff 3f       	add    $0x3fffffff,%eax
81002fac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81002fb3:	8b 45 08             	mov    0x8(%ebp),%eax
81002fb6:	01 c2                	add    %eax,%edx
81002fb8:	8b 45 f8             	mov    -0x8(%ebp),%eax
81002fbb:	89 02                	mov    %eax,(%edx)
81002fbd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81002fc1:	8b 45 0c             	mov    0xc(%ebp),%eax
81002fc4:	d1 f8                	sar    %eax
81002fc6:	39 45 fc             	cmp    %eax,-0x4(%ebp)
81002fc9:	7c 98                	jl     81002f63 <reverse_argv_elements+0xf>
81002fcb:	90                   	nop
81002fcc:	90                   	nop
81002fcd:	c9                   	leave  
81002fce:	c3                   	ret    

81002fcf <permute>:
81002fcf:	55                   	push   %ebp
81002fd0:	89 e5                	mov    %esp,%ebp
81002fd2:	ff 75 0c             	pushl  0xc(%ebp)
81002fd5:	ff 75 08             	pushl  0x8(%ebp)
81002fd8:	e8 77 ff ff ff       	call   81002f54 <reverse_argv_elements>
81002fdd:	83 c4 08             	add    $0x8,%esp
81002fe0:	8b 55 0c             	mov    0xc(%ebp),%edx
81002fe3:	8b 45 10             	mov    0x10(%ebp),%eax
81002fe6:	01 d0                	add    %edx,%eax
81002fe8:	50                   	push   %eax
81002fe9:	ff 75 08             	pushl  0x8(%ebp)
81002fec:	e8 63 ff ff ff       	call   81002f54 <reverse_argv_elements>
81002ff1:	83 c4 08             	add    $0x8,%esp
81002ff4:	ff 75 10             	pushl  0x10(%ebp)
81002ff7:	ff 75 08             	pushl  0x8(%ebp)
81002ffa:	e8 55 ff ff ff       	call   81002f54 <reverse_argv_elements>
81002fff:	83 c4 08             	add    $0x8,%esp
81003002:	90                   	nop
81003003:	c9                   	leave  
81003004:	c3                   	ret    

81003005 <is_option>:
81003005:	55                   	push   %ebp
81003006:	89 e5                	mov    %esp,%ebp
81003008:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100300c:	74 1a                	je     81003028 <is_option+0x23>
8100300e:	8b 45 08             	mov    0x8(%ebp),%eax
81003011:	0f b6 00             	movzbl (%eax),%eax
81003014:	3c 2d                	cmp    $0x2d,%al
81003016:	74 10                	je     81003028 <is_option+0x23>
81003018:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100301c:	74 11                	je     8100302f <is_option+0x2a>
8100301e:	8b 45 08             	mov    0x8(%ebp),%eax
81003021:	0f b6 00             	movzbl (%eax),%eax
81003024:	3c 2b                	cmp    $0x2b,%al
81003026:	75 07                	jne    8100302f <is_option+0x2a>
81003028:	b8 01 00 00 00       	mov    $0x1,%eax
8100302d:	eb 05                	jmp    81003034 <is_option+0x2f>
8100302f:	b8 00 00 00 00       	mov    $0x0,%eax
81003034:	5d                   	pop    %ebp
81003035:	c3                   	ret    

81003036 <read_globals>:
81003036:	55                   	push   %ebp
81003037:	89 e5                	mov    %esp,%ebp
81003039:	8b 15 88 9b 00 81    	mov    0x81009b88,%edx
8100303f:	8b 45 08             	mov    0x8(%ebp),%eax
81003042:	89 10                	mov    %edx,(%eax)
81003044:	8b 15 8c 9b 00 81    	mov    0x81009b8c,%edx
8100304a:	8b 45 08             	mov    0x8(%ebp),%eax
8100304d:	89 50 04             	mov    %edx,0x4(%eax)
81003050:	8b 15 64 8c 00 81    	mov    0x81008c64,%edx
81003056:	8b 45 08             	mov    0x8(%ebp),%eax
81003059:	89 50 08             	mov    %edx,0x8(%eax)
8100305c:	8b 15 68 8c 00 81    	mov    0x81008c68,%edx
81003062:	8b 45 08             	mov    0x8(%ebp),%eax
81003065:	89 50 0c             	mov    %edx,0xc(%eax)
81003068:	8b 15 90 9b 00 81    	mov    0x81009b90,%edx
8100306e:	8b 45 08             	mov    0x8(%ebp),%eax
81003071:	89 50 10             	mov    %edx,0x10(%eax)
81003074:	8b 15 94 9b 00 81    	mov    0x81009b94,%edx
8100307a:	8b 45 08             	mov    0x8(%ebp),%eax
8100307d:	89 50 14             	mov    %edx,0x14(%eax)
81003080:	8b 15 98 9b 00 81    	mov    0x81009b98,%edx
81003086:	8b 45 08             	mov    0x8(%ebp),%eax
81003089:	89 50 18             	mov    %edx,0x18(%eax)
8100308c:	90                   	nop
8100308d:	5d                   	pop    %ebp
8100308e:	c3                   	ret    

8100308f <write_globals>:
8100308f:	55                   	push   %ebp
81003090:	89 e5                	mov    %esp,%ebp
81003092:	8b 45 08             	mov    0x8(%ebp),%eax
81003095:	8b 00                	mov    (%eax),%eax
81003097:	a3 88 9b 00 81       	mov    %eax,0x81009b88
8100309c:	8b 45 08             	mov    0x8(%ebp),%eax
8100309f:	8b 40 04             	mov    0x4(%eax),%eax
810030a2:	a3 8c 9b 00 81       	mov    %eax,0x81009b8c
810030a7:	8b 45 08             	mov    0x8(%ebp),%eax
810030aa:	8b 40 08             	mov    0x8(%eax),%eax
810030ad:	a3 64 8c 00 81       	mov    %eax,0x81008c64
810030b2:	8b 45 08             	mov    0x8(%ebp),%eax
810030b5:	8b 40 0c             	mov    0xc(%eax),%eax
810030b8:	a3 68 8c 00 81       	mov    %eax,0x81008c68
810030bd:	8b 45 08             	mov    0x8(%ebp),%eax
810030c0:	8b 40 10             	mov    0x10(%eax),%eax
810030c3:	a3 90 9b 00 81       	mov    %eax,0x81009b90
810030c8:	8b 45 08             	mov    0x8(%ebp),%eax
810030cb:	8b 40 14             	mov    0x14(%eax),%eax
810030ce:	a3 94 9b 00 81       	mov    %eax,0x81009b94
810030d3:	8b 45 08             	mov    0x8(%ebp),%eax
810030d6:	8b 40 18             	mov    0x18(%eax),%eax
810030d9:	a3 98 9b 00 81       	mov    %eax,0x81009b98
810030de:	90                   	nop
810030df:	5d                   	pop    %ebp
810030e0:	c3                   	ret    

810030e1 <getopt_internal>:
810030e1:	55                   	push   %ebp
810030e2:	89 e5                	mov    %esp,%ebp
810030e4:	53                   	push   %ebx
810030e5:	83 ec 34             	sub    $0x34,%esp
810030e8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810030ef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810030f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810030fd:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81003104:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
8100310b:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)
81003112:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81003119:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81003120:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81003127:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100312b:	74 35                	je     81003162 <getopt_internal+0x81>
8100312d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81003131:	74 2f                	je     81003162 <getopt_internal+0x81>
81003133:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003137:	75 06                	jne    8100313f <getopt_internal+0x5e>
81003139:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100313d:	74 23                	je     81003162 <getopt_internal+0x81>
8100313f:	8b 45 20             	mov    0x20(%ebp),%eax
81003142:	8b 40 04             	mov    0x4(%eax),%eax
81003145:	39 45 08             	cmp    %eax,0x8(%ebp)
81003148:	7e 18                	jle    81003162 <getopt_internal+0x81>
8100314a:	8b 45 20             	mov    0x20(%ebp),%eax
8100314d:	8b 40 04             	mov    0x4(%eax),%eax
81003150:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003157:	8b 45 0c             	mov    0xc(%ebp),%eax
8100315a:	01 d0                	add    %edx,%eax
8100315c:	8b 00                	mov    (%eax),%eax
8100315e:	85 c0                	test   %eax,%eax
81003160:	75 0a                	jne    8100316c <getopt_internal+0x8b>
81003162:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003167:	e9 85 0a 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
8100316c:	8b 45 20             	mov    0x20(%ebp),%eax
8100316f:	8b 40 04             	mov    0x4(%eax),%eax
81003172:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003179:	8b 45 0c             	mov    0xc(%ebp),%eax
8100317c:	01 d0                	add    %edx,%eax
8100317e:	8b 00                	mov    (%eax),%eax
81003180:	83 ec 08             	sub    $0x8,%esp
81003183:	68 5c 88 00 81       	push   $0x8100885c
81003188:	50                   	push   %eax
81003189:	e8 8e 39 00 00       	call   81006b1c <strcmp>
8100318e:	83 c4 10             	add    $0x10,%esp
81003191:	85 c0                	test   %eax,%eax
81003193:	75 19                	jne    810031ae <getopt_internal+0xcd>
81003195:	8b 45 20             	mov    0x20(%ebp),%eax
81003198:	8b 40 04             	mov    0x4(%eax),%eax
8100319b:	8d 50 01             	lea    0x1(%eax),%edx
8100319e:	8b 45 20             	mov    0x20(%ebp),%eax
810031a1:	89 50 04             	mov    %edx,0x4(%eax)
810031a4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810031a9:	e9 43 0a 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
810031ae:	8b 45 20             	mov    0x20(%ebp),%eax
810031b1:	8b 40 04             	mov    0x4(%eax),%eax
810031b4:	85 c0                	test   %eax,%eax
810031b6:	75 28                	jne    810031e0 <getopt_internal+0xff>
810031b8:	8b 45 20             	mov    0x20(%ebp),%eax
810031bb:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810031c2:	8b 45 20             	mov    0x20(%ebp),%eax
810031c5:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810031cc:	8b 45 20             	mov    0x20(%ebp),%eax
810031cf:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
810031d6:	8b 45 20             	mov    0x20(%ebp),%eax
810031d9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
810031e0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810031e4:	74 33                	je     81003219 <getopt_internal+0x138>
810031e6:	8b 45 10             	mov    0x10(%ebp),%eax
810031e9:	0f b6 00             	movzbl (%eax),%eax
810031ec:	3c 2d                	cmp    $0x2d,%al
810031ee:	74 0a                	je     810031fa <getopt_internal+0x119>
810031f0:	8b 45 10             	mov    0x10(%ebp),%eax
810031f3:	0f b6 00             	movzbl (%eax),%eax
810031f6:	3c 2b                	cmp    $0x2b,%al
810031f8:	75 1f                	jne    81003219 <getopt_internal+0x138>
810031fa:	8b 45 10             	mov    0x10(%ebp),%eax
810031fd:	0f b6 00             	movzbl (%eax),%eax
81003200:	3c 2d                	cmp    $0x2d,%al
81003202:	75 07                	jne    8100320b <getopt_internal+0x12a>
81003204:	b8 01 00 00 00       	mov    $0x1,%eax
81003209:	eb 05                	jmp    81003210 <getopt_internal+0x12f>
8100320b:	b8 02 00 00 00       	mov    $0x2,%eax
81003210:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003213:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003217:	eb 23                	jmp    8100323c <getopt_internal+0x15b>
81003219:	83 ec 0c             	sub    $0xc,%esp
8100321c:	68 5f 88 00 81       	push   $0x8100885f
81003221:	e8 37 45 00 00       	call   8100775d <getenv>
81003226:	83 c4 10             	add    $0x10,%esp
81003229:	85 c0                	test   %eax,%eax
8100322b:	74 07                	je     81003234 <getopt_internal+0x153>
8100322d:	b8 02 00 00 00       	mov    $0x2,%eax
81003232:	eb 05                	jmp    81003239 <getopt_internal+0x158>
81003234:	b8 00 00 00 00       	mov    $0x0,%eax
81003239:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100323c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003240:	74 15                	je     81003257 <getopt_internal+0x176>
81003242:	8b 45 10             	mov    0x10(%ebp),%eax
81003245:	0f b6 00             	movzbl (%eax),%eax
81003248:	3c 3a                	cmp    $0x3a,%al
8100324a:	75 0b                	jne    81003257 <getopt_internal+0x176>
8100324c:	83 45 10 01          	addl   $0x1,0x10(%ebp)
81003250:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)
81003257:	8b 45 20             	mov    0x20(%ebp),%eax
8100325a:	8b 40 10             	mov    0x10(%eax),%eax
8100325d:	83 f8 01             	cmp    $0x1,%eax
81003260:	0f 85 a2 01 00 00    	jne    81003408 <getopt_internal+0x327>
81003266:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)
8100326a:	0f 84 02 01 00 00    	je     81003372 <getopt_internal+0x291>
81003270:	83 7d f4 02          	cmpl   $0x2,-0xc(%ebp)
81003274:	0f 84 56 01 00 00    	je     810033d0 <getopt_internal+0x2ef>
8100327a:	8b 45 20             	mov    0x20(%ebp),%eax
8100327d:	8b 50 04             	mov    0x4(%eax),%edx
81003280:	8b 45 20             	mov    0x20(%ebp),%eax
81003283:	89 50 14             	mov    %edx,0x14(%eax)
81003286:	8b 45 20             	mov    0x20(%ebp),%eax
81003289:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
81003290:	eb 1e                	jmp    810032b0 <getopt_internal+0x1cf>
81003292:	8b 45 20             	mov    0x20(%ebp),%eax
81003295:	8b 40 04             	mov    0x4(%eax),%eax
81003298:	8d 50 01             	lea    0x1(%eax),%edx
8100329b:	8b 45 20             	mov    0x20(%ebp),%eax
8100329e:	89 50 04             	mov    %edx,0x4(%eax)
810032a1:	8b 45 20             	mov    0x20(%ebp),%eax
810032a4:	8b 40 18             	mov    0x18(%eax),%eax
810032a7:	8d 50 01             	lea    0x1(%eax),%edx
810032aa:	8b 45 20             	mov    0x20(%ebp),%eax
810032ad:	89 50 18             	mov    %edx,0x18(%eax)
810032b0:	8b 45 20             	mov    0x20(%ebp),%eax
810032b3:	8b 40 04             	mov    0x4(%eax),%eax
810032b6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032bd:	8b 45 0c             	mov    0xc(%ebp),%eax
810032c0:	01 d0                	add    %edx,%eax
810032c2:	8b 00                	mov    (%eax),%eax
810032c4:	83 ec 08             	sub    $0x8,%esp
810032c7:	ff 75 1c             	pushl  0x1c(%ebp)
810032ca:	50                   	push   %eax
810032cb:	e8 35 fd ff ff       	call   81003005 <is_option>
810032d0:	83 c4 10             	add    $0x10,%esp
810032d3:	85 c0                	test   %eax,%eax
810032d5:	74 bb                	je     81003292 <getopt_internal+0x1b1>
810032d7:	8b 45 20             	mov    0x20(%ebp),%eax
810032da:	8b 40 04             	mov    0x4(%eax),%eax
810032dd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810032e4:	8b 45 0c             	mov    0xc(%ebp),%eax
810032e7:	01 d0                	add    %edx,%eax
810032e9:	8b 00                	mov    (%eax),%eax
810032eb:	85 c0                	test   %eax,%eax
810032ed:	75 16                	jne    81003305 <getopt_internal+0x224>
810032ef:	8b 45 20             	mov    0x20(%ebp),%eax
810032f2:	8b 50 14             	mov    0x14(%eax),%edx
810032f5:	8b 45 20             	mov    0x20(%ebp),%eax
810032f8:	89 50 04             	mov    %edx,0x4(%eax)
810032fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003300:	e9 ec 08 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003305:	8b 45 20             	mov    0x20(%ebp),%eax
81003308:	8b 40 04             	mov    0x4(%eax),%eax
8100330b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003312:	8b 45 0c             	mov    0xc(%ebp),%eax
81003315:	01 d0                	add    %edx,%eax
81003317:	8b 00                	mov    (%eax),%eax
81003319:	83 ec 08             	sub    $0x8,%esp
8100331c:	68 5c 88 00 81       	push   $0x8100885c
81003321:	50                   	push   %eax
81003322:	e8 f5 37 00 00       	call   81006b1c <strcmp>
81003327:	83 c4 10             	add    $0x10,%esp
8100332a:	85 c0                	test   %eax,%eax
8100332c:	0f 85 cf 00 00 00    	jne    81003401 <getopt_internal+0x320>
81003332:	8b 45 20             	mov    0x20(%ebp),%eax
81003335:	8b 40 18             	mov    0x18(%eax),%eax
81003338:	8b 55 20             	mov    0x20(%ebp),%edx
8100333b:	8b 52 14             	mov    0x14(%edx),%edx
8100333e:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
81003345:	8b 55 0c             	mov    0xc(%ebp),%edx
81003348:	01 ca                	add    %ecx,%edx
8100334a:	83 ec 04             	sub    $0x4,%esp
8100334d:	6a 01                	push   $0x1
8100334f:	50                   	push   %eax
81003350:	52                   	push   %edx
81003351:	e8 79 fc ff ff       	call   81002fcf <permute>
81003356:	83 c4 10             	add    $0x10,%esp
81003359:	8b 45 20             	mov    0x20(%ebp),%eax
8100335c:	8b 40 14             	mov    0x14(%eax),%eax
8100335f:	8d 50 01             	lea    0x1(%eax),%edx
81003362:	8b 45 20             	mov    0x20(%ebp),%eax
81003365:	89 50 04             	mov    %edx,0x4(%eax)
81003368:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100336d:	e9 7f 08 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003372:	8b 45 20             	mov    0x20(%ebp),%eax
81003375:	8b 40 04             	mov    0x4(%eax),%eax
81003378:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100337f:	8b 45 0c             	mov    0xc(%ebp),%eax
81003382:	01 d0                	add    %edx,%eax
81003384:	8b 00                	mov    (%eax),%eax
81003386:	83 ec 08             	sub    $0x8,%esp
81003389:	ff 75 1c             	pushl  0x1c(%ebp)
8100338c:	50                   	push   %eax
8100338d:	e8 73 fc ff ff       	call   81003005 <is_option>
81003392:	83 c4 10             	add    $0x10,%esp
81003395:	85 c0                	test   %eax,%eax
81003397:	75 6b                	jne    81003404 <getopt_internal+0x323>
81003399:	8b 45 20             	mov    0x20(%ebp),%eax
8100339c:	8b 40 04             	mov    0x4(%eax),%eax
8100339f:	8d 48 01             	lea    0x1(%eax),%ecx
810033a2:	8b 55 20             	mov    0x20(%ebp),%edx
810033a5:	89 4a 04             	mov    %ecx,0x4(%edx)
810033a8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033af:	8b 45 0c             	mov    0xc(%ebp),%eax
810033b2:	01 d0                	add    %edx,%eax
810033b4:	8b 10                	mov    (%eax),%edx
810033b6:	8b 45 20             	mov    0x20(%ebp),%eax
810033b9:	89 10                	mov    %edx,(%eax)
810033bb:	8b 45 20             	mov    0x20(%ebp),%eax
810033be:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)
810033c5:	8b 45 20             	mov    0x20(%ebp),%eax
810033c8:	8b 40 0c             	mov    0xc(%eax),%eax
810033cb:	e9 21 08 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
810033d0:	8b 45 20             	mov    0x20(%ebp),%eax
810033d3:	8b 40 04             	mov    0x4(%eax),%eax
810033d6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810033dd:	8b 45 0c             	mov    0xc(%ebp),%eax
810033e0:	01 d0                	add    %edx,%eax
810033e2:	8b 00                	mov    (%eax),%eax
810033e4:	83 ec 08             	sub    $0x8,%esp
810033e7:	ff 75 1c             	pushl  0x1c(%ebp)
810033ea:	50                   	push   %eax
810033eb:	e8 15 fc ff ff       	call   81003005 <is_option>
810033f0:	83 c4 10             	add    $0x10,%esp
810033f3:	85 c0                	test   %eax,%eax
810033f5:	75 10                	jne    81003407 <getopt_internal+0x326>
810033f7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810033fc:	e9 f0 07 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003401:	90                   	nop
81003402:	eb 04                	jmp    81003408 <getopt_internal+0x327>
81003404:	90                   	nop
81003405:	eb 01                	jmp    81003408 <getopt_internal+0x327>
81003407:	90                   	nop
81003408:	8b 45 20             	mov    0x20(%ebp),%eax
8100340b:	8b 40 04             	mov    0x4(%eax),%eax
8100340e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003415:	8b 45 0c             	mov    0xc(%ebp),%eax
81003418:	01 d0                	add    %edx,%eax
8100341a:	8b 00                	mov    (%eax),%eax
8100341c:	85 c0                	test   %eax,%eax
8100341e:	75 0a                	jne    8100342a <getopt_internal+0x349>
81003420:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81003425:	e9 c7 07 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
8100342a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
8100342e:	0f 84 15 03 00 00    	je     81003749 <getopt_internal+0x668>
81003434:	8b 45 20             	mov    0x20(%ebp),%eax
81003437:	8b 40 04             	mov    0x4(%eax),%eax
8100343a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003441:	8b 45 0c             	mov    0xc(%ebp),%eax
81003444:	01 d0                	add    %edx,%eax
81003446:	8b 00                	mov    (%eax),%eax
81003448:	83 ec 04             	sub    $0x4,%esp
8100344b:	6a 02                	push   $0x2
8100344d:	68 5c 88 00 81       	push   $0x8100885c
81003452:	50                   	push   %eax
81003453:	e8 ed 15 00 00       	call   81004a45 <memcmp>
81003458:	83 c4 10             	add    $0x10,%esp
8100345b:	85 c0                	test   %eax,%eax
8100345d:	74 29                	je     81003488 <getopt_internal+0x3a7>
8100345f:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)
81003463:	0f 84 e0 02 00 00    	je     81003749 <getopt_internal+0x668>
81003469:	8b 45 20             	mov    0x20(%ebp),%eax
8100346c:	8b 40 04             	mov    0x4(%eax),%eax
8100346f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003476:	8b 45 0c             	mov    0xc(%ebp),%eax
81003479:	01 d0                	add    %edx,%eax
8100347b:	8b 00                	mov    (%eax),%eax
8100347d:	0f b6 00             	movzbl (%eax),%eax
81003480:	3c 2b                	cmp    $0x2b,%al
81003482:	0f 85 c1 02 00 00    	jne    81003749 <getopt_internal+0x668>
81003488:	8b 45 20             	mov    0x20(%ebp),%eax
8100348b:	8b 40 10             	mov    0x10(%eax),%eax
8100348e:	83 f8 01             	cmp    $0x1,%eax
81003491:	0f 85 b2 02 00 00    	jne    81003749 <getopt_internal+0x668>
81003497:	8b 45 20             	mov    0x20(%ebp),%eax
8100349a:	8b 40 04             	mov    0x4(%eax),%eax
8100349d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810034a7:	01 d0                	add    %edx,%eax
810034a9:	8b 00                	mov    (%eax),%eax
810034ab:	83 ec 04             	sub    $0x4,%esp
810034ae:	6a 02                	push   $0x2
810034b0:	68 5c 88 00 81       	push   $0x8100885c
810034b5:	50                   	push   %eax
810034b6:	e8 8a 15 00 00       	call   81004a45 <memcmp>
810034bb:	83 c4 10             	add    $0x10,%esp
810034be:	85 c0                	test   %eax,%eax
810034c0:	75 0a                	jne    810034cc <getopt_internal+0x3eb>
810034c2:	8b 45 20             	mov    0x20(%ebp),%eax
810034c5:	c7 40 10 02 00 00 00 	movl   $0x2,0x10(%eax)
810034cc:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
810034d3:	8b 45 20             	mov    0x20(%ebp),%eax
810034d6:	8b 40 04             	mov    0x4(%eax),%eax
810034d9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810034e0:	8b 45 0c             	mov    0xc(%ebp),%eax
810034e3:	01 d0                	add    %edx,%eax
810034e5:	8b 10                	mov    (%eax),%edx
810034e7:	8b 45 20             	mov    0x20(%ebp),%eax
810034ea:	8b 40 10             	mov    0x10(%eax),%eax
810034ed:	01 d0                	add    %edx,%eax
810034ef:	83 ec 08             	sub    $0x8,%esp
810034f2:	6a 3d                	push   $0x3d
810034f4:	50                   	push   %eax
810034f5:	e8 26 35 00 00       	call   81006a20 <strchr>
810034fa:	83 c4 10             	add    $0x10,%esp
810034fd:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003500:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81003504:	75 4a                	jne    81003550 <getopt_internal+0x46f>
81003506:	8b 45 20             	mov    0x20(%ebp),%eax
81003509:	8b 40 04             	mov    0x4(%eax),%eax
8100350c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003513:	8b 45 0c             	mov    0xc(%ebp),%eax
81003516:	01 d0                	add    %edx,%eax
81003518:	8b 00                	mov    (%eax),%eax
8100351a:	83 ec 0c             	sub    $0xc,%esp
8100351d:	50                   	push   %eax
8100351e:	e8 ad 36 00 00       	call   81006bd0 <strlen>
81003523:	83 c4 10             	add    $0x10,%esp
81003526:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003529:	8b 45 20             	mov    0x20(%ebp),%eax
8100352c:	8b 40 04             	mov    0x4(%eax),%eax
8100352f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003536:	8b 45 0c             	mov    0xc(%ebp),%eax
81003539:	01 d0                	add    %edx,%eax
8100353b:	8b 10                	mov    (%eax),%edx
8100353d:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003540:	01 d0                	add    %edx,%eax
81003542:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003545:	8b 45 20             	mov    0x20(%ebp),%eax
81003548:	8b 40 10             	mov    0x10(%eax),%eax
8100354b:	29 45 ec             	sub    %eax,-0x14(%ebp)
8100354e:	eb 28                	jmp    81003578 <getopt_internal+0x497>
81003550:	8b 45 20             	mov    0x20(%ebp),%eax
81003553:	8b 40 04             	mov    0x4(%eax),%eax
81003556:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100355d:	8b 45 0c             	mov    0xc(%ebp),%eax
81003560:	01 d0                	add    %edx,%eax
81003562:	8b 08                	mov    (%eax),%ecx
81003564:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003567:	29 c8                	sub    %ecx,%eax
81003569:	89 c2                	mov    %eax,%edx
8100356b:	8b 45 20             	mov    0x20(%ebp),%eax
8100356e:	8b 48 10             	mov    0x10(%eax),%ecx
81003571:	89 d0                	mov    %edx,%eax
81003573:	29 c8                	sub    %ecx,%eax
81003575:	89 45 ec             	mov    %eax,-0x14(%ebp)
81003578:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
8100357f:	e9 95 01 00 00       	jmp    81003719 <getopt_internal+0x638>
81003584:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003587:	c1 e0 04             	shl    $0x4,%eax
8100358a:	89 c2                	mov    %eax,%edx
8100358c:	8b 45 14             	mov    0x14(%ebp),%eax
8100358f:	01 d0                	add    %edx,%eax
81003591:	8b 00                	mov    (%eax),%eax
81003593:	8b 55 20             	mov    0x20(%ebp),%edx
81003596:	8b 52 04             	mov    0x4(%edx),%edx
81003599:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
810035a0:	8b 55 0c             	mov    0xc(%ebp),%edx
810035a3:	01 ca                	add    %ecx,%edx
810035a5:	8b 0a                	mov    (%edx),%ecx
810035a7:	8b 55 20             	mov    0x20(%ebp),%edx
810035aa:	8b 52 10             	mov    0x10(%edx),%edx
810035ad:	01 ca                	add    %ecx,%edx
810035af:	83 ec 04             	sub    $0x4,%esp
810035b2:	ff 75 ec             	pushl  -0x14(%ebp)
810035b5:	50                   	push   %eax
810035b6:	52                   	push   %edx
810035b7:	e8 89 14 00 00       	call   81004a45 <memcmp>
810035bc:	83 c4 10             	add    $0x10,%esp
810035bf:	85 c0                	test   %eax,%eax
810035c1:	0f 85 4e 01 00 00    	jne    81003715 <getopt_internal+0x634>
810035c7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035ca:	c1 e0 04             	shl    $0x4,%eax
810035cd:	89 c2                	mov    %eax,%edx
810035cf:	8b 45 14             	mov    0x14(%ebp),%eax
810035d2:	01 d0                	add    %edx,%eax
810035d4:	8b 00                	mov    (%eax),%eax
810035d6:	83 ec 0c             	sub    $0xc,%esp
810035d9:	50                   	push   %eax
810035da:	e8 f1 35 00 00       	call   81006bd0 <strlen>
810035df:	83 c4 10             	add    $0x10,%esp
810035e2:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810035e5:	75 0b                	jne    810035f2 <getopt_internal+0x511>
810035e7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035ed:	e9 3e 01 00 00       	jmp    81003730 <getopt_internal+0x64f>
810035f2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810035f6:	79 0b                	jns    81003603 <getopt_internal+0x522>
810035f8:	8b 45 f0             	mov    -0x10(%ebp),%eax
810035fb:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810035fe:	e9 12 01 00 00       	jmp    81003715 <getopt_internal+0x634>
81003603:	8b 45 20             	mov    0x20(%ebp),%eax
81003606:	8b 40 08             	mov    0x8(%eax),%eax
81003609:	85 c0                	test   %eax,%eax
8100360b:	0f 84 ef 00 00 00    	je     81003700 <getopt_internal+0x61f>
81003611:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003616:	8b 50 0c             	mov    0xc(%eax),%edx
81003619:	8b 45 0c             	mov    0xc(%ebp),%eax
8100361c:	8b 00                	mov    (%eax),%eax
8100361e:	83 ec 08             	sub    $0x8,%esp
81003621:	52                   	push   %edx
81003622:	50                   	push   %eax
81003623:	e8 98 e5 ff ff       	call   81001bc0 <fputs>
81003628:	83 c4 10             	add    $0x10,%esp
8100362b:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003630:	8b 40 0c             	mov    0xc(%eax),%eax
81003633:	83 ec 08             	sub    $0x8,%esp
81003636:	50                   	push   %eax
81003637:	68 6f 88 00 81       	push   $0x8100886f
8100363c:	e8 7f e5 ff ff       	call   81001bc0 <fputs>
81003641:	83 c4 10             	add    $0x10,%esp
81003644:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003649:	8b 50 0c             	mov    0xc(%eax),%edx
8100364c:	8b 45 20             	mov    0x20(%ebp),%eax
8100364f:	8b 40 04             	mov    0x4(%eax),%eax
81003652:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
81003659:	8b 45 0c             	mov    0xc(%ebp),%eax
8100365c:	01 c8                	add    %ecx,%eax
8100365e:	8b 00                	mov    (%eax),%eax
81003660:	83 ec 08             	sub    $0x8,%esp
81003663:	52                   	push   %edx
81003664:	50                   	push   %eax
81003665:	e8 56 e5 ff ff       	call   81001bc0 <fputs>
8100366a:	83 c4 10             	add    $0x10,%esp
8100366d:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003672:	8b 40 0c             	mov    0xc(%eax),%eax
81003675:	83 ec 08             	sub    $0x8,%esp
81003678:	50                   	push   %eax
81003679:	68 7a 88 00 81       	push   $0x8100887a
8100367e:	e8 3d e5 ff ff       	call   81001bc0 <fputs>
81003683:	83 c4 10             	add    $0x10,%esp
81003686:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100368b:	8b 50 0c             	mov    0xc(%eax),%edx
8100368e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003691:	c1 e0 04             	shl    $0x4,%eax
81003694:	89 c1                	mov    %eax,%ecx
81003696:	8b 45 14             	mov    0x14(%ebp),%eax
81003699:	01 c8                	add    %ecx,%eax
8100369b:	8b 00                	mov    (%eax),%eax
8100369d:	83 ec 08             	sub    $0x8,%esp
810036a0:	52                   	push   %edx
810036a1:	50                   	push   %eax
810036a2:	e8 19 e5 ff ff       	call   81001bc0 <fputs>
810036a7:	83 c4 10             	add    $0x10,%esp
810036aa:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036af:	8b 40 0c             	mov    0xc(%eax),%eax
810036b2:	83 ec 08             	sub    $0x8,%esp
810036b5:	50                   	push   %eax
810036b6:	68 97 88 00 81       	push   $0x81008897
810036bb:	e8 00 e5 ff ff       	call   81001bc0 <fputs>
810036c0:	83 c4 10             	add    $0x10,%esp
810036c3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036c8:	8b 50 0c             	mov    0xc(%eax),%edx
810036cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
810036ce:	c1 e0 04             	shl    $0x4,%eax
810036d1:	89 c1                	mov    %eax,%ecx
810036d3:	8b 45 14             	mov    0x14(%ebp),%eax
810036d6:	01 c8                	add    %ecx,%eax
810036d8:	8b 00                	mov    (%eax),%eax
810036da:	83 ec 08             	sub    $0x8,%esp
810036dd:	52                   	push   %edx
810036de:	50                   	push   %eax
810036df:	e8 dc e4 ff ff       	call   81001bc0 <fputs>
810036e4:	83 c4 10             	add    $0x10,%esp
810036e7:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810036ec:	8b 40 0c             	mov    0xc(%eax),%eax
810036ef:	83 ec 08             	sub    $0x8,%esp
810036f2:	50                   	push   %eax
810036f3:	68 a0 88 00 81       	push   $0x810088a0
810036f8:	e8 c3 e4 ff ff       	call   81001bc0 <fputs>
810036fd:	83 c4 10             	add    $0x10,%esp
81003700:	8b 45 20             	mov    0x20(%ebp),%eax
81003703:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
8100370a:	8b 45 20             	mov    0x20(%ebp),%eax
8100370d:	8b 40 0c             	mov    0xc(%eax),%eax
81003710:	e9 dc 04 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003715:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81003719:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100371c:	c1 e0 04             	shl    $0x4,%eax
8100371f:	89 c2                	mov    %eax,%edx
81003721:	8b 45 14             	mov    0x14(%ebp),%eax
81003724:	01 d0                	add    %edx,%eax
81003726:	8b 00                	mov    (%eax),%eax
81003728:	85 c0                	test   %eax,%eax
8100372a:	0f 85 54 fe ff ff    	jne    81003584 <getopt_internal+0x4a3>
81003730:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003734:	78 13                	js     81003749 <getopt_internal+0x668>
81003736:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003739:	c1 e0 04             	shl    $0x4,%eax
8100373c:	89 c2                	mov    %eax,%edx
8100373e:	8b 45 14             	mov    0x14(%ebp),%eax
81003741:	01 d0                	add    %edx,%eax
81003743:	8b 40 04             	mov    0x4(%eax),%eax
81003746:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003749:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
8100374d:	0f 89 9a 01 00 00    	jns    810038ed <getopt_internal+0x80c>
81003753:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81003757:	0f 84 90 01 00 00    	je     810038ed <getopt_internal+0x80c>
8100375d:	8b 45 20             	mov    0x20(%ebp),%eax
81003760:	8b 40 04             	mov    0x4(%eax),%eax
81003763:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
8100376a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100376d:	01 d0                	add    %edx,%eax
8100376f:	8b 10                	mov    (%eax),%edx
81003771:	8b 45 20             	mov    0x20(%ebp),%eax
81003774:	8b 40 10             	mov    0x10(%eax),%eax
81003777:	01 d0                	add    %edx,%eax
81003779:	0f b6 00             	movzbl (%eax),%eax
8100377c:	0f be c0             	movsbl %al,%eax
8100377f:	83 ec 08             	sub    $0x8,%esp
81003782:	50                   	push   %eax
81003783:	ff 75 10             	pushl  0x10(%ebp)
81003786:	e8 95 32 00 00       	call   81006a20 <strchr>
8100378b:	83 c4 10             	add    $0x10,%esp
8100378e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003791:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81003795:	0f 85 f1 00 00 00    	jne    8100388c <getopt_internal+0x7ab>
8100379b:	8b 45 20             	mov    0x20(%ebp),%eax
8100379e:	8b 40 08             	mov    0x8(%eax),%eax
810037a1:	85 c0                	test   %eax,%eax
810037a3:	0f 84 83 00 00 00    	je     8100382c <getopt_internal+0x74b>
810037a9:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037ae:	8b 50 0c             	mov    0xc(%eax),%edx
810037b1:	8b 45 0c             	mov    0xc(%ebp),%eax
810037b4:	8b 00                	mov    (%eax),%eax
810037b6:	83 ec 08             	sub    $0x8,%esp
810037b9:	52                   	push   %edx
810037ba:	50                   	push   %eax
810037bb:	e8 00 e4 ff ff       	call   81001bc0 <fputs>
810037c0:	83 c4 10             	add    $0x10,%esp
810037c3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037c8:	8b 40 0c             	mov    0xc(%eax),%eax
810037cb:	83 ec 08             	sub    $0x8,%esp
810037ce:	50                   	push   %eax
810037cf:	68 a4 88 00 81       	push   $0x810088a4
810037d4:	e8 e7 e3 ff ff       	call   81001bc0 <fputs>
810037d9:	83 c4 10             	add    $0x10,%esp
810037dc:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810037e1:	8b 50 0c             	mov    0xc(%eax),%edx
810037e4:	8b 45 20             	mov    0x20(%ebp),%eax
810037e7:	8b 40 04             	mov    0x4(%eax),%eax
810037ea:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
810037f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810037f4:	01 c8                	add    %ecx,%eax
810037f6:	8b 08                	mov    (%eax),%ecx
810037f8:	8b 45 20             	mov    0x20(%ebp),%eax
810037fb:	8b 40 10             	mov    0x10(%eax),%eax
810037fe:	01 c8                	add    %ecx,%eax
81003800:	0f b6 00             	movzbl (%eax),%eax
81003803:	0f be c0             	movsbl %al,%eax
81003806:	83 ec 08             	sub    $0x8,%esp
81003809:	52                   	push   %edx
8100380a:	50                   	push   %eax
8100380b:	e8 2a 3d 00 00       	call   8100753a <fputc>
81003810:	83 c4 10             	add    $0x10,%esp
81003813:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003818:	8b 40 0c             	mov    0xc(%eax),%eax
8100381b:	83 ec 08             	sub    $0x8,%esp
8100381e:	50                   	push   %eax
8100381f:	68 bb 88 00 81       	push   $0x810088bb
81003824:	e8 97 e3 ff ff       	call   81001bc0 <fputs>
81003829:	83 c4 10             	add    $0x10,%esp
8100382c:	8b 45 20             	mov    0x20(%ebp),%eax
8100382f:	8b 40 10             	mov    0x10(%eax),%eax
81003832:	8d 50 01             	lea    0x1(%eax),%edx
81003835:	8b 45 20             	mov    0x20(%ebp),%eax
81003838:	89 50 10             	mov    %edx,0x10(%eax)
8100383b:	8b 45 20             	mov    0x20(%ebp),%eax
8100383e:	8b 40 04             	mov    0x4(%eax),%eax
81003841:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003848:	8b 45 0c             	mov    0xc(%ebp),%eax
8100384b:	01 d0                	add    %edx,%eax
8100384d:	8b 10                	mov    (%eax),%edx
8100384f:	8b 45 20             	mov    0x20(%ebp),%eax
81003852:	8b 40 10             	mov    0x10(%eax),%eax
81003855:	01 d0                	add    %edx,%eax
81003857:	0f b6 00             	movzbl (%eax),%eax
8100385a:	84 c0                	test   %al,%al
8100385c:	75 19                	jne    81003877 <getopt_internal+0x796>
8100385e:	8b 45 20             	mov    0x20(%ebp),%eax
81003861:	8b 40 04             	mov    0x4(%eax),%eax
81003864:	8d 50 01             	lea    0x1(%eax),%edx
81003867:	8b 45 20             	mov    0x20(%ebp),%eax
8100386a:	89 50 04             	mov    %edx,0x4(%eax)
8100386d:	8b 45 20             	mov    0x20(%ebp),%eax
81003870:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003877:	8b 45 20             	mov    0x20(%ebp),%eax
8100387a:	c7 40 0c 3f 00 00 00 	movl   $0x3f,0xc(%eax)
81003881:	8b 45 20             	mov    0x20(%ebp),%eax
81003884:	8b 40 0c             	mov    0xc(%eax),%eax
81003887:	e9 65 03 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
8100388c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100388f:	83 c0 01             	add    $0x1,%eax
81003892:	0f b6 00             	movzbl (%eax),%eax
81003895:	3c 3a                	cmp    $0x3a,%al
81003897:	75 1b                	jne    810038b4 <getopt_internal+0x7d3>
81003899:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100389c:	83 c0 02             	add    $0x2,%eax
8100389f:	0f b6 00             	movzbl (%eax),%eax
810038a2:	3c 3a                	cmp    $0x3a,%al
810038a4:	75 07                	jne    810038ad <getopt_internal+0x7cc>
810038a6:	b8 02 00 00 00       	mov    $0x2,%eax
810038ab:	eb 0c                	jmp    810038b9 <getopt_internal+0x7d8>
810038ad:	b8 01 00 00 00       	mov    $0x1,%eax
810038b2:	eb 05                	jmp    810038b9 <getopt_internal+0x7d8>
810038b4:	b8 00 00 00 00       	mov    $0x0,%eax
810038b9:	89 45 e0             	mov    %eax,-0x20(%ebp)
810038bc:	8b 45 20             	mov    0x20(%ebp),%eax
810038bf:	8b 40 04             	mov    0x4(%eax),%eax
810038c2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
810038c9:	8b 45 0c             	mov    0xc(%ebp),%eax
810038cc:	01 d0                	add    %edx,%eax
810038ce:	8b 10                	mov    (%eax),%edx
810038d0:	8b 45 20             	mov    0x20(%ebp),%eax
810038d3:	8b 40 10             	mov    0x10(%eax),%eax
810038d6:	83 c0 01             	add    $0x1,%eax
810038d9:	01 d0                	add    %edx,%eax
810038db:	89 45 e8             	mov    %eax,-0x18(%ebp)
810038de:	8b 45 dc             	mov    -0x24(%ebp),%eax
810038e1:	0f b6 00             	movzbl (%eax),%eax
810038e4:	0f be d0             	movsbl %al,%edx
810038e7:	8b 45 20             	mov    0x20(%ebp),%eax
810038ea:	89 50 0c             	mov    %edx,0xc(%eax)
810038ed:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
810038f4:	83 7d e0 01          	cmpl   $0x1,-0x20(%ebp)
810038f8:	74 40                	je     8100393a <getopt_internal+0x859>
810038fa:	83 7d e0 02          	cmpl   $0x2,-0x20(%ebp)
810038fe:	0f 85 b0 01 00 00    	jne    81003ab4 <getopt_internal+0x9d3>
81003904:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003907:	0f b6 00             	movzbl (%eax),%eax
8100390a:	3c 3d                	cmp    $0x3d,%al
8100390c:	75 04                	jne    81003912 <getopt_internal+0x831>
8100390e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003912:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003915:	0f b6 00             	movzbl (%eax),%eax
81003918:	84 c0                	test   %al,%al
8100391a:	74 05                	je     81003921 <getopt_internal+0x840>
8100391c:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100391f:	eb 05                	jmp    81003926 <getopt_internal+0x845>
81003921:	b8 00 00 00 00       	mov    $0x0,%eax
81003926:	8b 55 20             	mov    0x20(%ebp),%edx
81003929:	89 02                	mov    %eax,(%edx)
8100392b:	8b 45 20             	mov    0x20(%ebp),%eax
8100392e:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003935:	e9 d2 01 00 00       	jmp    81003b0c <getopt_internal+0xa2b>
8100393a:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100393d:	0f b6 00             	movzbl (%eax),%eax
81003940:	3c 3d                	cmp    $0x3d,%al
81003942:	75 04                	jne    81003948 <getopt_internal+0x867>
81003944:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)
81003948:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100394b:	0f b6 00             	movzbl (%eax),%eax
8100394e:	84 c0                	test   %al,%al
81003950:	74 17                	je     81003969 <getopt_internal+0x888>
81003952:	8b 45 20             	mov    0x20(%ebp),%eax
81003955:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003958:	89 10                	mov    %edx,(%eax)
8100395a:	8b 45 20             	mov    0x20(%ebp),%eax
8100395d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003964:	e9 a3 01 00 00       	jmp    81003b0c <getopt_internal+0xa2b>
81003969:	8b 45 20             	mov    0x20(%ebp),%eax
8100396c:	8b 40 04             	mov    0x4(%eax),%eax
8100396f:	83 c0 01             	add    $0x1,%eax
81003972:	39 45 08             	cmp    %eax,0x8(%ebp)
81003975:	0f 8f 0a 01 00 00    	jg     81003a85 <getopt_internal+0x9a4>
8100397b:	8b 45 20             	mov    0x20(%ebp),%eax
8100397e:	8b 40 08             	mov    0x8(%eax),%eax
81003981:	85 c0                	test   %eax,%eax
81003983:	0f 84 d3 00 00 00    	je     81003a5c <getopt_internal+0x97b>
81003989:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100398e:	8b 50 0c             	mov    0xc(%eax),%edx
81003991:	8b 45 0c             	mov    0xc(%ebp),%eax
81003994:	8b 00                	mov    (%eax),%eax
81003996:	83 ec 08             	sub    $0x8,%esp
81003999:	52                   	push   %edx
8100399a:	50                   	push   %eax
8100399b:	e8 20 e2 ff ff       	call   81001bc0 <fputs>
810039a0:	83 c4 10             	add    $0x10,%esp
810039a3:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039a8:	8b 40 0c             	mov    0xc(%eax),%eax
810039ab:	83 ec 08             	sub    $0x8,%esp
810039ae:	50                   	push   %eax
810039af:	68 c0 88 00 81       	push   $0x810088c0
810039b4:	e8 07 e2 ff ff       	call   81001bc0 <fputs>
810039b9:	83 c4 10             	add    $0x10,%esp
810039bc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810039c0:	78 54                	js     81003a16 <getopt_internal+0x935>
810039c2:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039c7:	8b 40 0c             	mov    0xc(%eax),%eax
810039ca:	83 ec 08             	sub    $0x8,%esp
810039cd:	50                   	push   %eax
810039ce:	6a 2d                	push   $0x2d
810039d0:	e8 65 3b 00 00       	call   8100753a <fputc>
810039d5:	83 c4 10             	add    $0x10,%esp
810039d8:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810039dd:	8b 50 0c             	mov    0xc(%eax),%edx
810039e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810039e3:	c1 e0 04             	shl    $0x4,%eax
810039e6:	89 c1                	mov    %eax,%ecx
810039e8:	8b 45 14             	mov    0x14(%ebp),%eax
810039eb:	01 c8                	add    %ecx,%eax
810039ed:	8b 00                	mov    (%eax),%eax
810039ef:	83 ec 08             	sub    $0x8,%esp
810039f2:	52                   	push   %edx
810039f3:	50                   	push   %eax
810039f4:	e8 c7 e1 ff ff       	call   81001bc0 <fputs>
810039f9:	83 c4 10             	add    $0x10,%esp
810039fc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a00:	74 07                	je     81003a09 <getopt_internal+0x928>
81003a02:	ba 3a 00 00 00       	mov    $0x3a,%edx
81003a07:	eb 05                	jmp    81003a0e <getopt_internal+0x92d>
81003a09:	ba 3f 00 00 00       	mov    $0x3f,%edx
81003a0e:	8b 45 20             	mov    0x20(%ebp),%eax
81003a11:	89 50 0c             	mov    %edx,0xc(%eax)
81003a14:	eb 2d                	jmp    81003a43 <getopt_internal+0x962>
81003a16:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003a1b:	8b 50 0c             	mov    0xc(%eax),%edx
81003a1e:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a21:	0f b6 00             	movzbl (%eax),%eax
81003a24:	0f be c0             	movsbl %al,%eax
81003a27:	83 ec 08             	sub    $0x8,%esp
81003a2a:	52                   	push   %edx
81003a2b:	50                   	push   %eax
81003a2c:	e8 09 3b 00 00       	call   8100753a <fputc>
81003a31:	83 c4 10             	add    $0x10,%esp
81003a34:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003a37:	0f b6 00             	movzbl (%eax),%eax
81003a3a:	0f be d0             	movsbl %al,%edx
81003a3d:	8b 45 20             	mov    0x20(%ebp),%eax
81003a40:	89 50 0c             	mov    %edx,0xc(%eax)
81003a43:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003a48:	8b 40 0c             	mov    0xc(%eax),%eax
81003a4b:	83 ec 08             	sub    $0x8,%esp
81003a4e:	50                   	push   %eax
81003a4f:	68 bb 88 00 81       	push   $0x810088bb
81003a54:	e8 67 e1 ff ff       	call   81001bc0 <fputs>
81003a59:	83 c4 10             	add    $0x10,%esp
81003a5c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a5f:	8b 40 04             	mov    0x4(%eax),%eax
81003a62:	8d 50 01             	lea    0x1(%eax),%edx
81003a65:	8b 45 20             	mov    0x20(%ebp),%eax
81003a68:	89 50 04             	mov    %edx,0x4(%eax)
81003a6b:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
81003a6f:	74 0a                	je     81003a7b <getopt_internal+0x99a>
81003a71:	b8 3a 00 00 00       	mov    $0x3a,%eax
81003a76:	e9 76 01 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003a7b:	b8 3f 00 00 00       	mov    $0x3f,%eax
81003a80:	e9 6c 01 00 00       	jmp    81003bf1 <getopt_internal+0xb10>
81003a85:	8b 45 20             	mov    0x20(%ebp),%eax
81003a88:	8b 40 04             	mov    0x4(%eax),%eax
81003a8b:	83 c0 01             	add    $0x1,%eax
81003a8e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003a95:	8b 45 0c             	mov    0xc(%ebp),%eax
81003a98:	01 d0                	add    %edx,%eax
81003a9a:	8b 10                	mov    (%eax),%edx
81003a9c:	8b 45 20             	mov    0x20(%ebp),%eax
81003a9f:	89 10                	mov    %edx,(%eax)
81003aa1:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81003aa8:	8b 45 20             	mov    0x20(%ebp),%eax
81003aab:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003ab2:	eb 58                	jmp    81003b0c <getopt_internal+0xa2b>
81003ab4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003ab8:	79 3e                	jns    81003af8 <getopt_internal+0xa17>
81003aba:	8b 45 20             	mov    0x20(%ebp),%eax
81003abd:	8b 40 10             	mov    0x10(%eax),%eax
81003ac0:	8d 50 01             	lea    0x1(%eax),%edx
81003ac3:	8b 45 20             	mov    0x20(%ebp),%eax
81003ac6:	89 50 10             	mov    %edx,0x10(%eax)
81003ac9:	8b 45 20             	mov    0x20(%ebp),%eax
81003acc:	8b 40 04             	mov    0x4(%eax),%eax
81003acf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81003ad6:	8b 45 0c             	mov    0xc(%ebp),%eax
81003ad9:	01 d0                	add    %edx,%eax
81003adb:	8b 10                	mov    (%eax),%edx
81003add:	8b 45 20             	mov    0x20(%ebp),%eax
81003ae0:	8b 40 10             	mov    0x10(%eax),%eax
81003ae3:	01 d0                	add    %edx,%eax
81003ae5:	0f b6 00             	movzbl (%eax),%eax
81003ae8:	84 c0                	test   %al,%al
81003aea:	75 16                	jne    81003b02 <getopt_internal+0xa21>
81003aec:	8b 45 20             	mov    0x20(%ebp),%eax
81003aef:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003af6:	eb 0a                	jmp    81003b02 <getopt_internal+0xa21>
81003af8:	8b 45 20             	mov    0x20(%ebp),%eax
81003afb:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81003b02:	8b 45 20             	mov    0x20(%ebp),%eax
81003b05:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003b0b:	90                   	nop
81003b0c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81003b10:	75 57                	jne    81003b69 <getopt_internal+0xa88>
81003b12:	8b 45 20             	mov    0x20(%ebp),%eax
81003b15:	8b 40 10             	mov    0x10(%eax),%eax
81003b18:	83 f8 01             	cmp    $0x1,%eax
81003b1b:	75 4c                	jne    81003b69 <getopt_internal+0xa88>
81003b1d:	8b 45 20             	mov    0x20(%ebp),%eax
81003b20:	8b 40 18             	mov    0x18(%eax),%eax
81003b23:	85 c0                	test   %eax,%eax
81003b25:	74 42                	je     81003b69 <getopt_internal+0xa88>
81003b27:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b2a:	8d 48 01             	lea    0x1(%eax),%ecx
81003b2d:	8b 45 20             	mov    0x20(%ebp),%eax
81003b30:	8b 40 18             	mov    0x18(%eax),%eax
81003b33:	8b 55 20             	mov    0x20(%ebp),%edx
81003b36:	8b 52 14             	mov    0x14(%edx),%edx
81003b39:	8d 1c 95 00 00 00 00 	lea    0x0(,%edx,4),%ebx
81003b40:	8b 55 0c             	mov    0xc(%ebp),%edx
81003b43:	01 da                	add    %ebx,%edx
81003b45:	83 ec 04             	sub    $0x4,%esp
81003b48:	51                   	push   %ecx
81003b49:	50                   	push   %eax
81003b4a:	52                   	push   %edx
81003b4b:	e8 7f f4 ff ff       	call   81002fcf <permute>
81003b50:	83 c4 10             	add    $0x10,%esp
81003b53:	8b 45 20             	mov    0x20(%ebp),%eax
81003b56:	8b 40 14             	mov    0x14(%eax),%eax
81003b59:	8d 50 01             	lea    0x1(%eax),%edx
81003b5c:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b5f:	01 c2                	add    %eax,%edx
81003b61:	8b 45 20             	mov    0x20(%ebp),%eax
81003b64:	89 50 04             	mov    %edx,0x4(%eax)
81003b67:	eb 1f                	jmp    81003b88 <getopt_internal+0xaa7>
81003b69:	8b 45 20             	mov    0x20(%ebp),%eax
81003b6c:	8b 40 10             	mov    0x10(%eax),%eax
81003b6f:	83 f8 01             	cmp    $0x1,%eax
81003b72:	75 14                	jne    81003b88 <getopt_internal+0xaa7>
81003b74:	8b 45 20             	mov    0x20(%ebp),%eax
81003b77:	8b 40 04             	mov    0x4(%eax),%eax
81003b7a:	8d 50 01             	lea    0x1(%eax),%edx
81003b7d:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003b80:	01 c2                	add    %eax,%edx
81003b82:	8b 45 20             	mov    0x20(%ebp),%eax
81003b85:	89 50 04             	mov    %edx,0x4(%eax)
81003b88:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81003b8c:	78 5d                	js     81003beb <getopt_internal+0xb0a>
81003b8e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)
81003b92:	74 08                	je     81003b9c <getopt_internal+0xabb>
81003b94:	8b 45 18             	mov    0x18(%ebp),%eax
81003b97:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81003b9a:	89 10                	mov    %edx,(%eax)
81003b9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003b9f:	c1 e0 04             	shl    $0x4,%eax
81003ba2:	89 c2                	mov    %eax,%edx
81003ba4:	8b 45 14             	mov    0x14(%ebp),%eax
81003ba7:	01 d0                	add    %edx,%eax
81003ba9:	8b 40 08             	mov    0x8(%eax),%eax
81003bac:	85 c0                	test   %eax,%eax
81003bae:	74 29                	je     81003bd9 <getopt_internal+0xaf8>
81003bb0:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bb3:	c1 e0 04             	shl    $0x4,%eax
81003bb6:	89 c2                	mov    %eax,%edx
81003bb8:	8b 45 14             	mov    0x14(%ebp),%eax
81003bbb:	01 c2                	add    %eax,%edx
81003bbd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bc0:	c1 e0 04             	shl    $0x4,%eax
81003bc3:	89 c1                	mov    %eax,%ecx
81003bc5:	8b 45 14             	mov    0x14(%ebp),%eax
81003bc8:	01 c8                	add    %ecx,%eax
81003bca:	8b 40 08             	mov    0x8(%eax),%eax
81003bcd:	8b 52 0c             	mov    0xc(%edx),%edx
81003bd0:	89 10                	mov    %edx,(%eax)
81003bd2:	b8 00 00 00 00       	mov    $0x0,%eax
81003bd7:	eb 18                	jmp    81003bf1 <getopt_internal+0xb10>
81003bd9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81003bdc:	c1 e0 04             	shl    $0x4,%eax
81003bdf:	89 c2                	mov    %eax,%edx
81003be1:	8b 45 14             	mov    0x14(%ebp),%eax
81003be4:	01 d0                	add    %edx,%eax
81003be6:	8b 40 0c             	mov    0xc(%eax),%eax
81003be9:	eb 06                	jmp    81003bf1 <getopt_internal+0xb10>
81003beb:	8b 45 20             	mov    0x20(%ebp),%eax
81003bee:	8b 40 0c             	mov    0xc(%eax),%eax
81003bf1:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81003bf4:	c9                   	leave  
81003bf5:	c3                   	ret    

81003bf6 <getopt>:
81003bf6:	55                   	push   %ebp
81003bf7:	89 e5                	mov    %esp,%ebp
81003bf9:	83 ec 28             	sub    $0x28,%esp
81003bfc:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003bff:	50                   	push   %eax
81003c00:	e8 31 f4 ff ff       	call   81003036 <read_globals>
81003c05:	83 c4 04             	add    $0x4,%esp
81003c08:	83 ec 04             	sub    $0x4,%esp
81003c0b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c0e:	50                   	push   %eax
81003c0f:	6a 00                	push   $0x0
81003c11:	6a 00                	push   $0x0
81003c13:	6a 00                	push   $0x0
81003c15:	ff 75 10             	pushl  0x10(%ebp)
81003c18:	ff 75 0c             	pushl  0xc(%ebp)
81003c1b:	ff 75 08             	pushl  0x8(%ebp)
81003c1e:	e8 be f4 ff ff       	call   810030e1 <getopt_internal>
81003c23:	83 c4 20             	add    $0x20,%esp
81003c26:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c29:	83 ec 0c             	sub    $0xc,%esp
81003c2c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c2f:	50                   	push   %eax
81003c30:	e8 5a f4 ff ff       	call   8100308f <write_globals>
81003c35:	83 c4 10             	add    $0x10,%esp
81003c38:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c3b:	c9                   	leave  
81003c3c:	c3                   	ret    

81003c3d <getopt_long>:
81003c3d:	55                   	push   %ebp
81003c3e:	89 e5                	mov    %esp,%ebp
81003c40:	83 ec 28             	sub    $0x28,%esp
81003c43:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c46:	50                   	push   %eax
81003c47:	e8 ea f3 ff ff       	call   81003036 <read_globals>
81003c4c:	83 c4 04             	add    $0x4,%esp
81003c4f:	83 ec 04             	sub    $0x4,%esp
81003c52:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c55:	50                   	push   %eax
81003c56:	6a 00                	push   $0x0
81003c58:	ff 75 18             	pushl  0x18(%ebp)
81003c5b:	ff 75 14             	pushl  0x14(%ebp)
81003c5e:	ff 75 10             	pushl  0x10(%ebp)
81003c61:	ff 75 0c             	pushl  0xc(%ebp)
81003c64:	ff 75 08             	pushl  0x8(%ebp)
81003c67:	e8 75 f4 ff ff       	call   810030e1 <getopt_internal>
81003c6c:	83 c4 20             	add    $0x20,%esp
81003c6f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003c72:	83 ec 0c             	sub    $0xc,%esp
81003c75:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c78:	50                   	push   %eax
81003c79:	e8 11 f4 ff ff       	call   8100308f <write_globals>
81003c7e:	83 c4 10             	add    $0x10,%esp
81003c81:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003c84:	c9                   	leave  
81003c85:	c3                   	ret    

81003c86 <getopt_long_only>:
81003c86:	55                   	push   %ebp
81003c87:	89 e5                	mov    %esp,%ebp
81003c89:	83 ec 28             	sub    $0x28,%esp
81003c8c:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c8f:	50                   	push   %eax
81003c90:	e8 a1 f3 ff ff       	call   81003036 <read_globals>
81003c95:	83 c4 04             	add    $0x4,%esp
81003c98:	83 ec 04             	sub    $0x4,%esp
81003c9b:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003c9e:	50                   	push   %eax
81003c9f:	6a 01                	push   $0x1
81003ca1:	ff 75 18             	pushl  0x18(%ebp)
81003ca4:	ff 75 14             	pushl  0x14(%ebp)
81003ca7:	ff 75 10             	pushl  0x10(%ebp)
81003caa:	ff 75 0c             	pushl  0xc(%ebp)
81003cad:	ff 75 08             	pushl  0x8(%ebp)
81003cb0:	e8 2c f4 ff ff       	call   810030e1 <getopt_internal>
81003cb5:	83 c4 20             	add    $0x20,%esp
81003cb8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003cbb:	83 ec 0c             	sub    $0xc,%esp
81003cbe:	8d 45 d8             	lea    -0x28(%ebp),%eax
81003cc1:	50                   	push   %eax
81003cc2:	e8 c8 f3 ff ff       	call   8100308f <write_globals>
81003cc7:	83 c4 10             	add    $0x10,%esp
81003cca:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ccd:	c9                   	leave  
81003cce:	c3                   	ret    

81003ccf <__getopt_r>:
81003ccf:	55                   	push   %ebp
81003cd0:	89 e5                	mov    %esp,%ebp
81003cd2:	83 ec 08             	sub    $0x8,%esp
81003cd5:	83 ec 04             	sub    $0x4,%esp
81003cd8:	ff 75 14             	pushl  0x14(%ebp)
81003cdb:	6a 00                	push   $0x0
81003cdd:	6a 00                	push   $0x0
81003cdf:	6a 00                	push   $0x0
81003ce1:	ff 75 10             	pushl  0x10(%ebp)
81003ce4:	ff 75 0c             	pushl  0xc(%ebp)
81003ce7:	ff 75 08             	pushl  0x8(%ebp)
81003cea:	e8 f2 f3 ff ff       	call   810030e1 <getopt_internal>
81003cef:	83 c4 20             	add    $0x20,%esp
81003cf2:	c9                   	leave  
81003cf3:	c3                   	ret    

81003cf4 <__getopt_long_r>:
81003cf4:	55                   	push   %ebp
81003cf5:	89 e5                	mov    %esp,%ebp
81003cf7:	83 ec 08             	sub    $0x8,%esp
81003cfa:	83 ec 04             	sub    $0x4,%esp
81003cfd:	ff 75 1c             	pushl  0x1c(%ebp)
81003d00:	6a 00                	push   $0x0
81003d02:	ff 75 18             	pushl  0x18(%ebp)
81003d05:	ff 75 14             	pushl  0x14(%ebp)
81003d08:	ff 75 10             	pushl  0x10(%ebp)
81003d0b:	ff 75 0c             	pushl  0xc(%ebp)
81003d0e:	ff 75 08             	pushl  0x8(%ebp)
81003d11:	e8 cb f3 ff ff       	call   810030e1 <getopt_internal>
81003d16:	83 c4 20             	add    $0x20,%esp
81003d19:	c9                   	leave  
81003d1a:	c3                   	ret    

81003d1b <__getopt_long_only_r>:
81003d1b:	55                   	push   %ebp
81003d1c:	89 e5                	mov    %esp,%ebp
81003d1e:	83 ec 08             	sub    $0x8,%esp
81003d21:	83 ec 04             	sub    $0x4,%esp
81003d24:	ff 75 1c             	pushl  0x1c(%ebp)
81003d27:	6a 01                	push   $0x1
81003d29:	ff 75 18             	pushl  0x18(%ebp)
81003d2c:	ff 75 14             	pushl  0x14(%ebp)
81003d2f:	ff 75 10             	pushl  0x10(%ebp)
81003d32:	ff 75 0c             	pushl  0xc(%ebp)
81003d35:	ff 75 08             	pushl  0x8(%ebp)
81003d38:	e8 a4 f3 ff ff       	call   810030e1 <getopt_internal>
81003d3d:	83 c4 20             	add    $0x20,%esp
81003d40:	c9                   	leave  
81003d41:	c3                   	ret    

81003d42 <__smakebuf_r>:
81003d42:	55                   	push   %ebp
81003d43:	89 e5                	mov    %esp,%ebp
81003d45:	56                   	push   %esi
81003d46:	53                   	push   %ebx
81003d47:	83 ec 10             	sub    $0x10,%esp
81003d4a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81003d4d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003d51:	98                   	cwtl   
81003d52:	83 e0 02             	and    $0x2,%eax
81003d55:	85 c0                	test   %eax,%eax
81003d57:	74 16                	je     81003d6f <__smakebuf_r+0x2d>
81003d59:	8d 43 43             	lea    0x43(%ebx),%eax
81003d5c:	89 03                	mov    %eax,(%ebx)
81003d5e:	8b 03                	mov    (%ebx),%eax
81003d60:	89 43 10             	mov    %eax,0x10(%ebx)
81003d63:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003d6a:	e9 b9 00 00 00       	jmp    81003e28 <__smakebuf_r+0xe6>
81003d6f:	8d 45 ec             	lea    -0x14(%ebp),%eax
81003d72:	50                   	push   %eax
81003d73:	8d 45 f0             	lea    -0x10(%ebp),%eax
81003d76:	50                   	push   %eax
81003d77:	53                   	push   %ebx
81003d78:	ff 75 08             	pushl  0x8(%ebp)
81003d7b:	e8 af 00 00 00       	call   81003e2f <__swhatbuf_r>
81003d80:	83 c4 10             	add    $0x10,%esp
81003d83:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003d86:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003d89:	83 ec 08             	sub    $0x8,%esp
81003d8c:	50                   	push   %eax
81003d8d:	ff 75 08             	pushl  0x8(%ebp)
81003d90:	e8 f9 03 00 00       	call   8100418e <_malloc_r>
81003d95:	83 c4 10             	add    $0x10,%esp
81003d98:	89 c6                	mov    %eax,%esi
81003d9a:	85 f6                	test   %esi,%esi
81003d9c:	75 2f                	jne    81003dcd <__smakebuf_r+0x8b>
81003d9e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003da2:	98                   	cwtl   
81003da3:	25 00 02 00 00       	and    $0x200,%eax
81003da8:	85 c0                	test   %eax,%eax
81003daa:	75 7c                	jne    81003e28 <__smakebuf_r+0xe6>
81003dac:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003db0:	83 e0 fc             	and    $0xfffffffc,%eax
81003db3:	83 c8 02             	or     $0x2,%eax
81003db6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003dba:	8d 43 43             	lea    0x43(%ebx),%eax
81003dbd:	89 03                	mov    %eax,(%ebx)
81003dbf:	8b 03                	mov    (%ebx),%eax
81003dc1:	89 43 10             	mov    %eax,0x10(%ebx)
81003dc4:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
81003dcb:	eb 5b                	jmp    81003e28 <__smakebuf_r+0xe6>
81003dcd:	8b 45 08             	mov    0x8(%ebp),%eax
81003dd0:	c7 40 3c 89 18 00 81 	movl   $0x81001889,0x3c(%eax)
81003dd7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003ddb:	0c 80                	or     $0x80,%al
81003ddd:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003de1:	89 33                	mov    %esi,(%ebx)
81003de3:	8b 03                	mov    (%ebx),%eax
81003de5:	89 43 10             	mov    %eax,0x10(%ebx)
81003de8:	8b 45 f0             	mov    -0x10(%ebp),%eax
81003deb:	89 43 14             	mov    %eax,0x14(%ebx)
81003dee:	8b 45 ec             	mov    -0x14(%ebp),%eax
81003df1:	85 c0                	test   %eax,%eax
81003df3:	74 26                	je     81003e1b <__smakebuf_r+0xd9>
81003df5:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81003df9:	98                   	cwtl   
81003dfa:	83 ec 08             	sub    $0x8,%esp
81003dfd:	50                   	push   %eax
81003dfe:	ff 75 08             	pushl  0x8(%ebp)
81003e01:	e8 81 3a 00 00       	call   81007887 <_isatty_r>
81003e06:	83 c4 10             	add    $0x10,%esp
81003e09:	85 c0                	test   %eax,%eax
81003e0b:	74 0e                	je     81003e1b <__smakebuf_r+0xd9>
81003e0d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81003e11:	83 e0 fc             	and    $0xfffffffc,%eax
81003e14:	83 c8 01             	or     $0x1,%eax
81003e17:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e1b:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
81003e1f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003e22:	09 d0                	or     %edx,%eax
81003e24:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81003e28:	8d 65 f8             	lea    -0x8(%ebp),%esp
81003e2b:	5b                   	pop    %ebx
81003e2c:	5e                   	pop    %esi
81003e2d:	5d                   	pop    %ebp
81003e2e:	c3                   	ret    

81003e2f <__swhatbuf_r>:
81003e2f:	55                   	push   %ebp
81003e30:	89 e5                	mov    %esp,%ebp
81003e32:	83 ec 58             	sub    $0x58,%esp
81003e35:	c7 45 f4 00 08 00 00 	movl   $0x800,-0xc(%ebp)
81003e3c:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e3f:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e43:	66 85 c0             	test   %ax,%ax
81003e46:	78 1f                	js     81003e67 <__swhatbuf_r+0x38>
81003e48:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e4b:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81003e4f:	98                   	cwtl   
81003e50:	83 ec 04             	sub    $0x4,%esp
81003e53:	8d 55 ac             	lea    -0x54(%ebp),%edx
81003e56:	52                   	push   %edx
81003e57:	50                   	push   %eax
81003e58:	ff 75 08             	pushl  0x8(%ebp)
81003e5b:	e8 63 ea ff ff       	call   810028c3 <_fstat_r>
81003e60:	83 c4 10             	add    $0x10,%esp
81003e63:	85 c0                	test   %eax,%eax
81003e65:	79 35                	jns    81003e9c <__swhatbuf_r+0x6d>
81003e67:	8b 45 14             	mov    0x14(%ebp),%eax
81003e6a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81003e70:	8b 45 0c             	mov    0xc(%ebp),%eax
81003e73:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81003e77:	98                   	cwtl   
81003e78:	25 80 00 00 00       	and    $0x80,%eax
81003e7d:	85 c0                	test   %eax,%eax
81003e7f:	74 0b                	je     81003e8c <__swhatbuf_r+0x5d>
81003e81:	8b 45 10             	mov    0x10(%ebp),%eax
81003e84:	c7 00 40 00 00 00    	movl   $0x40,(%eax)
81003e8a:	eb 09                	jmp    81003e95 <__swhatbuf_r+0x66>
81003e8c:	8b 45 10             	mov    0x10(%ebp),%eax
81003e8f:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003e95:	b8 00 00 00 00       	mov    $0x0,%eax
81003e9a:	eb 24                	jmp    81003ec0 <__swhatbuf_r+0x91>
81003e9c:	8b 45 b0             	mov    -0x50(%ebp),%eax
81003e9f:	25 00 f0 00 00       	and    $0xf000,%eax
81003ea4:	3d 00 20 00 00       	cmp    $0x2000,%eax
81003ea9:	0f 94 c0             	sete   %al
81003eac:	0f b6 d0             	movzbl %al,%edx
81003eaf:	8b 45 14             	mov    0x14(%ebp),%eax
81003eb2:	89 10                	mov    %edx,(%eax)
81003eb4:	8b 45 10             	mov    0x10(%ebp),%eax
81003eb7:	c7 00 00 04 00 00    	movl   $0x400,(%eax)
81003ebd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ec0:	c9                   	leave  
81003ec1:	c3                   	ret    

81003ec2 <malloc>:
81003ec2:	55                   	push   %ebp
81003ec3:	89 e5                	mov    %esp,%ebp
81003ec5:	83 ec 08             	sub    $0x8,%esp
81003ec8:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003ecd:	83 ec 08             	sub    $0x8,%esp
81003ed0:	ff 75 08             	pushl  0x8(%ebp)
81003ed3:	50                   	push   %eax
81003ed4:	e8 b5 02 00 00       	call   8100418e <_malloc_r>
81003ed9:	83 c4 10             	add    $0x10,%esp
81003edc:	c9                   	leave  
81003edd:	c3                   	ret    

81003ede <free>:
81003ede:	55                   	push   %ebp
81003edf:	89 e5                	mov    %esp,%ebp
81003ee1:	83 ec 08             	sub    $0x8,%esp
81003ee4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81003ee9:	83 ec 08             	sub    $0x8,%esp
81003eec:	ff 75 08             	pushl  0x8(%ebp)
81003eef:	50                   	push   %eax
81003ef0:	e8 84 df ff ff       	call   81001e79 <_free_r>
81003ef5:	83 c4 10             	add    $0x10,%esp
81003ef8:	90                   	nop
81003ef9:	c9                   	leave  
81003efa:	c3                   	ret    

81003efb <malloc_extend_top>:
81003efb:	55                   	push   %ebp
81003efc:	89 e5                	mov    %esp,%ebp
81003efe:	83 ec 38             	sub    $0x38,%esp
81003f01:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81003f08:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003f0d:	8b 40 08             	mov    0x8(%eax),%eax
81003f10:	89 45 e0             	mov    %eax,-0x20(%ebp)
81003f13:	8b 45 e0             	mov    -0x20(%ebp),%eax
81003f16:	8b 40 04             	mov    0x4(%eax),%eax
81003f19:	83 e0 fc             	and    $0xfffffffc,%eax
81003f1c:	89 45 dc             	mov    %eax,-0x24(%ebp)
81003f1f:	8b 55 e0             	mov    -0x20(%ebp),%edx
81003f22:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003f25:	01 d0                	add    %edx,%eax
81003f27:	89 45 d8             	mov    %eax,-0x28(%ebp)
81003f2a:	8b 15 a0 9b 00 81    	mov    0x81009ba0,%edx
81003f30:	8b 45 0c             	mov    0xc(%ebp),%eax
81003f33:	01 d0                	add    %edx,%eax
81003f35:	83 c0 10             	add    $0x10,%eax
81003f38:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f3b:	c7 45 d4 00 10 00 00 	movl   $0x1000,-0x2c(%ebp)
81003f42:	a1 cc 94 00 81       	mov    0x810094cc,%eax
81003f47:	83 f8 ff             	cmp    $0xffffffff,%eax
81003f4a:	74 15                	je     81003f61 <malloc_extend_top+0x66>
81003f4c:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81003f4f:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f52:	01 d0                	add    %edx,%eax
81003f54:	8d 50 ff             	lea    -0x1(%eax),%edx
81003f57:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003f5a:	f7 d8                	neg    %eax
81003f5c:	21 d0                	and    %edx,%eax
81003f5e:	89 45 e8             	mov    %eax,-0x18(%ebp)
81003f61:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003f64:	83 ec 08             	sub    $0x8,%esp
81003f67:	50                   	push   %eax
81003f68:	ff 75 08             	pushl  0x8(%ebp)
81003f6b:	e8 99 26 00 00       	call   81006609 <_sbrk_r>
81003f70:	83 c4 10             	add    $0x10,%esp
81003f73:	89 45 f4             	mov    %eax,-0xc(%ebp)
81003f76:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81003f7a:	0f 84 0b 02 00 00    	je     8100418b <malloc_extend_top+0x290>
81003f80:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003f83:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003f86:	73 0e                	jae    81003f96 <malloc_extend_top+0x9b>
81003f88:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003f8d:	39 45 e0             	cmp    %eax,-0x20(%ebp)
81003f90:	0f 85 f5 01 00 00    	jne    8100418b <malloc_extend_top+0x290>
81003f96:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81003f9b:	89 c2                	mov    %eax,%edx
81003f9d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81003fa0:	01 d0                	add    %edx,%eax
81003fa2:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81003fa7:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003faa:	3b 45 d8             	cmp    -0x28(%ebp),%eax
81003fad:	75 30                	jne    81003fdf <malloc_extend_top+0xe4>
81003faf:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81003fb2:	8d 50 ff             	lea    -0x1(%eax),%edx
81003fb5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81003fb8:	21 d0                	and    %edx,%eax
81003fba:	85 c0                	test   %eax,%eax
81003fbc:	75 21                	jne    81003fdf <malloc_extend_top+0xe4>
81003fbe:	8b 55 e8             	mov    -0x18(%ebp),%edx
81003fc1:	8b 45 dc             	mov    -0x24(%ebp),%eax
81003fc4:	01 d0                	add    %edx,%eax
81003fc6:	89 45 d0             	mov    %eax,-0x30(%ebp)
81003fc9:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81003fce:	8b 40 08             	mov    0x8(%eax),%eax
81003fd1:	8b 55 d0             	mov    -0x30(%ebp),%edx
81003fd4:	83 ca 01             	or     $0x1,%edx
81003fd7:	89 50 04             	mov    %edx,0x4(%eax)
81003fda:	e9 76 01 00 00       	jmp    81004155 <malloc_extend_top+0x25a>
81003fdf:	a1 cc 94 00 81       	mov    0x810094cc,%eax
81003fe4:	83 f8 ff             	cmp    $0xffffffff,%eax
81003fe7:	75 0a                	jne    81003ff3 <malloc_extend_top+0xf8>
81003fe9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003fec:	a3 cc 94 00 81       	mov    %eax,0x810094cc
81003ff1:	eb 13                	jmp    81004006 <malloc_extend_top+0x10b>
81003ff3:	8b 15 c0 9b 00 81    	mov    0x81009bc0,%edx
81003ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax
81003ffc:	2b 45 d8             	sub    -0x28(%ebp),%eax
81003fff:	01 d0                	add    %edx,%eax
81004001:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
81004006:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004009:	83 c0 08             	add    $0x8,%eax
8100400c:	83 e0 07             	and    $0x7,%eax
8100400f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004012:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
81004016:	74 13                	je     8100402b <malloc_extend_top+0x130>
81004018:	b8 08 00 00 00       	mov    $0x8,%eax
8100401d:	2b 45 cc             	sub    -0x34(%ebp),%eax
81004020:	89 45 f0             	mov    %eax,-0x10(%ebp)
81004023:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004026:	01 45 f4             	add    %eax,-0xc(%ebp)
81004029:	eb 07                	jmp    81004032 <malloc_extend_top+0x137>
8100402b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004032:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004035:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004038:	01 d0                	add    %edx,%eax
8100403a:	89 c2                	mov    %eax,%edx
8100403c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100403f:	83 e8 01             	sub    $0x1,%eax
81004042:	21 c2                	and    %eax,%edx
81004044:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004047:	29 d0                	sub    %edx,%eax
81004049:	01 45 f0             	add    %eax,-0x10(%ebp)
8100404c:	8b 45 d4             	mov    -0x2c(%ebp),%eax
8100404f:	83 e8 01             	sub    $0x1,%eax
81004052:	21 45 f0             	and    %eax,-0x10(%ebp)
81004055:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004058:	83 ec 08             	sub    $0x8,%esp
8100405b:	50                   	push   %eax
8100405c:	ff 75 08             	pushl  0x8(%ebp)
8100405f:	e8 a5 25 00 00       	call   81006609 <_sbrk_r>
81004064:	83 c4 10             	add    $0x10,%esp
81004067:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100406a:	83 7d ec ff          	cmpl   $0xffffffff,-0x14(%ebp)
8100406e:	75 28                	jne    81004098 <malloc_extend_top+0x19d>
81004070:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004077:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
8100407e:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004081:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004084:	01 d0                	add    %edx,%eax
81004086:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004089:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)
8100408d:	74 09                	je     81004098 <malloc_extend_top+0x19d>
8100408f:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004092:	83 e8 08             	sub    $0x8,%eax
81004095:	01 45 ec             	add    %eax,-0x14(%ebp)
81004098:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
8100409d:	89 c2                	mov    %eax,%edx
8100409f:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040a2:	01 d0                	add    %edx,%eax
810040a4:	a3 c0 9b 00 81       	mov    %eax,0x81009bc0
810040a9:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810040ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810040b1:	89 42 08             	mov    %eax,0x8(%edx)
810040b4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810040b7:	2b 45 f4             	sub    -0xc(%ebp),%eax
810040ba:	89 c2                	mov    %eax,%edx
810040bc:	8b 45 f0             	mov    -0x10(%ebp),%eax
810040bf:	01 d0                	add    %edx,%eax
810040c1:	89 45 d0             	mov    %eax,-0x30(%ebp)
810040c4:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040c9:	8b 40 08             	mov    0x8(%eax),%eax
810040cc:	8b 55 d0             	mov    -0x30(%ebp),%edx
810040cf:	83 ca 01             	or     $0x1,%edx
810040d2:	89 50 04             	mov    %edx,0x4(%eax)
810040d5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040da:	39 45 e0             	cmp    %eax,-0x20(%ebp)
810040dd:	74 76                	je     81004155 <malloc_extend_top+0x25a>
810040df:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
810040e3:	77 14                	ja     810040f9 <malloc_extend_top+0x1fe>
810040e5:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810040ea:	8b 40 08             	mov    0x8(%eax),%eax
810040ed:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)
810040f4:	e9 93 00 00 00       	jmp    8100418c <malloc_extend_top+0x291>
810040f9:	8b 45 dc             	mov    -0x24(%ebp),%eax
810040fc:	83 e8 0c             	sub    $0xc,%eax
810040ff:	83 e0 f8             	and    $0xfffffff8,%eax
81004102:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004105:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004108:	8b 40 04             	mov    0x4(%eax),%eax
8100410b:	83 e0 01             	and    $0x1,%eax
8100410e:	0b 45 dc             	or     -0x24(%ebp),%eax
81004111:	89 c2                	mov    %eax,%edx
81004113:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004116:	89 50 04             	mov    %edx,0x4(%eax)
81004119:	8b 55 e0             	mov    -0x20(%ebp),%edx
8100411c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100411f:	01 d0                	add    %edx,%eax
81004121:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
81004128:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100412b:	8d 50 04             	lea    0x4(%eax),%edx
8100412e:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004131:	01 d0                	add    %edx,%eax
81004133:	c7 40 04 05 00 00 00 	movl   $0x5,0x4(%eax)
8100413a:	83 7d dc 0f          	cmpl   $0xf,-0x24(%ebp)
8100413e:	76 15                	jbe    81004155 <malloc_extend_top+0x25a>
81004140:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004143:	83 c0 08             	add    $0x8,%eax
81004146:	83 ec 08             	sub    $0x8,%esp
81004149:	50                   	push   %eax
8100414a:	ff 75 08             	pushl  0x8(%ebp)
8100414d:	e8 27 dd ff ff       	call   81001e79 <_free_r>
81004152:	83 c4 10             	add    $0x10,%esp
81004155:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
8100415a:	89 c2                	mov    %eax,%edx
8100415c:	a1 a4 9b 00 81       	mov    0x81009ba4,%eax
81004161:	39 c2                	cmp    %eax,%edx
81004163:	76 0a                	jbe    8100416f <malloc_extend_top+0x274>
81004165:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
8100416a:	a3 a4 9b 00 81       	mov    %eax,0x81009ba4
8100416f:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81004174:	89 c2                	mov    %eax,%edx
81004176:	a1 a8 9b 00 81       	mov    0x81009ba8,%eax
8100417b:	39 c2                	cmp    %eax,%edx
8100417d:	76 0d                	jbe    8100418c <malloc_extend_top+0x291>
8100417f:	a1 c0 9b 00 81       	mov    0x81009bc0,%eax
81004184:	a3 a8 9b 00 81       	mov    %eax,0x81009ba8
81004189:	eb 01                	jmp    8100418c <malloc_extend_top+0x291>
8100418b:	90                   	nop
8100418c:	c9                   	leave  
8100418d:	c3                   	ret    

8100418e <_malloc_r>:
8100418e:	55                   	push   %ebp
8100418f:	89 e5                	mov    %esp,%ebp
81004191:	53                   	push   %ebx
81004192:	83 ec 44             	sub    $0x44,%esp
81004195:	8b 45 0c             	mov    0xc(%ebp),%eax
81004198:	83 c0 0b             	add    $0xb,%eax
8100419b:	83 f8 16             	cmp    $0x16,%eax
8100419e:	76 0b                	jbe    810041ab <_malloc_r+0x1d>
810041a0:	8b 45 0c             	mov    0xc(%ebp),%eax
810041a3:	83 c0 0b             	add    $0xb,%eax
810041a6:	83 e0 f8             	and    $0xfffffff8,%eax
810041a9:	eb 05                	jmp    810041b0 <_malloc_r+0x22>
810041ab:	b8 10 00 00 00       	mov    $0x10,%eax
810041b0:	89 45 d0             	mov    %eax,-0x30(%ebp)
810041b3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041b6:	85 c0                	test   %eax,%eax
810041b8:	78 08                	js     810041c2 <_malloc_r+0x34>
810041ba:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041bd:	3b 45 0c             	cmp    0xc(%ebp),%eax
810041c0:	73 13                	jae    810041d5 <_malloc_r+0x47>
810041c2:	8b 45 08             	mov    0x8(%ebp),%eax
810041c5:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
810041cb:	b8 00 00 00 00       	mov    $0x0,%eax
810041d0:	e9 d6 07 00 00       	jmp    810049ab <_malloc_r+0x81d>
810041d5:	83 ec 0c             	sub    $0xc,%esp
810041d8:	ff 75 08             	pushl  0x8(%ebp)
810041db:	e8 15 0a 00 00       	call   81004bf5 <__malloc_lock>
810041e0:	83 c4 10             	add    $0x10,%esp
810041e3:	81 7d d0 f7 01 00 00 	cmpl   $0x1f7,-0x30(%ebp)
810041ea:	0f 87 b0 00 00 00    	ja     810042a0 <_malloc_r+0x112>
810041f0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810041f3:	c1 e8 03             	shr    $0x3,%eax
810041f6:	89 45 f0             	mov    %eax,-0x10(%ebp)
810041f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
810041fc:	83 c0 01             	add    $0x1,%eax
810041ff:	01 c0                	add    %eax,%eax
81004201:	c1 e0 02             	shl    $0x2,%eax
81004204:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004209:	83 e8 08             	sub    $0x8,%eax
8100420c:	89 45 d4             	mov    %eax,-0x2c(%ebp)
8100420f:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004212:	8b 40 0c             	mov    0xc(%eax),%eax
81004215:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004218:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100421b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
8100421e:	75 0d                	jne    8100422d <_malloc_r+0x9f>
81004220:	83 45 d4 08          	addl   $0x8,-0x2c(%ebp)
81004224:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81004227:	8b 40 0c             	mov    0xc(%eax),%eax
8100422a:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100422d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004230:	3b 45 d4             	cmp    -0x2c(%ebp),%eax
81004233:	74 62                	je     81004297 <_malloc_r+0x109>
81004235:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004238:	8b 40 04             	mov    0x4(%eax),%eax
8100423b:	83 e0 fc             	and    $0xfffffffc,%eax
8100423e:	89 45 cc             	mov    %eax,-0x34(%ebp)
81004241:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004244:	8b 40 0c             	mov    0xc(%eax),%eax
81004247:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100424a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100424d:	8b 40 08             	mov    0x8(%eax),%eax
81004250:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004253:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004256:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004259:	89 50 0c             	mov    %edx,0xc(%eax)
8100425c:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100425f:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004262:	89 50 08             	mov    %edx,0x8(%eax)
81004265:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004268:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100426b:	01 d0                	add    %edx,%eax
8100426d:	8b 50 04             	mov    0x4(%eax),%edx
81004270:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81004273:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004276:	01 c8                	add    %ecx,%eax
81004278:	83 ca 01             	or     $0x1,%edx
8100427b:	89 50 04             	mov    %edx,0x4(%eax)
8100427e:	83 ec 0c             	sub    $0xc,%esp
81004281:	ff 75 08             	pushl  0x8(%ebp)
81004284:	e8 72 09 00 00       	call   81004bfb <__malloc_unlock>
81004289:	83 c4 10             	add    $0x10,%esp
8100428c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100428f:	83 c0 08             	add    $0x8,%eax
81004292:	e9 14 07 00 00       	jmp    810049ab <_malloc_r+0x81d>
81004297:	83 45 f0 02          	addl   $0x2,-0x10(%ebp)
8100429b:	e9 46 01 00 00       	jmp    810043e6 <_malloc_r+0x258>
810042a0:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042a3:	c1 e8 09             	shr    $0x9,%eax
810042a6:	85 c0                	test   %eax,%eax
810042a8:	75 08                	jne    810042b2 <_malloc_r+0x124>
810042aa:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ad:	c1 e8 03             	shr    $0x3,%eax
810042b0:	eb 77                	jmp    81004329 <_malloc_r+0x19b>
810042b2:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042b5:	c1 e8 09             	shr    $0x9,%eax
810042b8:	83 f8 04             	cmp    $0x4,%eax
810042bb:	77 0b                	ja     810042c8 <_malloc_r+0x13a>
810042bd:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042c0:	c1 e8 06             	shr    $0x6,%eax
810042c3:	83 c0 38             	add    $0x38,%eax
810042c6:	eb 61                	jmp    81004329 <_malloc_r+0x19b>
810042c8:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042cb:	c1 e8 09             	shr    $0x9,%eax
810042ce:	83 f8 14             	cmp    $0x14,%eax
810042d1:	77 0b                	ja     810042de <_malloc_r+0x150>
810042d3:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042d6:	c1 e8 09             	shr    $0x9,%eax
810042d9:	83 c0 5b             	add    $0x5b,%eax
810042dc:	eb 4b                	jmp    81004329 <_malloc_r+0x19b>
810042de:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042e1:	c1 e8 09             	shr    $0x9,%eax
810042e4:	83 f8 54             	cmp    $0x54,%eax
810042e7:	77 0b                	ja     810042f4 <_malloc_r+0x166>
810042e9:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042ec:	c1 e8 0c             	shr    $0xc,%eax
810042ef:	83 c0 6e             	add    $0x6e,%eax
810042f2:	eb 35                	jmp    81004329 <_malloc_r+0x19b>
810042f4:	8b 45 d0             	mov    -0x30(%ebp),%eax
810042f7:	c1 e8 09             	shr    $0x9,%eax
810042fa:	3d 54 01 00 00       	cmp    $0x154,%eax
810042ff:	77 0b                	ja     8100430c <_malloc_r+0x17e>
81004301:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004304:	c1 e8 0f             	shr    $0xf,%eax
81004307:	83 c0 77             	add    $0x77,%eax
8100430a:	eb 1d                	jmp    81004329 <_malloc_r+0x19b>
8100430c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100430f:	c1 e8 09             	shr    $0x9,%eax
81004312:	3d 54 05 00 00       	cmp    $0x554,%eax
81004317:	77 0b                	ja     81004324 <_malloc_r+0x196>
81004319:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100431c:	c1 e8 12             	shr    $0x12,%eax
8100431f:	83 c0 7c             	add    $0x7c,%eax
81004322:	eb 05                	jmp    81004329 <_malloc_r+0x19b>
81004324:	b8 7e 00 00 00       	mov    $0x7e,%eax
81004329:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100432c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100432f:	83 c0 01             	add    $0x1,%eax
81004332:	01 c0                	add    %eax,%eax
81004334:	c1 e0 02             	shl    $0x2,%eax
81004337:	05 c0 90 00 81       	add    $0x810090c0,%eax
8100433c:	83 e8 08             	sub    $0x8,%eax
8100433f:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004342:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004345:	8b 40 0c             	mov    0xc(%eax),%eax
81004348:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100434b:	e9 86 00 00 00       	jmp    810043d6 <_malloc_r+0x248>
81004350:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004353:	8b 40 04             	mov    0x4(%eax),%eax
81004356:	83 e0 fc             	and    $0xfffffffc,%eax
81004359:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100435c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100435f:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004362:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004365:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004369:	7e 06                	jle    81004371 <_malloc_r+0x1e3>
8100436b:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)
8100436f:	eb 71                	jmp    810043e2 <_malloc_r+0x254>
81004371:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
81004375:	78 56                	js     810043cd <_malloc_r+0x23f>
81004377:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100437a:	8b 40 0c             	mov    0xc(%eax),%eax
8100437d:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004380:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004383:	8b 40 08             	mov    0x8(%eax),%eax
81004386:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004389:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100438c:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100438f:	89 50 0c             	mov    %edx,0xc(%eax)
81004392:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004395:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004398:	89 50 08             	mov    %edx,0x8(%eax)
8100439b:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100439e:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043a1:	01 d0                	add    %edx,%eax
810043a3:	8b 50 04             	mov    0x4(%eax),%edx
810043a6:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810043a9:	8b 45 cc             	mov    -0x34(%ebp),%eax
810043ac:	01 c8                	add    %ecx,%eax
810043ae:	83 ca 01             	or     $0x1,%edx
810043b1:	89 50 04             	mov    %edx,0x4(%eax)
810043b4:	83 ec 0c             	sub    $0xc,%esp
810043b7:	ff 75 08             	pushl  0x8(%ebp)
810043ba:	e8 3c 08 00 00       	call   81004bfb <__malloc_unlock>
810043bf:	83 c4 10             	add    $0x10,%esp
810043c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043c5:	83 c0 08             	add    $0x8,%eax
810043c8:	e9 de 05 00 00       	jmp    810049ab <_malloc_r+0x81d>
810043cd:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043d0:	8b 40 0c             	mov    0xc(%eax),%eax
810043d3:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043d6:	8b 45 f4             	mov    -0xc(%ebp),%eax
810043d9:	3b 45 ec             	cmp    -0x14(%ebp),%eax
810043dc:	0f 85 6e ff ff ff    	jne    81004350 <_malloc_r+0x1c2>
810043e2:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810043e6:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
810043eb:	8b 40 08             	mov    0x8(%eax),%eax
810043ee:	89 45 f4             	mov    %eax,-0xc(%ebp)
810043f1:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
810043f6:	39 45 f4             	cmp    %eax,-0xc(%ebp)
810043f9:	0f 84 9c 02 00 00    	je     8100469b <_malloc_r+0x50d>
810043ff:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004402:	8b 40 04             	mov    0x4(%eax),%eax
81004405:	83 e0 fc             	and    $0xfffffffc,%eax
81004408:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100440b:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100440e:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004411:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004414:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004418:	7e 7a                	jle    81004494 <_malloc_r+0x306>
8100441a:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100441d:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004420:	01 d0                	add    %edx,%eax
81004422:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004425:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004428:	83 c8 01             	or     $0x1,%eax
8100442b:	89 c2                	mov    %eax,%edx
8100442d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004430:	89 50 04             	mov    %edx,0x4(%eax)
81004433:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81004438:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100443b:	89 50 0c             	mov    %edx,0xc(%eax)
8100443e:	ba c8 90 00 81       	mov    $0x810090c8,%edx
81004443:	8b 40 0c             	mov    0xc(%eax),%eax
81004446:	89 42 08             	mov    %eax,0x8(%edx)
81004449:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100444e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004451:	89 50 0c             	mov    %edx,0xc(%eax)
81004454:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004457:	8b 50 0c             	mov    0xc(%eax),%edx
8100445a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100445d:	89 50 08             	mov    %edx,0x8(%eax)
81004460:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004463:	83 c8 01             	or     $0x1,%eax
81004466:	89 c2                	mov    %eax,%edx
81004468:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100446b:	89 50 04             	mov    %edx,0x4(%eax)
8100446e:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004471:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81004474:	01 c2                	add    %eax,%edx
81004476:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004479:	89 02                	mov    %eax,(%edx)
8100447b:	83 ec 0c             	sub    $0xc,%esp
8100447e:	ff 75 08             	pushl  0x8(%ebp)
81004481:	e8 75 07 00 00       	call   81004bfb <__malloc_unlock>
81004486:	83 c4 10             	add    $0x10,%esp
81004489:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100448c:	83 c0 08             	add    $0x8,%eax
8100448f:	e9 17 05 00 00       	jmp    810049ab <_malloc_r+0x81d>
81004494:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
81004499:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100449e:	89 50 0c             	mov    %edx,0xc(%eax)
810044a1:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810044a6:	8b 40 0c             	mov    0xc(%eax),%eax
810044a9:	89 42 08             	mov    %eax,0x8(%edx)
810044ac:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810044b0:	78 32                	js     810044e4 <_malloc_r+0x356>
810044b2:	8b 55 f4             	mov    -0xc(%ebp),%edx
810044b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044b8:	01 d0                	add    %edx,%eax
810044ba:	8b 50 04             	mov    0x4(%eax),%edx
810044bd:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810044c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044c3:	01 c8                	add    %ecx,%eax
810044c5:	83 ca 01             	or     $0x1,%edx
810044c8:	89 50 04             	mov    %edx,0x4(%eax)
810044cb:	83 ec 0c             	sub    $0xc,%esp
810044ce:	ff 75 08             	pushl  0x8(%ebp)
810044d1:	e8 25 07 00 00       	call   81004bfb <__malloc_unlock>
810044d6:	83 c4 10             	add    $0x10,%esp
810044d9:	8b 45 f4             	mov    -0xc(%ebp),%eax
810044dc:	83 c0 08             	add    $0x8,%eax
810044df:	e9 c7 04 00 00       	jmp    810049ab <_malloc_r+0x81d>
810044e4:	81 7d cc ff 01 00 00 	cmpl   $0x1ff,-0x34(%ebp)
810044eb:	77 7f                	ja     8100456c <_malloc_r+0x3de>
810044ed:	8b 45 cc             	mov    -0x34(%ebp),%eax
810044f0:	c1 e8 03             	shr    $0x3,%eax
810044f3:	89 45 c8             	mov    %eax,-0x38(%ebp)
810044f6:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810044fb:	8b 58 04             	mov    0x4(%eax),%ebx
810044fe:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004501:	8d 50 03             	lea    0x3(%eax),%edx
81004504:	85 c0                	test   %eax,%eax
81004506:	0f 48 c2             	cmovs  %edx,%eax
81004509:	c1 f8 02             	sar    $0x2,%eax
8100450c:	ba 01 00 00 00       	mov    $0x1,%edx
81004511:	89 c1                	mov    %eax,%ecx
81004513:	d3 e2                	shl    %cl,%edx
81004515:	89 d0                	mov    %edx,%eax
81004517:	ba c0 90 00 81       	mov    $0x810090c0,%edx
8100451c:	09 d8                	or     %ebx,%eax
8100451e:	89 42 04             	mov    %eax,0x4(%edx)
81004521:	8b 45 c8             	mov    -0x38(%ebp),%eax
81004524:	83 c0 01             	add    $0x1,%eax
81004527:	01 c0                	add    %eax,%eax
81004529:	c1 e0 02             	shl    $0x2,%eax
8100452c:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004531:	83 e8 08             	sub    $0x8,%eax
81004534:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004537:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100453a:	8b 40 08             	mov    0x8(%eax),%eax
8100453d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004540:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004543:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004546:	89 50 0c             	mov    %edx,0xc(%eax)
81004549:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100454c:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100454f:	89 50 08             	mov    %edx,0x8(%eax)
81004552:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004555:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004558:	89 50 08             	mov    %edx,0x8(%eax)
8100455b:	8b 45 d8             	mov    -0x28(%ebp),%eax
8100455e:	8b 50 08             	mov    0x8(%eax),%edx
81004561:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004564:	89 50 0c             	mov    %edx,0xc(%eax)
81004567:	e9 2f 01 00 00       	jmp    8100469b <_malloc_r+0x50d>
8100456c:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100456f:	c1 e8 09             	shr    $0x9,%eax
81004572:	85 c0                	test   %eax,%eax
81004574:	75 08                	jne    8100457e <_malloc_r+0x3f0>
81004576:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004579:	c1 e8 03             	shr    $0x3,%eax
8100457c:	eb 77                	jmp    810045f5 <_malloc_r+0x467>
8100457e:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004581:	c1 e8 09             	shr    $0x9,%eax
81004584:	83 f8 04             	cmp    $0x4,%eax
81004587:	77 0b                	ja     81004594 <_malloc_r+0x406>
81004589:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100458c:	c1 e8 06             	shr    $0x6,%eax
8100458f:	83 c0 38             	add    $0x38,%eax
81004592:	eb 61                	jmp    810045f5 <_malloc_r+0x467>
81004594:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004597:	c1 e8 09             	shr    $0x9,%eax
8100459a:	83 f8 14             	cmp    $0x14,%eax
8100459d:	77 0b                	ja     810045aa <_malloc_r+0x41c>
8100459f:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045a2:	c1 e8 09             	shr    $0x9,%eax
810045a5:	83 c0 5b             	add    $0x5b,%eax
810045a8:	eb 4b                	jmp    810045f5 <_malloc_r+0x467>
810045aa:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045ad:	c1 e8 09             	shr    $0x9,%eax
810045b0:	83 f8 54             	cmp    $0x54,%eax
810045b3:	77 0b                	ja     810045c0 <_malloc_r+0x432>
810045b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045b8:	c1 e8 0c             	shr    $0xc,%eax
810045bb:	83 c0 6e             	add    $0x6e,%eax
810045be:	eb 35                	jmp    810045f5 <_malloc_r+0x467>
810045c0:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045c3:	c1 e8 09             	shr    $0x9,%eax
810045c6:	3d 54 01 00 00       	cmp    $0x154,%eax
810045cb:	77 0b                	ja     810045d8 <_malloc_r+0x44a>
810045cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045d0:	c1 e8 0f             	shr    $0xf,%eax
810045d3:	83 c0 77             	add    $0x77,%eax
810045d6:	eb 1d                	jmp    810045f5 <_malloc_r+0x467>
810045d8:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045db:	c1 e8 09             	shr    $0x9,%eax
810045de:	3d 54 05 00 00       	cmp    $0x554,%eax
810045e3:	77 0b                	ja     810045f0 <_malloc_r+0x462>
810045e5:	8b 45 cc             	mov    -0x34(%ebp),%eax
810045e8:	c1 e8 12             	shr    $0x12,%eax
810045eb:	83 c0 7c             	add    $0x7c,%eax
810045ee:	eb 05                	jmp    810045f5 <_malloc_r+0x467>
810045f0:	b8 7e 00 00 00       	mov    $0x7e,%eax
810045f5:	89 45 c8             	mov    %eax,-0x38(%ebp)
810045f8:	8b 45 c8             	mov    -0x38(%ebp),%eax
810045fb:	83 c0 01             	add    $0x1,%eax
810045fe:	01 c0                	add    %eax,%eax
81004600:	c1 e0 02             	shl    $0x2,%eax
81004603:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004608:	83 e8 08             	sub    $0x8,%eax
8100460b:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100460e:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004611:	8b 40 08             	mov    0x8(%eax),%eax
81004614:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004617:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100461a:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100461d:	75 36                	jne    81004655 <_malloc_r+0x4c7>
8100461f:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004624:	8b 58 04             	mov    0x4(%eax),%ebx
81004627:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100462a:	8d 50 03             	lea    0x3(%eax),%edx
8100462d:	85 c0                	test   %eax,%eax
8100462f:	0f 48 c2             	cmovs  %edx,%eax
81004632:	c1 f8 02             	sar    $0x2,%eax
81004635:	ba 01 00 00 00       	mov    $0x1,%edx
8100463a:	89 c1                	mov    %eax,%ecx
8100463c:	d3 e2                	shl    %cl,%edx
8100463e:	89 d0                	mov    %edx,%eax
81004640:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81004645:	09 d8                	or     %ebx,%eax
81004647:	89 42 04             	mov    %eax,0x4(%edx)
8100464a:	eb 28                	jmp    81004674 <_malloc_r+0x4e6>
8100464c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100464f:	8b 40 08             	mov    0x8(%eax),%eax
81004652:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004655:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004658:	3b 45 d8             	cmp    -0x28(%ebp),%eax
8100465b:	74 0e                	je     8100466b <_malloc_r+0x4dd>
8100465d:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004660:	8b 40 04             	mov    0x4(%eax),%eax
81004663:	83 e0 fc             	and    $0xfffffffc,%eax
81004666:	39 45 cc             	cmp    %eax,-0x34(%ebp)
81004669:	72 e1                	jb     8100464c <_malloc_r+0x4be>
8100466b:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100466e:	8b 40 0c             	mov    0xc(%eax),%eax
81004671:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004674:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004677:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100467a:	89 50 0c             	mov    %edx,0xc(%eax)
8100467d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004680:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004683:	89 50 08             	mov    %edx,0x8(%eax)
81004686:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004689:	8b 55 f4             	mov    -0xc(%ebp),%edx
8100468c:	89 50 08             	mov    %edx,0x8(%eax)
8100468f:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004692:	8b 50 08             	mov    0x8(%eax),%edx
81004695:	8b 45 dc             	mov    -0x24(%ebp),%eax
81004698:	89 50 0c             	mov    %edx,0xc(%eax)
8100469b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100469e:	8d 50 03             	lea    0x3(%eax),%edx
810046a1:	85 c0                	test   %eax,%eax
810046a3:	0f 48 c2             	cmovs  %edx,%eax
810046a6:	c1 f8 02             	sar    $0x2,%eax
810046a9:	ba 01 00 00 00       	mov    $0x1,%edx
810046ae:	89 c1                	mov    %eax,%ecx
810046b0:	d3 e2                	shl    %cl,%edx
810046b2:	89 d0                	mov    %edx,%eax
810046b4:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810046b7:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810046bc:	8b 40 04             	mov    0x4(%eax),%eax
810046bf:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810046c2:	0f 87 13 02 00 00    	ja     810048db <_malloc_r+0x74d>
810046c8:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810046cd:	8b 40 04             	mov    0x4(%eax),%eax
810046d0:	23 45 e4             	and    -0x1c(%ebp),%eax
810046d3:	85 c0                	test   %eax,%eax
810046d5:	75 27                	jne    810046fe <_malloc_r+0x570>
810046d7:	8b 45 f0             	mov    -0x10(%ebp),%eax
810046da:	83 e0 fc             	and    $0xfffffffc,%eax
810046dd:	83 c0 04             	add    $0x4,%eax
810046e0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810046e3:	d1 65 e4             	shll   -0x1c(%ebp)
810046e6:	eb 07                	jmp    810046ef <_malloc_r+0x561>
810046e8:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810046ec:	d1 65 e4             	shll   -0x1c(%ebp)
810046ef:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810046f4:	8b 40 04             	mov    0x4(%eax),%eax
810046f7:	23 45 e4             	and    -0x1c(%ebp),%eax
810046fa:	85 c0                	test   %eax,%eax
810046fc:	74 ea                	je     810046e8 <_malloc_r+0x55a>
810046fe:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004701:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004704:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004707:	83 c0 01             	add    $0x1,%eax
8100470a:	01 c0                	add    %eax,%eax
8100470c:	c1 e0 02             	shl    $0x2,%eax
8100470f:	05 c0 90 00 81       	add    $0x810090c0,%eax
81004714:	83 e8 08             	sub    $0x8,%eax
81004717:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100471a:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100471d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81004720:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004723:	8b 40 0c             	mov    0xc(%eax),%eax
81004726:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004729:	e9 22 01 00 00       	jmp    81004850 <_malloc_r+0x6c2>
8100472e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004731:	8b 40 04             	mov    0x4(%eax),%eax
81004734:	83 e0 fc             	and    $0xfffffffc,%eax
81004737:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100473a:	8b 45 cc             	mov    -0x34(%ebp),%eax
8100473d:	2b 45 d0             	sub    -0x30(%ebp),%eax
81004740:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004743:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004747:	0f 8e 9e 00 00 00    	jle    810047eb <_malloc_r+0x65d>
8100474d:	8b 55 f4             	mov    -0xc(%ebp),%edx
81004750:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004753:	01 d0                	add    %edx,%eax
81004755:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81004758:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100475b:	83 c8 01             	or     $0x1,%eax
8100475e:	89 c2                	mov    %eax,%edx
81004760:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004763:	89 50 04             	mov    %edx,0x4(%eax)
81004766:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004769:	8b 40 0c             	mov    0xc(%eax),%eax
8100476c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100476f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004772:	8b 40 08             	mov    0x8(%eax),%eax
81004775:	89 45 dc             	mov    %eax,-0x24(%ebp)
81004778:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100477b:	8b 55 d8             	mov    -0x28(%ebp),%edx
8100477e:	89 50 0c             	mov    %edx,0xc(%eax)
81004781:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004784:	8b 55 dc             	mov    -0x24(%ebp),%edx
81004787:	89 50 08             	mov    %edx,0x8(%eax)
8100478a:	b8 c8 90 00 81       	mov    $0x810090c8,%eax
8100478f:	8b 55 c4             	mov    -0x3c(%ebp),%edx
81004792:	89 50 0c             	mov    %edx,0xc(%eax)
81004795:	ba c8 90 00 81       	mov    $0x810090c8,%edx
8100479a:	8b 40 0c             	mov    0xc(%eax),%eax
8100479d:	89 42 08             	mov    %eax,0x8(%edx)
810047a0:	ba c8 90 00 81       	mov    $0x810090c8,%edx
810047a5:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047a8:	89 50 0c             	mov    %edx,0xc(%eax)
810047ab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047ae:	8b 50 0c             	mov    0xc(%eax),%edx
810047b1:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047b4:	89 50 08             	mov    %edx,0x8(%eax)
810047b7:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047ba:	83 c8 01             	or     $0x1,%eax
810047bd:	89 c2                	mov    %eax,%edx
810047bf:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047c2:	89 50 04             	mov    %edx,0x4(%eax)
810047c5:	8b 55 e8             	mov    -0x18(%ebp),%edx
810047c8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
810047cb:	01 c2                	add    %eax,%edx
810047cd:	8b 45 e8             	mov    -0x18(%ebp),%eax
810047d0:	89 02                	mov    %eax,(%edx)
810047d2:	83 ec 0c             	sub    $0xc,%esp
810047d5:	ff 75 08             	pushl  0x8(%ebp)
810047d8:	e8 1e 04 00 00       	call   81004bfb <__malloc_unlock>
810047dd:	83 c4 10             	add    $0x10,%esp
810047e0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810047e3:	83 c0 08             	add    $0x8,%eax
810047e6:	e9 c0 01 00 00       	jmp    810049ab <_malloc_r+0x81d>
810047eb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)
810047ef:	78 56                	js     81004847 <_malloc_r+0x6b9>
810047f1:	8b 55 f4             	mov    -0xc(%ebp),%edx
810047f4:	8b 45 cc             	mov    -0x34(%ebp),%eax
810047f7:	01 d0                	add    %edx,%eax
810047f9:	8b 50 04             	mov    0x4(%eax),%edx
810047fc:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810047ff:	8b 45 cc             	mov    -0x34(%ebp),%eax
81004802:	01 c8                	add    %ecx,%eax
81004804:	83 ca 01             	or     $0x1,%edx
81004807:	89 50 04             	mov    %edx,0x4(%eax)
8100480a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100480d:	8b 40 0c             	mov    0xc(%eax),%eax
81004810:	89 45 d8             	mov    %eax,-0x28(%ebp)
81004813:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004816:	8b 40 08             	mov    0x8(%eax),%eax
81004819:	89 45 dc             	mov    %eax,-0x24(%ebp)
8100481c:	8b 45 dc             	mov    -0x24(%ebp),%eax
8100481f:	8b 55 d8             	mov    -0x28(%ebp),%edx
81004822:	89 50 0c             	mov    %edx,0xc(%eax)
81004825:	8b 45 d8             	mov    -0x28(%ebp),%eax
81004828:	8b 55 dc             	mov    -0x24(%ebp),%edx
8100482b:	89 50 08             	mov    %edx,0x8(%eax)
8100482e:	83 ec 0c             	sub    $0xc,%esp
81004831:	ff 75 08             	pushl  0x8(%ebp)
81004834:	e8 c2 03 00 00       	call   81004bfb <__malloc_unlock>
81004839:	83 c4 10             	add    $0x10,%esp
8100483c:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100483f:	83 c0 08             	add    $0x8,%eax
81004842:	e9 64 01 00 00       	jmp    810049ab <_malloc_r+0x81d>
81004847:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100484a:	8b 40 0c             	mov    0xc(%eax),%eax
8100484d:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004850:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004853:	3b 45 ec             	cmp    -0x14(%ebp),%eax
81004856:	0f 85 d2 fe ff ff    	jne    8100472e <_malloc_r+0x5a0>
8100485c:	83 45 ec 08          	addl   $0x8,-0x14(%ebp)
81004860:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004864:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004867:	83 e0 03             	and    $0x3,%eax
8100486a:	85 c0                	test   %eax,%eax
8100486c:	0f 85 ae fe ff ff    	jne    81004720 <_malloc_r+0x592>
81004872:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004875:	83 e0 03             	and    $0x3,%eax
81004878:	85 c0                	test   %eax,%eax
8100487a:	75 19                	jne    81004895 <_malloc_r+0x707>
8100487c:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004881:	8b 48 04             	mov    0x4(%eax),%ecx
81004884:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004887:	f7 d0                	not    %eax
81004889:	ba c0 90 00 81       	mov    $0x810090c0,%edx
8100488e:	21 c8                	and    %ecx,%eax
81004890:	89 42 04             	mov    %eax,0x4(%edx)
81004893:	eb 13                	jmp    810048a8 <_malloc_r+0x71a>
81004895:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)
81004899:	83 6d d4 08          	subl   $0x8,-0x2c(%ebp)
8100489d:	8b 45 d4             	mov    -0x2c(%ebp),%eax
810048a0:	8b 40 08             	mov    0x8(%eax),%eax
810048a3:	39 45 d4             	cmp    %eax,-0x2c(%ebp)
810048a6:	74 ca                	je     81004872 <_malloc_r+0x6e4>
810048a8:	d1 65 e4             	shll   -0x1c(%ebp)
810048ab:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048b0:	8b 40 04             	mov    0x4(%eax),%eax
810048b3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
810048b6:	77 23                	ja     810048db <_malloc_r+0x74d>
810048b8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
810048bc:	74 1d                	je     810048db <_malloc_r+0x74d>
810048be:	eb 07                	jmp    810048c7 <_malloc_r+0x739>
810048c0:	83 45 f0 04          	addl   $0x4,-0x10(%ebp)
810048c4:	d1 65 e4             	shll   -0x1c(%ebp)
810048c7:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048cc:	8b 40 04             	mov    0x4(%eax),%eax
810048cf:	23 45 e4             	and    -0x1c(%ebp),%eax
810048d2:	85 c0                	test   %eax,%eax
810048d4:	74 ea                	je     810048c0 <_malloc_r+0x732>
810048d6:	e9 23 fe ff ff       	jmp    810046fe <_malloc_r+0x570>
810048db:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048e0:	8b 40 08             	mov    0x8(%eax),%eax
810048e3:	8b 40 04             	mov    0x4(%eax),%eax
810048e6:	83 e0 fc             	and    $0xfffffffc,%eax
810048e9:	2b 45 d0             	sub    -0x30(%ebp),%eax
810048ec:	89 45 e8             	mov    %eax,-0x18(%ebp)
810048ef:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810048f4:	8b 40 08             	mov    0x8(%eax),%eax
810048f7:	8b 40 04             	mov    0x4(%eax),%eax
810048fa:	83 e0 fc             	and    $0xfffffffc,%eax
810048fd:	39 45 d0             	cmp    %eax,-0x30(%ebp)
81004900:	77 06                	ja     81004908 <_malloc_r+0x77a>
81004902:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004906:	7f 53                	jg     8100495b <_malloc_r+0x7cd>
81004908:	83 ec 08             	sub    $0x8,%esp
8100490b:	ff 75 d0             	pushl  -0x30(%ebp)
8100490e:	ff 75 08             	pushl  0x8(%ebp)
81004911:	e8 e5 f5 ff ff       	call   81003efb <malloc_extend_top>
81004916:	83 c4 10             	add    $0x10,%esp
81004919:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
8100491e:	8b 40 08             	mov    0x8(%eax),%eax
81004921:	8b 40 04             	mov    0x4(%eax),%eax
81004924:	83 e0 fc             	and    $0xfffffffc,%eax
81004927:	2b 45 d0             	sub    -0x30(%ebp),%eax
8100492a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100492d:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004932:	8b 40 08             	mov    0x8(%eax),%eax
81004935:	8b 40 04             	mov    0x4(%eax),%eax
81004938:	83 e0 fc             	and    $0xfffffffc,%eax
8100493b:	39 45 d0             	cmp    %eax,-0x30(%ebp)
8100493e:	77 06                	ja     81004946 <_malloc_r+0x7b8>
81004940:	83 7d e8 0f          	cmpl   $0xf,-0x18(%ebp)
81004944:	7f 15                	jg     8100495b <_malloc_r+0x7cd>
81004946:	83 ec 0c             	sub    $0xc,%esp
81004949:	ff 75 08             	pushl  0x8(%ebp)
8100494c:	e8 aa 02 00 00       	call   81004bfb <__malloc_unlock>
81004951:	83 c4 10             	add    $0x10,%esp
81004954:	b8 00 00 00 00       	mov    $0x0,%eax
81004959:	eb 50                	jmp    810049ab <_malloc_r+0x81d>
8100495b:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004960:	8b 40 08             	mov    0x8(%eax),%eax
81004963:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004966:	8b 45 d0             	mov    -0x30(%ebp),%eax
81004969:	83 c8 01             	or     $0x1,%eax
8100496c:	89 c2                	mov    %eax,%edx
8100496e:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004971:	89 50 04             	mov    %edx,0x4(%eax)
81004974:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81004979:	8b 4d f4             	mov    -0xc(%ebp),%ecx
8100497c:	8b 45 d0             	mov    -0x30(%ebp),%eax
8100497f:	01 c8                	add    %ecx,%eax
81004981:	89 42 08             	mov    %eax,0x8(%edx)
81004984:	8b 45 e8             	mov    -0x18(%ebp),%eax
81004987:	83 c8 01             	or     $0x1,%eax
8100498a:	89 c2                	mov    %eax,%edx
8100498c:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81004991:	8b 40 08             	mov    0x8(%eax),%eax
81004994:	89 50 04             	mov    %edx,0x4(%eax)
81004997:	83 ec 0c             	sub    $0xc,%esp
8100499a:	ff 75 08             	pushl  0x8(%ebp)
8100499d:	e8 59 02 00 00       	call   81004bfb <__malloc_unlock>
810049a2:	83 c4 10             	add    $0x10,%esp
810049a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810049a8:	83 c0 08             	add    $0x8,%eax
810049ab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810049ae:	c9                   	leave  
810049af:	c3                   	ret    

810049b0 <memchr>:
810049b0:	55                   	push   %ebp
810049b1:	89 e5                	mov    %esp,%ebp
810049b3:	57                   	push   %edi
810049b4:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
810049b8:	8b 4d 10             	mov    0x10(%ebp),%ecx
810049bb:	8b 7d 08             	mov    0x8(%ebp),%edi
810049be:	31 d2                	xor    %edx,%edx
810049c0:	85 c9                	test   %ecx,%ecx
810049c2:	74 79                	je     81004a3d <L20>
810049c4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049ca:	74 28                	je     810049f4 <L5>
810049cc:	3a 07                	cmp    (%edi),%al
810049ce:	74 6a                	je     81004a3a <L15>
810049d0:	47                   	inc    %edi
810049d1:	49                   	dec    %ecx
810049d2:	74 69                	je     81004a3d <L20>
810049d4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049da:	74 18                	je     810049f4 <L5>
810049dc:	3a 07                	cmp    (%edi),%al
810049de:	74 5a                	je     81004a3a <L15>
810049e0:	47                   	inc    %edi
810049e1:	49                   	dec    %ecx
810049e2:	74 59                	je     81004a3d <L20>
810049e4:	f7 c7 03 00 00 00    	test   $0x3,%edi
810049ea:	74 08                	je     810049f4 <L5>
810049ec:	3a 07                	cmp    (%edi),%al
810049ee:	74 4a                	je     81004a3a <L15>
810049f0:	47                   	inc    %edi
810049f1:	49                   	dec    %ecx
810049f2:	74 49                	je     81004a3d <L20>

810049f4 <L5>:
810049f4:	88 c4                	mov    %al,%ah
810049f6:	89 c2                	mov    %eax,%edx
810049f8:	c1 e2 10             	shl    $0x10,%edx
810049fb:	09 d0                	or     %edx,%eax
810049fd:	53                   	push   %ebx
810049fe:	66 90                	xchg   %ax,%ax

81004a00 <L8>:
81004a00:	83 e9 04             	sub    $0x4,%ecx
81004a03:	72 1c                	jb     81004a21 <L9>
81004a05:	8b 17                	mov    (%edi),%edx
81004a07:	83 c7 04             	add    $0x4,%edi
81004a0a:	31 c2                	xor    %eax,%edx
81004a0c:	8d 9a ff fe fe fe    	lea    -0x1010101(%edx),%ebx
81004a12:	f7 d2                	not    %edx
81004a14:	21 d3                	and    %edx,%ebx
81004a16:	f7 c3 80 80 80 80    	test   $0x80808080,%ebx
81004a1c:	74 e2                	je     81004a00 <L8>
81004a1e:	83 ef 04             	sub    $0x4,%edi

81004a21 <L9>:
81004a21:	5b                   	pop    %ebx
81004a22:	31 d2                	xor    %edx,%edx
81004a24:	83 c1 04             	add    $0x4,%ecx
81004a27:	74 14                	je     81004a3d <L20>
81004a29:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81004a30 <L10>:
81004a30:	3a 07                	cmp    (%edi),%al
81004a32:	74 06                	je     81004a3a <L15>
81004a34:	47                   	inc    %edi
81004a35:	49                   	dec    %ecx
81004a36:	75 f8                	jne    81004a30 <L10>
81004a38:	31 ff                	xor    %edi,%edi

81004a3a <L15>:
81004a3a:	4a                   	dec    %edx
81004a3b:	21 fa                	and    %edi,%edx

81004a3d <L20>:
81004a3d:	89 d0                	mov    %edx,%eax
81004a3f:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004a42:	5f                   	pop    %edi
81004a43:	c9                   	leave  
81004a44:	c3                   	ret    

81004a45 <memcmp>:
81004a45:	55                   	push   %ebp
81004a46:	89 e5                	mov    %esp,%ebp
81004a48:	83 ec 10             	sub    $0x10,%esp
81004a4b:	53                   	push   %ebx
81004a4c:	57                   	push   %edi
81004a4d:	56                   	push   %esi
81004a4e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004a51:	8b 75 0c             	mov    0xc(%ebp),%esi
81004a54:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004a57:	fc                   	cld    
81004a58:	31 c0                	xor    %eax,%eax
81004a5a:	85 c9                	test   %ecx,%ecx
81004a5c:	74 31                	je     81004a8f <L4>
81004a5e:	89 f8                	mov    %edi,%eax
81004a60:	09 f0                	or     %esi,%eax
81004a62:	a8 03                	test   $0x3,%al
81004a64:	75 1b                	jne    81004a81 <BYTECMP>
81004a66:	89 cb                	mov    %ecx,%ebx
81004a68:	c1 e9 02             	shr    $0x2,%ecx
81004a6b:	f3 a7                	repz cmpsl %es:(%edi),%ds:(%esi)
81004a6d:	74 0d                	je     81004a7c <L5>
81004a6f:	83 ee 04             	sub    $0x4,%esi
81004a72:	83 ef 04             	sub    $0x4,%edi
81004a75:	b9 04 00 00 00       	mov    $0x4,%ecx
81004a7a:	eb 05                	jmp    81004a81 <BYTECMP>

81004a7c <L5>:
81004a7c:	83 e3 03             	and    $0x3,%ebx
81004a7f:	89 d9                	mov    %ebx,%ecx

81004a81 <BYTECMP>:
81004a81:	f3 a6                	repz cmpsb %es:(%edi),%ds:(%esi)

81004a83 <L3>:
81004a83:	31 d2                	xor    %edx,%edx
81004a85:	8a 56 ff             	mov    -0x1(%esi),%dl
81004a88:	31 c0                	xor    %eax,%eax
81004a8a:	8a 47 ff             	mov    -0x1(%edi),%al
81004a8d:	29 d0                	sub    %edx,%eax

81004a8f <L4>:
81004a8f:	8d 65 e4             	lea    -0x1c(%ebp),%esp
81004a92:	5e                   	pop    %esi
81004a93:	5f                   	pop    %edi
81004a94:	5b                   	pop    %ebx
81004a95:	c9                   	leave  
81004a96:	c3                   	ret    
81004a97:	90                   	nop

81004a98 <memcpy>:
81004a98:	55                   	push   %ebp
81004a99:	89 e5                	mov    %esp,%ebp
81004a9b:	56                   	push   %esi
81004a9c:	57                   	push   %edi
81004a9d:	53                   	push   %ebx
81004a9e:	8b 7d 08             	mov    0x8(%ebp),%edi
81004aa1:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004aa4:	8b 75 0c             	mov    0xc(%ebp),%esi
81004aa7:	fc                   	cld    
81004aa8:	83 f9 08             	cmp    $0x8,%ecx
81004aab:	76 26                	jbe    81004ad3 <memcpy+0x3b>
81004aad:	89 fa                	mov    %edi,%edx
81004aaf:	89 cb                	mov    %ecx,%ebx
81004ab1:	83 e2 03             	and    $0x3,%edx
81004ab4:	74 10                	je     81004ac6 <memcpy+0x2e>
81004ab6:	b9 04 00 00 00       	mov    $0x4,%ecx
81004abb:	29 d1                	sub    %edx,%ecx
81004abd:	83 e1 03             	and    $0x3,%ecx
81004ac0:	29 cb                	sub    %ecx,%ebx
81004ac2:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ac4:	89 d9                	mov    %ebx,%ecx
81004ac6:	c1 e9 02             	shr    $0x2,%ecx
81004ac9:	8d 76 00             	lea    0x0(%esi),%esi
81004acc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004ace:	89 d9                	mov    %ebx,%ecx
81004ad0:	83 e1 03             	and    $0x3,%ecx
81004ad3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004ad5:	8b 45 08             	mov    0x8(%ebp),%eax
81004ad8:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004adb:	5b                   	pop    %ebx
81004adc:	5f                   	pop    %edi
81004add:	5e                   	pop    %esi
81004ade:	c9                   	leave  
81004adf:	c3                   	ret    

81004ae0 <memmove>:
81004ae0:	55                   	push   %ebp
81004ae1:	89 e5                	mov    %esp,%ebp
81004ae3:	56                   	push   %esi
81004ae4:	57                   	push   %edi
81004ae5:	53                   	push   %ebx
81004ae6:	8b 7d 08             	mov    0x8(%ebp),%edi
81004ae9:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004aec:	8b 75 0c             	mov    0xc(%ebp),%esi
81004aef:	fc                   	cld    
81004af0:	39 fe                	cmp    %edi,%esi
81004af2:	73 43                	jae    81004b37 <memmove+0x57>
81004af4:	8d 5c 31 ff          	lea    -0x1(%ecx,%esi,1),%ebx
81004af8:	39 df                	cmp    %ebx,%edi
81004afa:	77 3b                	ja     81004b37 <memmove+0x57>
81004afc:	01 ce                	add    %ecx,%esi
81004afe:	01 cf                	add    %ecx,%edi
81004b00:	fd                   	std    
81004b01:	83 f9 08             	cmp    $0x8,%ecx
81004b04:	76 2b                	jbe    81004b31 <memmove+0x51>
81004b06:	89 fa                	mov    %edi,%edx
81004b08:	89 cb                	mov    %ecx,%ebx
81004b0a:	83 e2 03             	and    $0x3,%edx
81004b0d:	74 0c                	je     81004b1b <memmove+0x3b>
81004b0f:	89 d1                	mov    %edx,%ecx
81004b11:	4e                   	dec    %esi
81004b12:	4f                   	dec    %edi
81004b13:	29 cb                	sub    %ecx,%ebx
81004b15:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b17:	89 d9                	mov    %ebx,%ecx
81004b19:	46                   	inc    %esi
81004b1a:	47                   	inc    %edi
81004b1b:	c1 e9 02             	shr    $0x2,%ecx
81004b1e:	83 ee 04             	sub    $0x4,%esi
81004b21:	83 ef 04             	sub    $0x4,%edi
81004b24:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b26:	83 c6 04             	add    $0x4,%esi
81004b29:	83 c7 04             	add    $0x4,%edi
81004b2c:	89 d9                	mov    %ebx,%ecx
81004b2e:	83 e1 03             	and    $0x3,%ecx
81004b31:	4e                   	dec    %esi
81004b32:	4f                   	dec    %edi
81004b33:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b35:	eb 2a                	jmp    81004b61 <memmove+0x81>
81004b37:	83 f9 08             	cmp    $0x8,%ecx
81004b3a:	76 23                	jbe    81004b5f <memmove+0x7f>
81004b3c:	89 fa                	mov    %edi,%edx
81004b3e:	89 cb                	mov    %ecx,%ebx
81004b40:	83 e2 03             	and    $0x3,%edx
81004b43:	74 10                	je     81004b55 <memmove+0x75>
81004b45:	b9 04 00 00 00       	mov    $0x4,%ecx
81004b4a:	29 d1                	sub    %edx,%ecx
81004b4c:	83 e1 03             	and    $0x3,%ecx
81004b4f:	29 cb                	sub    %ecx,%ebx
81004b51:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b53:	89 d9                	mov    %ebx,%ecx
81004b55:	c1 e9 02             	shr    $0x2,%ecx
81004b58:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
81004b5a:	89 d9                	mov    %ebx,%ecx
81004b5c:	83 e1 03             	and    $0x3,%ecx
81004b5f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
81004b61:	8b 45 08             	mov    0x8(%ebp),%eax
81004b64:	fc                   	cld    
81004b65:	8d 65 f4             	lea    -0xc(%ebp),%esp
81004b68:	5b                   	pop    %ebx
81004b69:	5f                   	pop    %edi
81004b6a:	5e                   	pop    %esi
81004b6b:	c9                   	leave  
81004b6c:	c3                   	ret    

81004b6d <memset>:
81004b6d:	55                   	push   %ebp
81004b6e:	89 e5                	mov    %esp,%ebp
81004b70:	57                   	push   %edi
81004b71:	8b 7d 08             	mov    0x8(%ebp),%edi
81004b74:	0f b6 45 0c          	movzbl 0xc(%ebp),%eax
81004b78:	8b 4d 10             	mov    0x10(%ebp),%ecx
81004b7b:	fc                   	cld    
81004b7c:	83 f9 10             	cmp    $0x10,%ecx
81004b7f:	76 69                	jbe    81004bea <memset+0x7d>
81004b81:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b87:	74 4c                	je     81004bd5 <memset+0x68>
81004b89:	88 07                	mov    %al,(%edi)
81004b8b:	47                   	inc    %edi
81004b8c:	49                   	dec    %ecx
81004b8d:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b93:	74 40                	je     81004bd5 <memset+0x68>
81004b95:	88 07                	mov    %al,(%edi)
81004b97:	47                   	inc    %edi
81004b98:	49                   	dec    %ecx
81004b99:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004b9f:	74 34                	je     81004bd5 <memset+0x68>
81004ba1:	88 07                	mov    %al,(%edi)
81004ba3:	47                   	inc    %edi
81004ba4:	49                   	dec    %ecx
81004ba5:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bab:	74 28                	je     81004bd5 <memset+0x68>
81004bad:	88 07                	mov    %al,(%edi)
81004baf:	47                   	inc    %edi
81004bb0:	49                   	dec    %ecx
81004bb1:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bb7:	74 1c                	je     81004bd5 <memset+0x68>
81004bb9:	88 07                	mov    %al,(%edi)
81004bbb:	47                   	inc    %edi
81004bbc:	49                   	dec    %ecx
81004bbd:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bc3:	74 10                	je     81004bd5 <memset+0x68>
81004bc5:	88 07                	mov    %al,(%edi)
81004bc7:	47                   	inc    %edi
81004bc8:	49                   	dec    %ecx
81004bc9:	f7 c7 07 00 00 00    	test   $0x7,%edi
81004bcf:	74 04                	je     81004bd5 <memset+0x68>
81004bd1:	88 07                	mov    %al,(%edi)
81004bd3:	47                   	inc    %edi
81004bd4:	49                   	dec    %ecx
81004bd5:	88 c4                	mov    %al,%ah
81004bd7:	89 c2                	mov    %eax,%edx
81004bd9:	c1 e2 10             	shl    $0x10,%edx
81004bdc:	09 d0                	or     %edx,%eax
81004bde:	89 ca                	mov    %ecx,%edx
81004be0:	c1 e9 02             	shr    $0x2,%ecx
81004be3:	83 e2 03             	and    $0x3,%edx
81004be6:	f3 ab                	rep stos %eax,%es:(%edi)
81004be8:	89 d1                	mov    %edx,%ecx
81004bea:	f3 aa                	rep stos %al,%es:(%edi)
81004bec:	8b 45 08             	mov    0x8(%ebp),%eax
81004bef:	8d 65 fc             	lea    -0x4(%ebp),%esp
81004bf2:	5f                   	pop    %edi
81004bf3:	c9                   	leave  
81004bf4:	c3                   	ret    

81004bf5 <__malloc_lock>:
81004bf5:	55                   	push   %ebp
81004bf6:	89 e5                	mov    %esp,%ebp
81004bf8:	90                   	nop
81004bf9:	5d                   	pop    %ebp
81004bfa:	c3                   	ret    

81004bfb <__malloc_unlock>:
81004bfb:	55                   	push   %ebp
81004bfc:	89 e5                	mov    %esp,%ebp
81004bfe:	90                   	nop
81004bff:	5d                   	pop    %ebp
81004c00:	c3                   	ret    

81004c01 <__sprint_r>:
81004c01:	55                   	push   %ebp
81004c02:	89 e5                	mov    %esp,%ebp
81004c04:	56                   	push   %esi
81004c05:	53                   	push   %ebx
81004c06:	83 ec 10             	sub    $0x10,%esp
81004c09:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004c0c:	be 00 00 00 00       	mov    $0x0,%esi
81004c11:	8b 43 08             	mov    0x8(%ebx),%eax
81004c14:	85 c0                	test   %eax,%eax
81004c16:	75 11                	jne    81004c29 <__sprint_r+0x28>
81004c18:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004c1f:	b8 00 00 00 00       	mov    $0x0,%eax
81004c24:	e9 ad 00 00 00       	jmp    81004cd6 <__sprint_r+0xd5>
81004c29:	8b 45 0c             	mov    0xc(%ebp),%eax
81004c2c:	8b 40 64             	mov    0x64(%eax),%eax
81004c2f:	25 00 20 00 00       	and    $0x2000,%eax
81004c34:	85 c0                	test   %eax,%eax
81004c36:	74 7a                	je     81004cb2 <__sprint_r+0xb1>
81004c38:	8b 03                	mov    (%ebx),%eax
81004c3a:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004c3d:	eb 6a                	jmp    81004ca9 <__sprint_r+0xa8>
81004c3f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c42:	8b 00                	mov    (%eax),%eax
81004c44:	89 45 ec             	mov    %eax,-0x14(%ebp)
81004c47:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004c4a:	8b 40 04             	mov    0x4(%eax),%eax
81004c4d:	c1 e8 02             	shr    $0x2,%eax
81004c50:	89 45 e8             	mov    %eax,-0x18(%ebp)
81004c53:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
81004c5a:	eb 33                	jmp    81004c8f <__sprint_r+0x8e>
81004c5c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004c66:	8b 45 ec             	mov    -0x14(%ebp),%eax
81004c69:	01 d0                	add    %edx,%eax
81004c6b:	8b 00                	mov    (%eax),%eax
81004c6d:	83 ec 04             	sub    $0x4,%esp
81004c70:	ff 75 0c             	pushl  0xc(%ebp)
81004c73:	50                   	push   %eax
81004c74:	ff 75 08             	pushl  0x8(%ebp)
81004c77:	e8 22 2a 00 00       	call   8100769e <_fputwc_r>
81004c7c:	83 c4 10             	add    $0x10,%esp
81004c7f:	83 f8 ff             	cmp    $0xffffffff,%eax
81004c82:	75 07                	jne    81004c8b <__sprint_r+0x8a>
81004c84:	be ff ff ff ff       	mov    $0xffffffff,%esi
81004c89:	eb 3b                	jmp    81004cc6 <__sprint_r+0xc5>
81004c8b:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
81004c8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81004c92:	3b 45 e8             	cmp    -0x18(%ebp),%eax
81004c95:	7c c5                	jl     81004c5c <__sprint_r+0x5b>
81004c97:	8b 43 08             	mov    0x8(%ebx),%eax
81004c9a:	8b 55 e8             	mov    -0x18(%ebp),%edx
81004c9d:	c1 e2 02             	shl    $0x2,%edx
81004ca0:	29 d0                	sub    %edx,%eax
81004ca2:	89 43 08             	mov    %eax,0x8(%ebx)
81004ca5:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)
81004ca9:	8b 43 08             	mov    0x8(%ebx),%eax
81004cac:	85 c0                	test   %eax,%eax
81004cae:	75 8f                	jne    81004c3f <__sprint_r+0x3e>
81004cb0:	eb 14                	jmp    81004cc6 <__sprint_r+0xc5>
81004cb2:	83 ec 04             	sub    $0x4,%esp
81004cb5:	53                   	push   %ebx
81004cb6:	ff 75 0c             	pushl  0xc(%ebp)
81004cb9:	ff 75 08             	pushl  0x8(%ebp)
81004cbc:	e8 45 dc ff ff       	call   81002906 <__sfvwrite_r>
81004cc1:	83 c4 10             	add    $0x10,%esp
81004cc4:	89 c6                	mov    %eax,%esi
81004cc6:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81004ccd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81004cd4:	89 f0                	mov    %esi,%eax
81004cd6:	8d 65 f8             	lea    -0x8(%ebp),%esp
81004cd9:	5b                   	pop    %ebx
81004cda:	5e                   	pop    %esi
81004cdb:	5d                   	pop    %ebp
81004cdc:	c3                   	ret    

81004cdd <__sfputc_r>:
81004cdd:	55                   	push   %ebp
81004cde:	89 e5                	mov    %esp,%ebp
81004ce0:	83 ec 08             	sub    $0x8,%esp
81004ce3:	8b 45 10             	mov    0x10(%ebp),%eax
81004ce6:	8b 40 08             	mov    0x8(%eax),%eax
81004ce9:	8d 50 ff             	lea    -0x1(%eax),%edx
81004cec:	8b 45 10             	mov    0x10(%ebp),%eax
81004cef:	89 50 08             	mov    %edx,0x8(%eax)
81004cf2:	8b 45 10             	mov    0x10(%ebp),%eax
81004cf5:	8b 40 08             	mov    0x8(%eax),%eax
81004cf8:	85 c0                	test   %eax,%eax
81004cfa:	79 17                	jns    81004d13 <__sfputc_r+0x36>
81004cfc:	8b 45 10             	mov    0x10(%ebp),%eax
81004cff:	8b 50 08             	mov    0x8(%eax),%edx
81004d02:	8b 45 10             	mov    0x10(%ebp),%eax
81004d05:	8b 40 18             	mov    0x18(%eax),%eax
81004d08:	39 c2                	cmp    %eax,%edx
81004d0a:	7c 21                	jl     81004d2d <__sfputc_r+0x50>
81004d0c:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d0f:	3c 0a                	cmp    $0xa,%al
81004d11:	74 1a                	je     81004d2d <__sfputc_r+0x50>
81004d13:	8b 45 10             	mov    0x10(%ebp),%eax
81004d16:	8b 00                	mov    (%eax),%eax
81004d18:	8d 48 01             	lea    0x1(%eax),%ecx
81004d1b:	8b 55 10             	mov    0x10(%ebp),%edx
81004d1e:	89 0a                	mov    %ecx,(%edx)
81004d20:	8b 55 0c             	mov    0xc(%ebp),%edx
81004d23:	88 10                	mov    %dl,(%eax)
81004d25:	0f b6 00             	movzbl (%eax),%eax
81004d28:	0f b6 c0             	movzbl %al,%eax
81004d2b:	eb 14                	jmp    81004d41 <__sfputc_r+0x64>
81004d2d:	83 ec 04             	sub    $0x4,%esp
81004d30:	ff 75 10             	pushl  0x10(%ebp)
81004d33:	ff 75 0c             	pushl  0xc(%ebp)
81004d36:	ff 75 08             	pushl  0x8(%ebp)
81004d39:	e8 c9 22 00 00       	call   81007007 <__swbuf_r>
81004d3e:	83 c4 10             	add    $0x10,%esp
81004d41:	c9                   	leave  
81004d42:	c3                   	ret    

81004d43 <__sfputs_r>:
81004d43:	55                   	push   %ebp
81004d44:	89 e5                	mov    %esp,%ebp
81004d46:	53                   	push   %ebx
81004d47:	83 ec 14             	sub    $0x14,%esp
81004d4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81004d4d:	8b 40 64             	mov    0x64(%eax),%eax
81004d50:	25 00 20 00 00       	and    $0x2000,%eax
81004d55:	85 c0                	test   %eax,%eax
81004d57:	74 4c                	je     81004da5 <__sfputs_r+0x62>
81004d59:	8b 45 10             	mov    0x10(%ebp),%eax
81004d5c:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004d5f:	bb 00 00 00 00       	mov    $0x0,%ebx
81004d64:	eb 31                	jmp    81004d97 <__sfputs_r+0x54>
81004d66:	89 d8                	mov    %ebx,%eax
81004d68:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
81004d6f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004d72:	01 d0                	add    %edx,%eax
81004d74:	8b 00                	mov    (%eax),%eax
81004d76:	83 ec 04             	sub    $0x4,%esp
81004d79:	ff 75 0c             	pushl  0xc(%ebp)
81004d7c:	50                   	push   %eax
81004d7d:	ff 75 08             	pushl  0x8(%ebp)
81004d80:	e8 19 29 00 00       	call   8100769e <_fputwc_r>
81004d85:	83 c4 10             	add    $0x10,%esp
81004d88:	83 f8 ff             	cmp    $0xffffffff,%eax
81004d8b:	75 07                	jne    81004d94 <__sfputs_r+0x51>
81004d8d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004d92:	eb 52                	jmp    81004de6 <__sfputs_r+0xa3>
81004d94:	83 c3 01             	add    $0x1,%ebx
81004d97:	8b 45 14             	mov    0x14(%ebp),%eax
81004d9a:	c1 e8 02             	shr    $0x2,%eax
81004d9d:	89 da                	mov    %ebx,%edx
81004d9f:	39 d0                	cmp    %edx,%eax
81004da1:	77 c3                	ja     81004d66 <__sfputs_r+0x23>
81004da3:	eb 3c                	jmp    81004de1 <__sfputs_r+0x9e>
81004da5:	bb 00 00 00 00       	mov    $0x0,%ebx
81004daa:	eb 2e                	jmp    81004dda <__sfputs_r+0x97>
81004dac:	89 da                	mov    %ebx,%edx
81004dae:	8b 45 10             	mov    0x10(%ebp),%eax
81004db1:	01 d0                	add    %edx,%eax
81004db3:	0f b6 00             	movzbl (%eax),%eax
81004db6:	0f be c0             	movsbl %al,%eax
81004db9:	83 ec 04             	sub    $0x4,%esp
81004dbc:	ff 75 0c             	pushl  0xc(%ebp)
81004dbf:	50                   	push   %eax
81004dc0:	ff 75 08             	pushl  0x8(%ebp)
81004dc3:	e8 15 ff ff ff       	call   81004cdd <__sfputc_r>
81004dc8:	83 c4 10             	add    $0x10,%esp
81004dcb:	83 f8 ff             	cmp    $0xffffffff,%eax
81004dce:	75 07                	jne    81004dd7 <__sfputs_r+0x94>
81004dd0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004dd5:	eb 0f                	jmp    81004de6 <__sfputs_r+0xa3>
81004dd7:	83 c3 01             	add    $0x1,%ebx
81004dda:	89 d8                	mov    %ebx,%eax
81004ddc:	39 45 14             	cmp    %eax,0x14(%ebp)
81004ddf:	77 cb                	ja     81004dac <__sfputs_r+0x69>
81004de1:	b8 00 00 00 00       	mov    $0x0,%eax
81004de6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81004de9:	c9                   	leave  
81004dea:	c3                   	ret    

81004deb <vfiprintf>:
81004deb:	55                   	push   %ebp
81004dec:	89 e5                	mov    %esp,%ebp
81004dee:	83 ec 18             	sub    $0x18,%esp
81004df1:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81004df6:	ff 75 10             	pushl  0x10(%ebp)
81004df9:	ff 75 0c             	pushl  0xc(%ebp)
81004dfc:	ff 75 08             	pushl  0x8(%ebp)
81004dff:	50                   	push   %eax
81004e00:	e8 0b 00 00 00       	call   81004e10 <_vfiprintf_r>
81004e05:	83 c4 10             	add    $0x10,%esp
81004e08:	89 45 f4             	mov    %eax,-0xc(%ebp)
81004e0b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81004e0e:	c9                   	leave  
81004e0f:	c3                   	ret    

81004e10 <_vfiprintf_r>:
81004e10:	55                   	push   %ebp
81004e11:	89 e5                	mov    %esp,%ebp
81004e13:	57                   	push   %edi
81004e14:	56                   	push   %esi
81004e15:	53                   	push   %ebx
81004e16:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81004e1c:	c7 45 e4 43 4d 00 81 	movl   $0x81004d43,-0x1c(%ebp)
81004e23:	8b 45 08             	mov    0x8(%ebp),%eax
81004e26:	89 45 e0             	mov    %eax,-0x20(%ebp)
81004e29:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81004e2d:	74 18                	je     81004e47 <_vfiprintf_r+0x37>
81004e2f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81004e32:	8b 40 38             	mov    0x38(%eax),%eax
81004e35:	85 c0                	test   %eax,%eax
81004e37:	75 0e                	jne    81004e47 <_vfiprintf_r+0x37>
81004e39:	83 ec 0c             	sub    $0xc,%esp
81004e3c:	ff 75 e0             	pushl  -0x20(%ebp)
81004e3f:	e8 80 ca ff ff       	call   810018c4 <__sinit>
81004e44:	83 c4 10             	add    $0x10,%esp
81004e47:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e4a:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81004e4e:	98                   	cwtl   
81004e4f:	83 e0 08             	and    $0x8,%eax
81004e52:	85 c0                	test   %eax,%eax
81004e54:	74 0a                	je     81004e60 <_vfiprintf_r+0x50>
81004e56:	8b 45 0c             	mov    0xc(%ebp),%eax
81004e59:	8b 40 10             	mov    0x10(%eax),%eax
81004e5c:	85 c0                	test   %eax,%eax
81004e5e:	75 1f                	jne    81004e7f <_vfiprintf_r+0x6f>
81004e60:	83 ec 08             	sub    $0x8,%esp
81004e63:	ff 75 0c             	pushl  0xc(%ebp)
81004e66:	ff 75 08             	pushl  0x8(%ebp)
81004e69:	e8 12 23 00 00       	call   81007180 <__swsetup_r>
81004e6e:	83 c4 10             	add    $0x10,%esp
81004e71:	85 c0                	test   %eax,%eax
81004e73:	74 0a                	je     81004e7f <_vfiprintf_r+0x6f>
81004e75:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81004e7a:	e9 df 02 00 00       	jmp    8100515e <_vfiprintf_r+0x34e>
81004e7f:	8b 5d 10             	mov    0x10(%ebp),%ebx
81004e82:	c7 45 94 00 00 00 00 	movl   $0x0,-0x6c(%ebp)
81004e89:	c6 45 99 20          	movb   $0x20,-0x67(%ebp)
81004e8d:	c6 45 9a 30          	movb   $0x30,-0x66(%ebp)
81004e91:	8b 45 14             	mov    0x14(%ebp),%eax
81004e94:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
81004e9a:	89 de                	mov    %ebx,%esi
81004e9c:	eb 03                	jmp    81004ea1 <_vfiprintf_r+0x91>
81004e9e:	83 c3 01             	add    $0x1,%ebx
81004ea1:	0f b6 03             	movzbl (%ebx),%eax
81004ea4:	84 c0                	test   %al,%al
81004ea6:	74 07                	je     81004eaf <_vfiprintf_r+0x9f>
81004ea8:	0f b6 03             	movzbl (%ebx),%eax
81004eab:	3c 25                	cmp    $0x25,%al
81004ead:	75 ef                	jne    81004e9e <_vfiprintf_r+0x8e>
81004eaf:	89 d8                	mov    %ebx,%eax
81004eb1:	29 f0                	sub    %esi,%eax
81004eb3:	85 c0                	test   %eax,%eax
81004eb5:	74 2b                	je     81004ee2 <_vfiprintf_r+0xd2>
81004eb7:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81004ebd:	50                   	push   %eax
81004ebe:	56                   	push   %esi
81004ebf:	ff 75 0c             	pushl  0xc(%ebp)
81004ec2:	ff 75 08             	pushl  0x8(%ebp)
81004ec5:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81004ec8:	ff d0                	call   *%eax
81004eca:	83 c4 10             	add    $0x10,%esp
81004ecd:	83 f8 ff             	cmp    $0xffffffff,%eax
81004ed0:	0f 84 68 02 00 00    	je     8100513e <_vfiprintf_r+0x32e>
81004ed6:	8b 45 94             	mov    -0x6c(%ebp),%eax
81004ed9:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81004edf:	89 45 94             	mov    %eax,-0x6c(%ebp)
81004ee2:	0f b6 03             	movzbl (%ebx),%eax
81004ee5:	84 c0                	test   %al,%al
81004ee7:	0f 84 54 02 00 00    	je     81005141 <_vfiprintf_r+0x331>
81004eed:	83 c3 01             	add    $0x1,%ebx
81004ef0:	c7 45 80 00 00 00 00 	movl   $0x0,-0x80(%ebp)
81004ef7:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81004efe:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
81004f05:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81004f0c:	c6 45 c3 00          	movb   $0x0,-0x3d(%ebp)
81004f10:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
81004f17:	c7 45 dc e8 88 00 81 	movl   $0x810088e8,-0x24(%ebp)
81004f1e:	eb 1b                	jmp    81004f3b <_vfiprintf_r+0x12b>
81004f20:	8b 55 80             	mov    -0x80(%ebp),%edx
81004f23:	89 f0                	mov    %esi,%eax
81004f25:	2b 45 dc             	sub    -0x24(%ebp),%eax
81004f28:	be 01 00 00 00       	mov    $0x1,%esi
81004f2d:	89 c1                	mov    %eax,%ecx
81004f2f:	d3 e6                	shl    %cl,%esi
81004f31:	89 f0                	mov    %esi,%eax
81004f33:	09 d0                	or     %edx,%eax
81004f35:	89 45 80             	mov    %eax,-0x80(%ebp)
81004f38:	83 c3 01             	add    $0x1,%ebx
81004f3b:	0f b6 03             	movzbl (%ebx),%eax
81004f3e:	0f be c0             	movsbl %al,%eax
81004f41:	83 ec 04             	sub    $0x4,%esp
81004f44:	6a 05                	push   $0x5
81004f46:	50                   	push   %eax
81004f47:	ff 75 dc             	pushl  -0x24(%ebp)
81004f4a:	e8 61 fa ff ff       	call   810049b0 <memchr>
81004f4f:	83 c4 10             	add    $0x10,%esp
81004f52:	89 c6                	mov    %eax,%esi
81004f54:	85 f6                	test   %esi,%esi
81004f56:	75 c8                	jne    81004f20 <_vfiprintf_r+0x110>
81004f58:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f5b:	83 e0 10             	and    $0x10,%eax
81004f5e:	85 c0                	test   %eax,%eax
81004f60:	74 04                	je     81004f66 <_vfiprintf_r+0x156>
81004f62:	c6 45 c3 20          	movb   $0x20,-0x3d(%ebp)
81004f66:	8b 45 80             	mov    -0x80(%ebp),%eax
81004f69:	83 e0 08             	and    $0x8,%eax
81004f6c:	85 c0                	test   %eax,%eax
81004f6e:	74 04                	je     81004f74 <_vfiprintf_r+0x164>
81004f70:	c6 45 c3 2b          	movb   $0x2b,-0x3d(%ebp)
81004f74:	0f b6 03             	movzbl (%ebx),%eax
81004f77:	3c 2a                	cmp    $0x2a,%al
81004f79:	75 50                	jne    81004fcb <_vfiprintf_r+0x1bb>
81004f7b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004f81:	8d 50 04             	lea    0x4(%eax),%edx
81004f84:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004f8a:	8b 00                	mov    (%eax),%eax
81004f8c:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f8f:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004f92:	85 c0                	test   %eax,%eax
81004f94:	79 11                	jns    81004fa7 <_vfiprintf_r+0x197>
81004f96:	8b 45 8c             	mov    -0x74(%ebp),%eax
81004f99:	f7 d8                	neg    %eax
81004f9b:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004f9e:	8b 45 80             	mov    -0x80(%ebp),%eax
81004fa1:	83 c8 02             	or     $0x2,%eax
81004fa4:	89 45 80             	mov    %eax,-0x80(%ebp)
81004fa7:	83 c3 01             	add    $0x1,%ebx
81004faa:	eb 2d                	jmp    81004fd9 <_vfiprintf_r+0x1c9>
81004fac:	8b 55 8c             	mov    -0x74(%ebp),%edx
81004faf:	89 d0                	mov    %edx,%eax
81004fb1:	c1 e0 02             	shl    $0x2,%eax
81004fb4:	01 d0                	add    %edx,%eax
81004fb6:	01 c0                	add    %eax,%eax
81004fb8:	89 c2                	mov    %eax,%edx
81004fba:	0f b6 03             	movzbl (%ebx),%eax
81004fbd:	0f be c0             	movsbl %al,%eax
81004fc0:	83 e8 30             	sub    $0x30,%eax
81004fc3:	01 d0                	add    %edx,%eax
81004fc5:	89 45 8c             	mov    %eax,-0x74(%ebp)
81004fc8:	83 c3 01             	add    $0x1,%ebx
81004fcb:	0f b6 03             	movzbl (%ebx),%eax
81004fce:	0f be c0             	movsbl %al,%eax
81004fd1:	83 e8 30             	sub    $0x30,%eax
81004fd4:	83 f8 09             	cmp    $0x9,%eax
81004fd7:	76 d3                	jbe    81004fac <_vfiprintf_r+0x19c>
81004fd9:	0f b6 03             	movzbl (%ebx),%eax
81004fdc:	3c 2e                	cmp    $0x2e,%al
81004fde:	75 67                	jne    81005047 <_vfiprintf_r+0x237>
81004fe0:	83 c3 01             	add    $0x1,%ebx
81004fe3:	0f b6 03             	movzbl (%ebx),%eax
81004fe6:	3c 2a                	cmp    $0x2a,%al
81004fe8:	75 27                	jne    81005011 <_vfiprintf_r+0x201>
81004fea:	83 c3 01             	add    $0x1,%ebx
81004fed:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
81004ff3:	8d 50 04             	lea    0x4(%eax),%edx
81004ff6:	89 95 7c ff ff ff    	mov    %edx,-0x84(%ebp)
81004ffc:	8b 00                	mov    (%eax),%eax
81004ffe:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005001:	8b 45 84             	mov    -0x7c(%ebp),%eax
81005004:	85 c0                	test   %eax,%eax
81005006:	79 3f                	jns    81005047 <_vfiprintf_r+0x237>
81005008:	c7 45 84 ff ff ff ff 	movl   $0xffffffff,-0x7c(%ebp)
8100500f:	eb 36                	jmp    81005047 <_vfiprintf_r+0x237>
81005011:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81005018:	eb 1f                	jmp    81005039 <_vfiprintf_r+0x229>
8100501a:	8b 55 84             	mov    -0x7c(%ebp),%edx
8100501d:	89 d0                	mov    %edx,%eax
8100501f:	c1 e0 02             	shl    $0x2,%eax
81005022:	01 d0                	add    %edx,%eax
81005024:	01 c0                	add    %eax,%eax
81005026:	89 c2                	mov    %eax,%edx
81005028:	0f b6 03             	movzbl (%ebx),%eax
8100502b:	0f be c0             	movsbl %al,%eax
8100502e:	83 e8 30             	sub    $0x30,%eax
81005031:	01 d0                	add    %edx,%eax
81005033:	89 45 84             	mov    %eax,-0x7c(%ebp)
81005036:	83 c3 01             	add    $0x1,%ebx
81005039:	0f b6 03             	movzbl (%ebx),%eax
8100503c:	0f be c0             	movsbl %al,%eax
8100503f:	83 e8 30             	sub    $0x30,%eax
81005042:	83 f8 09             	cmp    $0x9,%eax
81005045:	76 d3                	jbe    8100501a <_vfiprintf_r+0x20a>
81005047:	c7 45 dc ee 88 00 81 	movl   $0x810088ee,-0x24(%ebp)
8100504e:	0f b6 03             	movzbl (%ebx),%eax
81005051:	0f be c0             	movsbl %al,%eax
81005054:	83 ec 04             	sub    $0x4,%esp
81005057:	6a 03                	push   $0x3
81005059:	50                   	push   %eax
8100505a:	ff 75 dc             	pushl  -0x24(%ebp)
8100505d:	e8 4e f9 ff ff       	call   810049b0 <memchr>
81005062:	83 c4 10             	add    $0x10,%esp
81005065:	89 c6                	mov    %eax,%esi
81005067:	85 f6                	test   %esi,%esi
81005069:	74 1b                	je     81005086 <_vfiprintf_r+0x276>
8100506b:	8b 55 80             	mov    -0x80(%ebp),%edx
8100506e:	89 f0                	mov    %esi,%eax
81005070:	2b 45 dc             	sub    -0x24(%ebp),%eax
81005073:	be 40 00 00 00       	mov    $0x40,%esi
81005078:	89 c1                	mov    %eax,%ecx
8100507a:	d3 e6                	shl    %cl,%esi
8100507c:	89 f0                	mov    %esi,%eax
8100507e:	09 d0                	or     %edx,%eax
81005080:	89 45 80             	mov    %eax,-0x80(%ebp)
81005083:	83 c3 01             	add    $0x1,%ebx
81005086:	89 d8                	mov    %ebx,%eax
81005088:	8d 58 01             	lea    0x1(%eax),%ebx
8100508b:	0f b6 00             	movzbl (%eax),%eax
8100508e:	88 45 98             	mov    %al,-0x68(%ebp)
81005091:	0f b6 45 98          	movzbl -0x68(%ebp),%eax
81005095:	0f be c0             	movsbl %al,%eax
81005098:	83 ec 04             	sub    $0x4,%esp
8100509b:	6a 06                	push   $0x6
8100509d:	50                   	push   %eax
8100509e:	68 f2 88 00 81       	push   $0x810088f2
810050a3:	e8 08 f9 ff ff       	call   810049b0 <memchr>
810050a8:	83 c4 10             	add    $0x10,%esp
810050ab:	89 c6                	mov    %eax,%esi
810050ad:	85 f6                	test   %esi,%esi
810050af:	74 5a                	je     8100510b <_vfiprintf_r+0x2fb>
810050b1:	b8 00 00 00 00       	mov    $0x0,%eax
810050b6:	85 c0                	test   %eax,%eax
810050b8:	75 2e                	jne    810050e8 <_vfiprintf_r+0x2d8>
810050ba:	8b 45 80             	mov    -0x80(%ebp),%eax
810050bd:	25 00 01 00 00       	and    $0x100,%eax
810050c2:	85 c0                	test   %eax,%eax
810050c4:	74 11                	je     810050d7 <_vfiprintf_r+0x2c7>
810050c6:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050cc:	83 c0 0c             	add    $0xc,%eax
810050cf:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050d5:	eb 55                	jmp    8100512c <_vfiprintf_r+0x31c>
810050d7:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
810050dd:	83 c0 08             	add    $0x8,%eax
810050e0:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)
810050e6:	eb 44                	jmp    8100512c <_vfiprintf_r+0x31c>
810050e8:	83 ec 0c             	sub    $0xc,%esp
810050eb:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
810050f1:	50                   	push   %eax
810050f2:	ff 75 e4             	pushl  -0x1c(%ebp)
810050f5:	ff 75 0c             	pushl  0xc(%ebp)
810050f8:	8d 45 80             	lea    -0x80(%ebp),%eax
810050fb:	50                   	push   %eax
810050fc:	ff 75 08             	pushl  0x8(%ebp)
810050ff:	e8 fc ae ff 7e       	call   0 <show_promot-0x81000000>
81005104:	83 c4 20             	add    $0x20,%esp
81005107:	89 c7                	mov    %eax,%edi
81005109:	eb 21                	jmp    8100512c <_vfiprintf_r+0x31c>
8100510b:	83 ec 0c             	sub    $0xc,%esp
8100510e:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax
81005114:	50                   	push   %eax
81005115:	ff 75 e4             	pushl  -0x1c(%ebp)
81005118:	ff 75 0c             	pushl  0xc(%ebp)
8100511b:	8d 45 80             	lea    -0x80(%ebp),%eax
8100511e:	50                   	push   %eax
8100511f:	ff 75 08             	pushl  0x8(%ebp)
81005122:	e8 da 01 00 00       	call   81005301 <_printf_i>
81005127:	83 c4 20             	add    $0x20,%esp
8100512a:	89 c7                	mov    %eax,%edi
8100512c:	83 ff ff             	cmp    $0xffffffff,%edi
8100512f:	74 13                	je     81005144 <_vfiprintf_r+0x334>
81005131:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005134:	01 f8                	add    %edi,%eax
81005136:	89 45 94             	mov    %eax,-0x6c(%ebp)
81005139:	e9 5c fd ff ff       	jmp    81004e9a <_vfiprintf_r+0x8a>
8100513e:	90                   	nop
8100513f:	eb 04                	jmp    81005145 <_vfiprintf_r+0x335>
81005141:	90                   	nop
81005142:	eb 01                	jmp    81005145 <_vfiprintf_r+0x335>
81005144:	90                   	nop
81005145:	8b 45 0c             	mov    0xc(%ebp),%eax
81005148:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
8100514c:	98                   	cwtl   
8100514d:	83 e0 40             	and    $0x40,%eax
81005150:	85 c0                	test   %eax,%eax
81005152:	75 05                	jne    81005159 <_vfiprintf_r+0x349>
81005154:	8b 45 94             	mov    -0x6c(%ebp),%eax
81005157:	eb 05                	jmp    8100515e <_vfiprintf_r+0x34e>
81005159:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100515e:	8d 65 f4             	lea    -0xc(%ebp),%esp
81005161:	5b                   	pop    %ebx
81005162:	5e                   	pop    %esi
81005163:	5f                   	pop    %edi
81005164:	5d                   	pop    %ebp
81005165:	c3                   	ret    

81005166 <_printf_common>:
81005166:	55                   	push   %ebp
81005167:	89 e5                	mov    %esp,%ebp
81005169:	83 ec 18             	sub    $0x18,%esp
8100516c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100516f:	8b 50 10             	mov    0x10(%eax),%edx
81005172:	8b 45 0c             	mov    0xc(%ebp),%eax
81005175:	8b 40 08             	mov    0x8(%eax),%eax
81005178:	39 c2                	cmp    %eax,%edx
8100517a:	0f 4c d0             	cmovl  %eax,%edx
8100517d:	8b 45 10             	mov    0x10(%ebp),%eax
81005180:	89 10                	mov    %edx,(%eax)
81005182:	8b 45 0c             	mov    0xc(%ebp),%eax
81005185:	0f b6 40 43          	movzbl 0x43(%eax),%eax
81005189:	84 c0                	test   %al,%al
8100518b:	74 0d                	je     8100519a <_printf_common+0x34>
8100518d:	8b 45 10             	mov    0x10(%ebp),%eax
81005190:	8b 00                	mov    (%eax),%eax
81005192:	8d 50 01             	lea    0x1(%eax),%edx
81005195:	8b 45 10             	mov    0x10(%ebp),%eax
81005198:	89 10                	mov    %edx,(%eax)
8100519a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100519d:	8b 00                	mov    (%eax),%eax
8100519f:	83 e0 20             	and    $0x20,%eax
810051a2:	85 c0                	test   %eax,%eax
810051a4:	74 0d                	je     810051b3 <_printf_common+0x4d>
810051a6:	8b 45 10             	mov    0x10(%ebp),%eax
810051a9:	8b 00                	mov    (%eax),%eax
810051ab:	8d 50 02             	lea    0x2(%eax),%edx
810051ae:	8b 45 10             	mov    0x10(%ebp),%eax
810051b1:	89 10                	mov    %edx,(%eax)
810051b3:	8b 45 0c             	mov    0xc(%ebp),%eax
810051b6:	8b 00                	mov    (%eax),%eax
810051b8:	83 e0 06             	and    $0x6,%eax
810051bb:	85 c0                	test   %eax,%eax
810051bd:	75 41                	jne    81005200 <_printf_common+0x9a>
810051bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
810051c6:	eb 24                	jmp    810051ec <_printf_common+0x86>
810051c8:	8b 45 0c             	mov    0xc(%ebp),%eax
810051cb:	83 c0 19             	add    $0x19,%eax
810051ce:	6a 01                	push   $0x1
810051d0:	50                   	push   %eax
810051d1:	ff 75 14             	pushl  0x14(%ebp)
810051d4:	ff 75 08             	pushl  0x8(%ebp)
810051d7:	8b 45 18             	mov    0x18(%ebp),%eax
810051da:	ff d0                	call   *%eax
810051dc:	83 c4 10             	add    $0x10,%esp
810051df:	83 f8 ff             	cmp    $0xffffffff,%eax
810051e2:	0f 84 0b 01 00 00    	je     810052f3 <_printf_common+0x18d>
810051e8:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
810051ec:	8b 45 0c             	mov    0xc(%ebp),%eax
810051ef:	8b 50 0c             	mov    0xc(%eax),%edx
810051f2:	8b 45 10             	mov    0x10(%ebp),%eax
810051f5:	8b 08                	mov    (%eax),%ecx
810051f7:	89 d0                	mov    %edx,%eax
810051f9:	29 c8                	sub    %ecx,%eax
810051fb:	39 45 f0             	cmp    %eax,-0x10(%ebp)
810051fe:	7c c8                	jl     810051c8 <_printf_common+0x62>
81005200:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005207:	8b 45 0c             	mov    0xc(%ebp),%eax
8100520a:	0f b6 40 43          	movzbl 0x43(%eax),%eax
8100520e:	84 c0                	test   %al,%al
81005210:	74 04                	je     81005216 <_printf_common+0xb0>
81005212:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81005216:	8b 45 0c             	mov    0xc(%ebp),%eax
81005219:	8b 00                	mov    (%eax),%eax
8100521b:	83 e0 20             	and    $0x20,%eax
8100521e:	85 c0                	test   %eax,%eax
81005220:	74 28                	je     8100524a <_printf_common+0xe4>
81005222:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005225:	8d 50 01             	lea    0x1(%eax),%edx
81005228:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100522b:	8b 55 0c             	mov    0xc(%ebp),%edx
8100522e:	c6 44 02 43 30       	movb   $0x30,0x43(%edx,%eax,1)
81005233:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005236:	8d 50 01             	lea    0x1(%eax),%edx
81005239:	89 55 f4             	mov    %edx,-0xc(%ebp)
8100523c:	8b 55 0c             	mov    0xc(%ebp),%edx
8100523f:	0f b6 4a 45          	movzbl 0x45(%edx),%ecx
81005243:	8b 55 0c             	mov    0xc(%ebp),%edx
81005246:	88 4c 02 43          	mov    %cl,0x43(%edx,%eax,1)
8100524a:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100524d:	8b 55 0c             	mov    0xc(%ebp),%edx
81005250:	83 c2 43             	add    $0x43,%edx
81005253:	50                   	push   %eax
81005254:	52                   	push   %edx
81005255:	ff 75 14             	pushl  0x14(%ebp)
81005258:	ff 75 08             	pushl  0x8(%ebp)
8100525b:	8b 45 18             	mov    0x18(%ebp),%eax
8100525e:	ff d0                	call   *%eax
81005260:	83 c4 10             	add    $0x10,%esp
81005263:	83 f8 ff             	cmp    $0xffffffff,%eax
81005266:	0f 84 8a 00 00 00    	je     810052f6 <_printf_common+0x190>
8100526c:	8b 45 0c             	mov    0xc(%ebp),%eax
8100526f:	8b 50 0c             	mov    0xc(%eax),%edx
81005272:	8b 45 10             	mov    0x10(%ebp),%eax
81005275:	8b 08                	mov    (%eax),%ecx
81005277:	89 d0                	mov    %edx,%eax
81005279:	29 c8                	sub    %ecx,%eax
8100527b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100527e:	8b 45 0c             	mov    0xc(%ebp),%eax
81005281:	8b 00                	mov    (%eax),%eax
81005283:	83 e0 06             	and    $0x6,%eax
81005286:	83 f8 04             	cmp    $0x4,%eax
81005289:	75 06                	jne    81005291 <_printf_common+0x12b>
8100528b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100528f:	79 07                	jns    81005298 <_printf_common+0x132>
81005291:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81005298:	8b 45 0c             	mov    0xc(%ebp),%eax
8100529b:	8b 50 08             	mov    0x8(%eax),%edx
8100529e:	8b 45 0c             	mov    0xc(%ebp),%eax
810052a1:	8b 40 10             	mov    0x10(%eax),%eax
810052a4:	39 c2                	cmp    %eax,%edx
810052a6:	7e 13                	jle    810052bb <_printf_common+0x155>
810052a8:	8b 45 0c             	mov    0xc(%ebp),%eax
810052ab:	8b 50 08             	mov    0x8(%eax),%edx
810052ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810052b1:	8b 48 10             	mov    0x10(%eax),%ecx
810052b4:	89 d0                	mov    %edx,%eax
810052b6:	29 c8                	sub    %ecx,%eax
810052b8:	01 45 f4             	add    %eax,-0xc(%ebp)
810052bb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
810052c2:	eb 20                	jmp    810052e4 <_printf_common+0x17e>
810052c4:	8b 45 0c             	mov    0xc(%ebp),%eax
810052c7:	83 c0 1a             	add    $0x1a,%eax
810052ca:	6a 01                	push   $0x1
810052cc:	50                   	push   %eax
810052cd:	ff 75 14             	pushl  0x14(%ebp)
810052d0:	ff 75 08             	pushl  0x8(%ebp)
810052d3:	8b 45 18             	mov    0x18(%ebp),%eax
810052d6:	ff d0                	call   *%eax
810052d8:	83 c4 10             	add    $0x10,%esp
810052db:	83 f8 ff             	cmp    $0xffffffff,%eax
810052de:	74 19                	je     810052f9 <_printf_common+0x193>
810052e0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
810052e4:	8b 45 ec             	mov    -0x14(%ebp),%eax
810052e7:	3b 45 f4             	cmp    -0xc(%ebp),%eax
810052ea:	7c d8                	jl     810052c4 <_printf_common+0x15e>
810052ec:	b8 00 00 00 00       	mov    $0x0,%eax
810052f1:	eb 0c                	jmp    810052ff <_printf_common+0x199>
810052f3:	90                   	nop
810052f4:	eb 04                	jmp    810052fa <_printf_common+0x194>
810052f6:	90                   	nop
810052f7:	eb 01                	jmp    810052fa <_printf_common+0x194>
810052f9:	90                   	nop
810052fa:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810052ff:	c9                   	leave  
81005300:	c3                   	ret    

81005301 <_printf_i>:
81005301:	55                   	push   %ebp
81005302:	89 e5                	mov    %esp,%ebp
81005304:	53                   	push   %ebx
81005305:	83 ec 24             	sub    $0x24,%esp
81005308:	8b 45 0c             	mov    0xc(%ebp),%eax
8100530b:	83 c0 1b             	add    $0x1b,%eax
8100530e:	83 c0 28             	add    $0x28,%eax
81005311:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005314:	c7 45 e8 fc 88 00 81 	movl   $0x810088fc,-0x18(%ebp)
8100531b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100531e:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005322:	0f be c0             	movsbl %al,%eax
81005325:	85 c0                	test   %eax,%eax
81005327:	0f 84 00 03 00 00    	je     8100562d <_printf_i+0x32c>
8100532d:	85 c0                	test   %eax,%eax
8100532f:	0f 88 52 03 00 00    	js     81005687 <_printf_i+0x386>
81005335:	83 f8 78             	cmp    $0x78,%eax
81005338:	0f 8f 49 03 00 00    	jg     81005687 <_printf_i+0x386>
8100533e:	83 f8 58             	cmp    $0x58,%eax
81005341:	0f 8c 40 03 00 00    	jl     81005687 <_printf_i+0x386>
81005347:	83 e8 58             	sub    $0x58,%eax
8100534a:	83 f8 20             	cmp    $0x20,%eax
8100534d:	0f 87 34 03 00 00    	ja     81005687 <_printf_i+0x386>
81005353:	8b 04 85 20 89 00 81 	mov    -0x7eff76e0(,%eax,4),%eax
8100535a:	ff e0                	jmp    *%eax
8100535c:	8b 45 18             	mov    0x18(%ebp),%eax
8100535f:	8b 00                	mov    (%eax),%eax
81005361:	8d 48 04             	lea    0x4(%eax),%ecx
81005364:	8b 55 18             	mov    0x18(%ebp),%edx
81005367:	89 0a                	mov    %ecx,(%edx)
81005369:	8b 00                	mov    (%eax),%eax
8100536b:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100536f:	89 c2                	mov    %eax,%edx
81005371:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005374:	88 10                	mov    %dl,(%eax)
81005376:	8b 45 0c             	mov    0xc(%ebp),%eax
81005379:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
81005380:	e9 1c 03 00 00       	jmp    810056a1 <_printf_i+0x3a0>
81005385:	8b 45 0c             	mov    0xc(%ebp),%eax
81005388:	8b 00                	mov    (%eax),%eax
8100538a:	25 80 00 00 00       	and    $0x80,%eax
8100538f:	85 c0                	test   %eax,%eax
81005391:	74 11                	je     810053a4 <_printf_i+0xa3>
81005393:	8b 45 18             	mov    0x18(%ebp),%eax
81005396:	8b 00                	mov    (%eax),%eax
81005398:	8d 48 04             	lea    0x4(%eax),%ecx
8100539b:	8b 55 18             	mov    0x18(%ebp),%edx
8100539e:	89 0a                	mov    %ecx,(%edx)
810053a0:	8b 00                	mov    (%eax),%eax
810053a2:	eb 2d                	jmp    810053d1 <_printf_i+0xd0>
810053a4:	8b 45 0c             	mov    0xc(%ebp),%eax
810053a7:	8b 00                	mov    (%eax),%eax
810053a9:	83 e0 40             	and    $0x40,%eax
810053ac:	85 c0                	test   %eax,%eax
810053ae:	74 12                	je     810053c2 <_printf_i+0xc1>
810053b0:	8b 45 18             	mov    0x18(%ebp),%eax
810053b3:	8b 00                	mov    (%eax),%eax
810053b5:	8d 48 04             	lea    0x4(%eax),%ecx
810053b8:	8b 55 18             	mov    0x18(%ebp),%edx
810053bb:	89 0a                	mov    %ecx,(%edx)
810053bd:	8b 00                	mov    (%eax),%eax
810053bf:	98                   	cwtl   
810053c0:	eb 0f                	jmp    810053d1 <_printf_i+0xd0>
810053c2:	8b 45 18             	mov    0x18(%ebp),%eax
810053c5:	8b 00                	mov    (%eax),%eax
810053c7:	8d 48 04             	lea    0x4(%eax),%ecx
810053ca:	8b 55 18             	mov    0x18(%ebp),%edx
810053cd:	89 0a                	mov    %ecx,(%edx)
810053cf:	8b 00                	mov    (%eax),%eax
810053d1:	89 45 f4             	mov    %eax,-0xc(%ebp)
810053d4:	8b 45 f4             	mov    -0xc(%ebp),%eax
810053d7:	85 c0                	test   %eax,%eax
810053d9:	79 0a                	jns    810053e5 <_printf_i+0xe4>
810053db:	f7 5d f4             	negl   -0xc(%ebp)
810053de:	8b 45 0c             	mov    0xc(%ebp),%eax
810053e1:	c6 40 43 2d          	movb   $0x2d,0x43(%eax)
810053e5:	c7 45 f0 0a 00 00 00 	movl   $0xa,-0x10(%ebp)
810053ec:	e9 28 01 00 00       	jmp    81005519 <_printf_i+0x218>
810053f1:	8b 45 0c             	mov    0xc(%ebp),%eax
810053f4:	8b 00                	mov    (%eax),%eax
810053f6:	25 80 00 00 00       	and    $0x80,%eax
810053fb:	85 c0                	test   %eax,%eax
810053fd:	74 11                	je     81005410 <_printf_i+0x10f>
810053ff:	8b 45 18             	mov    0x18(%ebp),%eax
81005402:	8b 00                	mov    (%eax),%eax
81005404:	8d 48 04             	lea    0x4(%eax),%ecx
81005407:	8b 55 18             	mov    0x18(%ebp),%edx
8100540a:	89 0a                	mov    %ecx,(%edx)
8100540c:	8b 00                	mov    (%eax),%eax
8100540e:	eb 2f                	jmp    8100543f <_printf_i+0x13e>
81005410:	8b 45 0c             	mov    0xc(%ebp),%eax
81005413:	8b 00                	mov    (%eax),%eax
81005415:	83 e0 40             	and    $0x40,%eax
81005418:	85 c0                	test   %eax,%eax
8100541a:	74 14                	je     81005430 <_printf_i+0x12f>
8100541c:	8b 45 18             	mov    0x18(%ebp),%eax
8100541f:	8b 00                	mov    (%eax),%eax
81005421:	8d 48 04             	lea    0x4(%eax),%ecx
81005424:	8b 55 18             	mov    0x18(%ebp),%edx
81005427:	89 0a                	mov    %ecx,(%edx)
81005429:	8b 00                	mov    (%eax),%eax
8100542b:	0f b7 c0             	movzwl %ax,%eax
8100542e:	eb 0f                	jmp    8100543f <_printf_i+0x13e>
81005430:	8b 45 18             	mov    0x18(%ebp),%eax
81005433:	8b 00                	mov    (%eax),%eax
81005435:	8d 48 04             	lea    0x4(%eax),%ecx
81005438:	8b 55 18             	mov    0x18(%ebp),%edx
8100543b:	89 0a                	mov    %ecx,(%edx)
8100543d:	8b 00                	mov    (%eax),%eax
8100543f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005442:	8b 45 0c             	mov    0xc(%ebp),%eax
81005445:	0f b6 40 18          	movzbl 0x18(%eax),%eax
81005449:	3c 6f                	cmp    $0x6f,%al
8100544b:	75 07                	jne    81005454 <_printf_i+0x153>
8100544d:	b8 08 00 00 00       	mov    $0x8,%eax
81005452:	eb 05                	jmp    81005459 <_printf_i+0x158>
81005454:	b8 0a 00 00 00       	mov    $0xa,%eax
81005459:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100545c:	e9 b1 00 00 00       	jmp    81005512 <_printf_i+0x211>
81005461:	8b 45 0c             	mov    0xc(%ebp),%eax
81005464:	c6 40 45 58          	movb   $0x58,0x45(%eax)
81005468:	eb 1d                	jmp    81005487 <_printf_i+0x186>
8100546a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100546d:	8b 00                	mov    (%eax),%eax
8100546f:	83 c8 20             	or     $0x20,%eax
81005472:	89 c2                	mov    %eax,%edx
81005474:	8b 45 0c             	mov    0xc(%ebp),%eax
81005477:	89 10                	mov    %edx,(%eax)
81005479:	8b 45 0c             	mov    0xc(%ebp),%eax
8100547c:	c6 40 45 78          	movb   $0x78,0x45(%eax)
81005480:	c7 45 e8 0d 89 00 81 	movl   $0x8100890d,-0x18(%ebp)
81005487:	8b 45 0c             	mov    0xc(%ebp),%eax
8100548a:	8b 00                	mov    (%eax),%eax
8100548c:	25 80 00 00 00       	and    $0x80,%eax
81005491:	85 c0                	test   %eax,%eax
81005493:	74 11                	je     810054a6 <_printf_i+0x1a5>
81005495:	8b 45 18             	mov    0x18(%ebp),%eax
81005498:	8b 00                	mov    (%eax),%eax
8100549a:	8d 48 04             	lea    0x4(%eax),%ecx
8100549d:	8b 55 18             	mov    0x18(%ebp),%edx
810054a0:	89 0a                	mov    %ecx,(%edx)
810054a2:	8b 00                	mov    (%eax),%eax
810054a4:	eb 2f                	jmp    810054d5 <_printf_i+0x1d4>
810054a6:	8b 45 0c             	mov    0xc(%ebp),%eax
810054a9:	8b 00                	mov    (%eax),%eax
810054ab:	83 e0 40             	and    $0x40,%eax
810054ae:	85 c0                	test   %eax,%eax
810054b0:	74 14                	je     810054c6 <_printf_i+0x1c5>
810054b2:	8b 45 18             	mov    0x18(%ebp),%eax
810054b5:	8b 00                	mov    (%eax),%eax
810054b7:	8d 48 04             	lea    0x4(%eax),%ecx
810054ba:	8b 55 18             	mov    0x18(%ebp),%edx
810054bd:	89 0a                	mov    %ecx,(%edx)
810054bf:	8b 00                	mov    (%eax),%eax
810054c1:	0f b7 c0             	movzwl %ax,%eax
810054c4:	eb 0f                	jmp    810054d5 <_printf_i+0x1d4>
810054c6:	8b 45 18             	mov    0x18(%ebp),%eax
810054c9:	8b 00                	mov    (%eax),%eax
810054cb:	8d 48 04             	lea    0x4(%eax),%ecx
810054ce:	8b 55 18             	mov    0x18(%ebp),%edx
810054d1:	89 0a                	mov    %ecx,(%edx)
810054d3:	8b 00                	mov    (%eax),%eax
810054d5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810054d8:	c7 45 f0 10 00 00 00 	movl   $0x10,-0x10(%ebp)
810054df:	8b 45 0c             	mov    0xc(%ebp),%eax
810054e2:	8b 00                	mov    (%eax),%eax
810054e4:	83 e0 01             	and    $0x1,%eax
810054e7:	85 c0                	test   %eax,%eax
810054e9:	74 0f                	je     810054fa <_printf_i+0x1f9>
810054eb:	8b 45 0c             	mov    0xc(%ebp),%eax
810054ee:	8b 00                	mov    (%eax),%eax
810054f0:	83 c8 20             	or     $0x20,%eax
810054f3:	89 c2                	mov    %eax,%edx
810054f5:	8b 45 0c             	mov    0xc(%ebp),%eax
810054f8:	89 10                	mov    %edx,(%eax)
810054fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810054fe:	75 11                	jne    81005511 <_printf_i+0x210>
81005500:	8b 45 0c             	mov    0xc(%ebp),%eax
81005503:	8b 00                	mov    (%eax),%eax
81005505:	83 e0 df             	and    $0xffffffdf,%eax
81005508:	89 c2                	mov    %eax,%edx
8100550a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100550d:	89 10                	mov    %edx,(%eax)
8100550f:	eb 01                	jmp    81005512 <_printf_i+0x211>
81005511:	90                   	nop
81005512:	8b 45 0c             	mov    0xc(%ebp),%eax
81005515:	c6 40 43 00          	movb   $0x0,0x43(%eax)
81005519:	8b 45 0c             	mov    0xc(%ebp),%eax
8100551c:	8b 50 04             	mov    0x4(%eax),%edx
8100551f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005522:	89 50 08             	mov    %edx,0x8(%eax)
81005525:	8b 45 0c             	mov    0xc(%ebp),%eax
81005528:	8b 40 08             	mov    0x8(%eax),%eax
8100552b:	85 c0                	test   %eax,%eax
8100552d:	78 0f                	js     8100553e <_printf_i+0x23d>
8100552f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005532:	8b 00                	mov    (%eax),%eax
81005534:	83 e0 fb             	and    $0xfffffffb,%eax
81005537:	89 c2                	mov    %eax,%edx
81005539:	8b 45 0c             	mov    0xc(%ebp),%eax
8100553c:	89 10                	mov    %edx,(%eax)
8100553e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005542:	75 0a                	jne    8100554e <_printf_i+0x24d>
81005544:	8b 45 0c             	mov    0xc(%ebp),%eax
81005547:	8b 40 04             	mov    0x4(%eax),%eax
8100554a:	85 c0                	test   %eax,%eax
8100554c:	74 34                	je     81005582 <_printf_i+0x281>
8100554e:	8b 4d f0             	mov    -0x10(%ebp),%ecx
81005551:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005554:	ba 00 00 00 00       	mov    $0x0,%edx
81005559:	f7 f1                	div    %ecx
8100555b:	8b 45 e8             	mov    -0x18(%ebp),%eax
8100555e:	01 d0                	add    %edx,%eax
81005560:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
81005564:	0f b6 10             	movzbl (%eax),%edx
81005567:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100556a:	88 10                	mov    %dl,(%eax)
8100556c:	8b 5d f0             	mov    -0x10(%ebp),%ebx
8100556f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005572:	ba 00 00 00 00       	mov    $0x0,%edx
81005577:	f7 f3                	div    %ebx
81005579:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100557c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81005580:	75 cc                	jne    8100554e <_printf_i+0x24d>
81005582:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)
81005586:	75 26                	jne    810055ae <_printf_i+0x2ad>
81005588:	8b 45 0c             	mov    0xc(%ebp),%eax
8100558b:	8b 00                	mov    (%eax),%eax
8100558d:	83 e0 01             	and    $0x1,%eax
81005590:	85 c0                	test   %eax,%eax
81005592:	74 1a                	je     810055ae <_printf_i+0x2ad>
81005594:	8b 45 0c             	mov    0xc(%ebp),%eax
81005597:	8b 50 04             	mov    0x4(%eax),%edx
8100559a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100559d:	8b 40 10             	mov    0x10(%eax),%eax
810055a0:	39 c2                	cmp    %eax,%edx
810055a2:	7f 0a                	jg     810055ae <_printf_i+0x2ad>
810055a4:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
810055a8:	8b 45 ec             	mov    -0x14(%ebp),%eax
810055ab:	c6 00 30             	movb   $0x30,(%eax)
810055ae:	8b 45 0c             	mov    0xc(%ebp),%eax
810055b1:	83 c0 1b             	add    $0x1b,%eax
810055b4:	83 c0 28             	add    $0x28,%eax
810055b7:	2b 45 ec             	sub    -0x14(%ebp),%eax
810055ba:	89 c2                	mov    %eax,%edx
810055bc:	8b 45 0c             	mov    0xc(%ebp),%eax
810055bf:	89 50 10             	mov    %edx,0x10(%eax)
810055c2:	e9 e2 00 00 00       	jmp    810056a9 <_printf_i+0x3a8>
810055c7:	8b 45 0c             	mov    0xc(%ebp),%eax
810055ca:	8b 00                	mov    (%eax),%eax
810055cc:	25 80 00 00 00       	and    $0x80,%eax
810055d1:	85 c0                	test   %eax,%eax
810055d3:	74 19                	je     810055ee <_printf_i+0x2ed>
810055d5:	8b 45 18             	mov    0x18(%ebp),%eax
810055d8:	8b 00                	mov    (%eax),%eax
810055da:	8d 48 04             	lea    0x4(%eax),%ecx
810055dd:	8b 55 18             	mov    0x18(%ebp),%edx
810055e0:	89 0a                	mov    %ecx,(%edx)
810055e2:	8b 00                	mov    (%eax),%eax
810055e4:	8b 55 0c             	mov    0xc(%ebp),%edx
810055e7:	8b 52 14             	mov    0x14(%edx),%edx
810055ea:	89 10                	mov    %edx,(%eax)
810055ec:	eb 3f                	jmp    8100562d <_printf_i+0x32c>
810055ee:	8b 45 0c             	mov    0xc(%ebp),%eax
810055f1:	8b 00                	mov    (%eax),%eax
810055f3:	83 e0 40             	and    $0x40,%eax
810055f6:	85 c0                	test   %eax,%eax
810055f8:	74 1c                	je     81005616 <_printf_i+0x315>
810055fa:	8b 45 0c             	mov    0xc(%ebp),%eax
810055fd:	8b 58 14             	mov    0x14(%eax),%ebx
81005600:	8b 45 18             	mov    0x18(%ebp),%eax
81005603:	8b 00                	mov    (%eax),%eax
81005605:	8d 48 04             	lea    0x4(%eax),%ecx
81005608:	8b 55 18             	mov    0x18(%ebp),%edx
8100560b:	89 0a                	mov    %ecx,(%edx)
8100560d:	8b 00                	mov    (%eax),%eax
8100560f:	89 da                	mov    %ebx,%edx
81005611:	66 89 10             	mov    %dx,(%eax)
81005614:	eb 17                	jmp    8100562d <_printf_i+0x32c>
81005616:	8b 45 18             	mov    0x18(%ebp),%eax
81005619:	8b 00                	mov    (%eax),%eax
8100561b:	8d 48 04             	lea    0x4(%eax),%ecx
8100561e:	8b 55 18             	mov    0x18(%ebp),%edx
81005621:	89 0a                	mov    %ecx,(%edx)
81005623:	8b 00                	mov    (%eax),%eax
81005625:	8b 55 0c             	mov    0xc(%ebp),%edx
81005628:	8b 52 14             	mov    0x14(%edx),%edx
8100562b:	89 10                	mov    %edx,(%eax)
8100562d:	8b 45 0c             	mov    0xc(%ebp),%eax
81005630:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)
81005637:	eb 70                	jmp    810056a9 <_printf_i+0x3a8>
81005639:	8b 45 18             	mov    0x18(%ebp),%eax
8100563c:	8b 00                	mov    (%eax),%eax
8100563e:	8d 48 04             	lea    0x4(%eax),%ecx
81005641:	8b 55 18             	mov    0x18(%ebp),%edx
81005644:	89 0a                	mov    %ecx,(%edx)
81005646:	8b 00                	mov    (%eax),%eax
81005648:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100564b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100564e:	8b 40 04             	mov    0x4(%eax),%eax
81005651:	83 ec 04             	sub    $0x4,%esp
81005654:	50                   	push   %eax
81005655:	6a 00                	push   $0x0
81005657:	ff 75 ec             	pushl  -0x14(%ebp)
8100565a:	e8 51 f3 ff ff       	call   810049b0 <memchr>
8100565f:	83 c4 10             	add    $0x10,%esp
81005662:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005665:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
81005669:	74 0e                	je     81005679 <_printf_i+0x378>
8100566b:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100566e:	2b 45 ec             	sub    -0x14(%ebp),%eax
81005671:	89 c2                	mov    %eax,%edx
81005673:	8b 45 0c             	mov    0xc(%ebp),%eax
81005676:	89 50 04             	mov    %edx,0x4(%eax)
81005679:	8b 45 0c             	mov    0xc(%ebp),%eax
8100567c:	8b 50 04             	mov    0x4(%eax),%edx
8100567f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005682:	89 50 10             	mov    %edx,0x10(%eax)
81005685:	eb 1a                	jmp    810056a1 <_printf_i+0x3a0>
81005687:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
8100568b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100568e:	0f b6 50 18          	movzbl 0x18(%eax),%edx
81005692:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005695:	88 10                	mov    %dl,(%eax)
81005697:	8b 45 0c             	mov    0xc(%ebp),%eax
8100569a:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)
810056a1:	8b 45 0c             	mov    0xc(%ebp),%eax
810056a4:	c6 40 43 00          	movb   $0x0,0x43(%eax)
810056a8:	90                   	nop
810056a9:	83 ec 0c             	sub    $0xc,%esp
810056ac:	ff 75 14             	pushl  0x14(%ebp)
810056af:	ff 75 10             	pushl  0x10(%ebp)
810056b2:	8d 45 d8             	lea    -0x28(%ebp),%eax
810056b5:	50                   	push   %eax
810056b6:	ff 75 0c             	pushl  0xc(%ebp)
810056b9:	ff 75 08             	pushl  0x8(%ebp)
810056bc:	e8 a5 fa ff ff       	call   81005166 <_printf_common>
810056c1:	83 c4 20             	add    $0x20,%esp
810056c4:	89 45 dc             	mov    %eax,-0x24(%ebp)
810056c7:	83 7d dc ff          	cmpl   $0xffffffff,-0x24(%ebp)
810056cb:	74 72                	je     8100573f <_printf_i+0x43e>
810056cd:	8b 45 0c             	mov    0xc(%ebp),%eax
810056d0:	8b 40 10             	mov    0x10(%eax),%eax
810056d3:	50                   	push   %eax
810056d4:	ff 75 ec             	pushl  -0x14(%ebp)
810056d7:	ff 75 10             	pushl  0x10(%ebp)
810056da:	ff 75 08             	pushl  0x8(%ebp)
810056dd:	8b 45 14             	mov    0x14(%ebp),%eax
810056e0:	ff d0                	call   *%eax
810056e2:	83 c4 10             	add    $0x10,%esp
810056e5:	83 f8 ff             	cmp    $0xffffffff,%eax
810056e8:	74 58                	je     81005742 <_printf_i+0x441>
810056ea:	8b 45 0c             	mov    0xc(%ebp),%eax
810056ed:	8b 00                	mov    (%eax),%eax
810056ef:	83 e0 02             	and    $0x2,%eax
810056f2:	85 c0                	test   %eax,%eax
810056f4:	74 39                	je     8100572f <_printf_i+0x42e>
810056f6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
810056fd:	eb 20                	jmp    8100571f <_printf_i+0x41e>
810056ff:	8b 45 0c             	mov    0xc(%ebp),%eax
81005702:	83 c0 19             	add    $0x19,%eax
81005705:	6a 01                	push   $0x1
81005707:	50                   	push   %eax
81005708:	ff 75 10             	pushl  0x10(%ebp)
8100570b:	ff 75 08             	pushl  0x8(%ebp)
8100570e:	8b 45 14             	mov    0x14(%ebp),%eax
81005711:	ff d0                	call   *%eax
81005713:	83 c4 10             	add    $0x10,%esp
81005716:	83 f8 ff             	cmp    $0xffffffff,%eax
81005719:	74 2a                	je     81005745 <_printf_i+0x444>
8100571b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
8100571f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005722:	8b 40 0c             	mov    0xc(%eax),%eax
81005725:	8b 55 d8             	mov    -0x28(%ebp),%edx
81005728:	29 d0                	sub    %edx,%eax
8100572a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)
8100572d:	7c d0                	jl     810056ff <_printf_i+0x3fe>
8100572f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005732:	8b 50 0c             	mov    0xc(%eax),%edx
81005735:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005738:	39 c2                	cmp    %eax,%edx
8100573a:	0f 4d c2             	cmovge %edx,%eax
8100573d:	eb 0c                	jmp    8100574b <_printf_i+0x44a>
8100573f:	90                   	nop
81005740:	eb 04                	jmp    81005746 <_printf_i+0x445>
81005742:	90                   	nop
81005743:	eb 01                	jmp    81005746 <_printf_i+0x445>
81005745:	90                   	nop
81005746:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100574b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100574e:	c9                   	leave  
8100574f:	c3                   	ret    

81005750 <_open_r>:
81005750:	55                   	push   %ebp
81005751:	89 e5                	mov    %esp,%ebp
81005753:	83 ec 18             	sub    $0x18,%esp
81005756:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100575d:	00 00 00 
81005760:	83 ec 04             	sub    $0x4,%esp
81005763:	ff 75 14             	pushl  0x14(%ebp)
81005766:	ff 75 10             	pushl  0x10(%ebp)
81005769:	ff 75 0c             	pushl  0xc(%ebp)
8100576c:	e8 18 b5 ff ff       	call   81000c89 <open>
81005771:	83 c4 10             	add    $0x10,%esp
81005774:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005777:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100577b:	75 14                	jne    81005791 <_open_r+0x41>
8100577d:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
81005782:	85 c0                	test   %eax,%eax
81005784:	74 0b                	je     81005791 <_open_r+0x41>
81005786:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
8100578c:	8b 45 08             	mov    0x8(%ebp),%eax
8100578f:	89 10                	mov    %edx,(%eax)
81005791:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005794:	c9                   	leave  
81005795:	c3                   	ret    

81005796 <_iprintf_r>:
81005796:	55                   	push   %ebp
81005797:	89 e5                	mov    %esp,%ebp
81005799:	83 ec 18             	sub    $0x18,%esp
8100579c:	8d 45 10             	lea    0x10(%ebp),%eax
8100579f:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057a2:	8b 55 f0             	mov    -0x10(%ebp),%edx
810057a5:	8b 45 08             	mov    0x8(%ebp),%eax
810057a8:	8b 40 08             	mov    0x8(%eax),%eax
810057ab:	52                   	push   %edx
810057ac:	ff 75 0c             	pushl  0xc(%ebp)
810057af:	50                   	push   %eax
810057b0:	ff 75 08             	pushl  0x8(%ebp)
810057b3:	e8 58 f6 ff ff       	call   81004e10 <_vfiprintf_r>
810057b8:	83 c4 10             	add    $0x10,%esp
810057bb:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057be:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057c1:	c9                   	leave  
810057c2:	c3                   	ret    

810057c3 <iprintf>:
810057c3:	55                   	push   %ebp
810057c4:	89 e5                	mov    %esp,%ebp
810057c6:	83 ec 18             	sub    $0x18,%esp
810057c9:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810057ce:	89 45 f4             	mov    %eax,-0xc(%ebp)
810057d1:	8d 45 0c             	lea    0xc(%ebp),%eax
810057d4:	89 45 ec             	mov    %eax,-0x14(%ebp)
810057d7:	8b 55 ec             	mov    -0x14(%ebp),%edx
810057da:	8b 45 f4             	mov    -0xc(%ebp),%eax
810057dd:	8b 40 08             	mov    0x8(%eax),%eax
810057e0:	52                   	push   %edx
810057e1:	ff 75 08             	pushl  0x8(%ebp)
810057e4:	50                   	push   %eax
810057e5:	ff 75 f4             	pushl  -0xc(%ebp)
810057e8:	e8 23 f6 ff ff       	call   81004e10 <_vfiprintf_r>
810057ed:	83 c4 10             	add    $0x10,%esp
810057f0:	89 45 f0             	mov    %eax,-0x10(%ebp)
810057f3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810057f6:	c9                   	leave  
810057f7:	c3                   	ret    

810057f8 <_puts_r>:
810057f8:	55                   	push   %ebp
810057f9:	89 e5                	mov    %esp,%ebp
810057fb:	83 ec 38             	sub    $0x38,%esp
810057fe:	83 ec 0c             	sub    $0xc,%esp
81005801:	ff 75 0c             	pushl  0xc(%ebp)
81005804:	e8 c7 13 00 00       	call   81006bd0 <strlen>
81005809:	83 c4 10             	add    $0x10,%esp
8100580c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100580f:	8b 45 0c             	mov    0xc(%ebp),%eax
81005812:	89 45 cc             	mov    %eax,-0x34(%ebp)
81005815:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005818:	89 45 d0             	mov    %eax,-0x30(%ebp)
8100581b:	c7 45 d4 a4 89 00 81 	movl   $0x810089a4,-0x2c(%ebp)
81005822:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)
81005829:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100582c:	83 c0 01             	add    $0x1,%eax
8100582f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005832:	8d 45 cc             	lea    -0x34(%ebp),%eax
81005835:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005838:	c7 45 e0 02 00 00 00 	movl   $0x2,-0x20(%ebp)
8100583f:	8b 45 08             	mov    0x8(%ebp),%eax
81005842:	8b 40 08             	mov    0x8(%eax),%eax
81005845:	89 45 f0             	mov    %eax,-0x10(%ebp)
81005848:	8b 45 08             	mov    0x8(%ebp),%eax
8100584b:	89 45 ec             	mov    %eax,-0x14(%ebp)
8100584e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005852:	74 18                	je     8100586c <_puts_r+0x74>
81005854:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005857:	8b 40 38             	mov    0x38(%eax),%eax
8100585a:	85 c0                	test   %eax,%eax
8100585c:	75 0e                	jne    8100586c <_puts_r+0x74>
8100585e:	83 ec 0c             	sub    $0xc,%esp
81005861:	ff 75 ec             	pushl  -0x14(%ebp)
81005864:	e8 5b c0 ff ff       	call   810018c4 <__sinit>
81005869:	83 c4 10             	add    $0x10,%esp
8100586c:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100586f:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005873:	98                   	cwtl   
81005874:	25 00 20 00 00       	and    $0x2000,%eax
81005879:	85 c0                	test   %eax,%eax
8100587b:	75 24                	jne    810058a1 <_puts_r+0xa9>
8100587d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005880:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81005884:	80 cc 20             	or     $0x20,%ah
81005887:	89 c2                	mov    %eax,%edx
81005889:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100588c:	66 89 50 0c          	mov    %dx,0xc(%eax)
81005890:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005893:	8b 40 64             	mov    0x64(%eax),%eax
81005896:	80 e4 df             	and    $0xdf,%ah
81005899:	89 c2                	mov    %eax,%edx
8100589b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100589e:	89 50 64             	mov    %edx,0x64(%eax)
810058a1:	83 ec 04             	sub    $0x4,%esp
810058a4:	8d 45 dc             	lea    -0x24(%ebp),%eax
810058a7:	50                   	push   %eax
810058a8:	ff 75 f0             	pushl  -0x10(%ebp)
810058ab:	ff 75 08             	pushl  0x8(%ebp)
810058ae:	e8 53 d0 ff ff       	call   81002906 <__sfvwrite_r>
810058b3:	83 c4 10             	add    $0x10,%esp
810058b6:	85 c0                	test   %eax,%eax
810058b8:	74 07                	je     810058c1 <_puts_r+0xc9>
810058ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810058bf:	eb 05                	jmp    810058c6 <_puts_r+0xce>
810058c1:	b8 0a 00 00 00       	mov    $0xa,%eax
810058c6:	89 45 e8             	mov    %eax,-0x18(%ebp)
810058c9:	8b 45 e8             	mov    -0x18(%ebp),%eax
810058cc:	c9                   	leave  
810058cd:	c3                   	ret    

810058ce <puts>:
810058ce:	55                   	push   %ebp
810058cf:	89 e5                	mov    %esp,%ebp
810058d1:	83 ec 08             	sub    $0x8,%esp
810058d4:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810058d9:	83 ec 08             	sub    $0x8,%esp
810058dc:	ff 75 08             	pushl  0x8(%ebp)
810058df:	50                   	push   %eax
810058e0:	e8 13 ff ff ff       	call   810057f8 <_puts_r>
810058e5:	83 c4 10             	add    $0x10,%esp
810058e8:	c9                   	leave  
810058e9:	c3                   	ret    

810058ea <_realloc_r>:
810058ea:	55                   	push   %ebp
810058eb:	89 e5                	mov    %esp,%ebp
810058ed:	83 ec 78             	sub    $0x78,%esp
810058f0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810058f4:	75 16                	jne    8100590c <_realloc_r+0x22>
810058f6:	83 ec 08             	sub    $0x8,%esp
810058f9:	ff 75 10             	pushl  0x10(%ebp)
810058fc:	ff 75 08             	pushl  0x8(%ebp)
810058ff:	e8 8a e8 ff ff       	call   8100418e <_malloc_r>
81005904:	83 c4 10             	add    $0x10,%esp
81005907:	e9 b6 08 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
8100590c:	83 ec 0c             	sub    $0xc,%esp
8100590f:	ff 75 08             	pushl  0x8(%ebp)
81005912:	e8 de f2 ff ff       	call   81004bf5 <__malloc_lock>
81005917:	83 c4 10             	add    $0x10,%esp
8100591a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100591d:	83 e8 08             	sub    $0x8,%eax
81005920:	89 45 c4             	mov    %eax,-0x3c(%ebp)
81005923:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005926:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005929:	8b 45 c4             	mov    -0x3c(%ebp),%eax
8100592c:	8b 40 04             	mov    0x4(%eax),%eax
8100592f:	83 e0 fc             	and    $0xfffffffc,%eax
81005932:	89 45 c0             	mov    %eax,-0x40(%ebp)
81005935:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005938:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100593b:	8b 45 10             	mov    0x10(%ebp),%eax
8100593e:	83 c0 0b             	add    $0xb,%eax
81005941:	83 f8 16             	cmp    $0x16,%eax
81005944:	76 0b                	jbe    81005951 <_realloc_r+0x67>
81005946:	8b 45 10             	mov    0x10(%ebp),%eax
81005949:	83 c0 0b             	add    $0xb,%eax
8100594c:	83 e0 f8             	and    $0xfffffff8,%eax
8100594f:	eb 05                	jmp    81005956 <_realloc_r+0x6c>
81005951:	b8 10 00 00 00       	mov    $0x10,%eax
81005956:	89 45 bc             	mov    %eax,-0x44(%ebp)
81005959:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100595c:	85 c0                	test   %eax,%eax
8100595e:	78 08                	js     81005968 <_realloc_r+0x7e>
81005960:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005963:	3b 45 10             	cmp    0x10(%ebp),%eax
81005966:	73 13                	jae    8100597b <_realloc_r+0x91>
81005968:	8b 45 08             	mov    0x8(%ebp),%eax
8100596b:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81005971:	b8 00 00 00 00       	mov    $0x0,%eax
81005976:	e9 47 08 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
8100597b:	8b 55 c0             	mov    -0x40(%ebp),%edx
8100597e:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005981:	39 c2                	cmp    %eax,%edx
81005983:	0f 8d 8b 07 00 00    	jge    81006114 <_realloc_r+0x82a>
81005989:	8b 55 c4             	mov    -0x3c(%ebp),%edx
8100598c:	8b 45 c0             	mov    -0x40(%ebp),%eax
8100598f:	01 d0                	add    %edx,%eax
81005991:	89 45 ec             	mov    %eax,-0x14(%ebp)
81005994:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005999:	8b 40 08             	mov    0x8(%eax),%eax
8100599c:	39 45 ec             	cmp    %eax,-0x14(%ebp)
8100599f:	74 1e                	je     810059bf <_realloc_r+0xd5>
810059a1:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059a4:	8b 40 04             	mov    0x4(%eax),%eax
810059a7:	83 e0 fe             	and    $0xfffffffe,%eax
810059aa:	89 c2                	mov    %eax,%edx
810059ac:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059af:	01 d0                	add    %edx,%eax
810059b1:	8b 40 04             	mov    0x4(%eax),%eax
810059b4:	83 e0 01             	and    $0x1,%eax
810059b7:	85 c0                	test   %eax,%eax
810059b9:	0f 85 ca 00 00 00    	jne    81005a89 <_realloc_r+0x19f>
810059bf:	8b 45 ec             	mov    -0x14(%ebp),%eax
810059c2:	8b 40 04             	mov    0x4(%eax),%eax
810059c5:	83 e0 fc             	and    $0xfffffffc,%eax
810059c8:	89 45 e8             	mov    %eax,-0x18(%ebp)
810059cb:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
810059d0:	8b 40 08             	mov    0x8(%eax),%eax
810059d3:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810059d6:	75 71                	jne    81005a49 <_realloc_r+0x15f>
810059d8:	8b 55 e8             	mov    -0x18(%ebp),%edx
810059db:	8b 45 f0             	mov    -0x10(%ebp),%eax
810059de:	01 d0                	add    %edx,%eax
810059e0:	89 c2                	mov    %eax,%edx
810059e2:	8b 45 bc             	mov    -0x44(%ebp),%eax
810059e5:	83 c0 10             	add    $0x10,%eax
810059e8:	39 c2                	cmp    %eax,%edx
810059ea:	0f 8c a9 00 00 00    	jl     81005a99 <_realloc_r+0x1af>
810059f0:	8b 45 e8             	mov    -0x18(%ebp),%eax
810059f3:	01 45 f0             	add    %eax,-0x10(%ebp)
810059f6:	ba c0 90 00 81       	mov    $0x810090c0,%edx
810059fb:	8b 4d c4             	mov    -0x3c(%ebp),%ecx
810059fe:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a01:	01 c8                	add    %ecx,%eax
81005a03:	89 42 08             	mov    %eax,0x8(%edx)
81005a06:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a09:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005a0c:	89 c2                	mov    %eax,%edx
81005a0e:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005a13:	8b 40 08             	mov    0x8(%eax),%eax
81005a16:	83 ca 01             	or     $0x1,%edx
81005a19:	89 50 04             	mov    %edx,0x4(%eax)
81005a1c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a1f:	8b 40 04             	mov    0x4(%eax),%eax
81005a22:	83 e0 01             	and    $0x1,%eax
81005a25:	0b 45 bc             	or     -0x44(%ebp),%eax
81005a28:	89 c2                	mov    %eax,%edx
81005a2a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a2d:	89 50 04             	mov    %edx,0x4(%eax)
81005a30:	83 ec 0c             	sub    $0xc,%esp
81005a33:	ff 75 08             	pushl  0x8(%ebp)
81005a36:	e8 c0 f1 ff ff       	call   81004bfb <__malloc_unlock>
81005a3b:	83 c4 10             	add    $0x10,%esp
81005a3e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a41:	83 c0 08             	add    $0x8,%eax
81005a44:	e9 79 07 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
81005a49:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005a4c:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005a4f:	01 d0                	add    %edx,%eax
81005a51:	89 c2                	mov    %eax,%edx
81005a53:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005a56:	39 c2                	cmp    %eax,%edx
81005a58:	7c 3f                	jl     81005a99 <_realloc_r+0x1af>
81005a5a:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a5d:	8b 40 0c             	mov    0xc(%eax),%eax
81005a60:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005a63:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005a66:	8b 40 08             	mov    0x8(%eax),%eax
81005a69:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005a6c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005a6f:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005a72:	89 50 0c             	mov    %edx,0xc(%eax)
81005a75:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005a78:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005a7b:	89 50 08             	mov    %edx,0x8(%eax)
81005a7e:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005a81:	01 45 f0             	add    %eax,-0x10(%ebp)
81005a84:	e9 8c 06 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005a89:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
81005a90:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)
81005a97:	eb 01                	jmp    81005a9a <_realloc_r+0x1b0>
81005a99:	90                   	nop
81005a9a:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005a9d:	8b 40 04             	mov    0x4(%eax),%eax
81005aa0:	83 e0 01             	and    $0x1,%eax
81005aa3:	85 c0                	test   %eax,%eax
81005aa5:	0f 85 d6 04 00 00    	jne    81005f81 <_realloc_r+0x697>
81005aab:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005aae:	8b 00                	mov    (%eax),%eax
81005ab0:	f7 d8                	neg    %eax
81005ab2:	89 c2                	mov    %eax,%edx
81005ab4:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005ab7:	01 d0                	add    %edx,%eax
81005ab9:	89 45 b0             	mov    %eax,-0x50(%ebp)
81005abc:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005abf:	8b 40 04             	mov    0x4(%eax),%eax
81005ac2:	83 e0 fc             	and    $0xfffffffc,%eax
81005ac5:	89 45 ac             	mov    %eax,-0x54(%ebp)
81005ac8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
81005acc:	0f 84 4a 03 00 00    	je     81005e1c <_realloc_r+0x532>
81005ad2:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005ad7:	8b 40 08             	mov    0x8(%eax),%eax
81005ada:	39 45 ec             	cmp    %eax,-0x14(%ebp)
81005add:	0f 85 b0 01 00 00    	jne    81005c93 <_realloc_r+0x3a9>
81005ae3:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005ae6:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005ae9:	01 c2                	add    %eax,%edx
81005aeb:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005aee:	01 d0                	add    %edx,%eax
81005af0:	89 c2                	mov    %eax,%edx
81005af2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005af5:	83 c0 10             	add    $0x10,%eax
81005af8:	39 c2                	cmp    %eax,%edx
81005afa:	0f 8c 1c 03 00 00    	jl     81005e1c <_realloc_r+0x532>
81005b00:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b03:	8b 40 0c             	mov    0xc(%eax),%eax
81005b06:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005b09:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b0c:	8b 40 08             	mov    0x8(%eax),%eax
81005b0f:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005b12:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005b15:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005b18:	89 50 0c             	mov    %edx,0xc(%eax)
81005b1b:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005b1e:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005b21:	89 50 08             	mov    %edx,0x8(%eax)
81005b24:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005b27:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005b2a:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005b2d:	8b 45 e8             	mov    -0x18(%ebp),%eax
81005b30:	01 d0                	add    %edx,%eax
81005b32:	01 45 f0             	add    %eax,-0x10(%ebp)
81005b35:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005b38:	83 c0 08             	add    $0x8,%eax
81005b3b:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005b3e:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005b41:	83 e8 04             	sub    $0x4,%eax
81005b44:	89 45 a0             	mov    %eax,-0x60(%ebp)
81005b47:	83 7d a0 24          	cmpl   $0x24,-0x60(%ebp)
81005b4b:	0f 87 de 00 00 00    	ja     81005c2f <_realloc_r+0x345>
81005b51:	8b 45 0c             	mov    0xc(%ebp),%eax
81005b54:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b57:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005b5a:	89 45 e0             	mov    %eax,-0x20(%ebp)
81005b5d:	83 7d a0 13          	cmpl   $0x13,-0x60(%ebp)
81005b61:	0f 86 90 00 00 00    	jbe    81005bf7 <_realloc_r+0x30d>
81005b67:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b6a:	8d 42 04             	lea    0x4(%edx),%eax
81005b6d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b70:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b73:	8d 48 04             	lea    0x4(%eax),%ecx
81005b76:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b79:	8b 12                	mov    (%edx),%edx
81005b7b:	89 10                	mov    %edx,(%eax)
81005b7d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b80:	8d 42 04             	lea    0x4(%edx),%eax
81005b83:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005b86:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005b89:	8d 48 04             	lea    0x4(%eax),%ecx
81005b8c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005b8f:	8b 12                	mov    (%edx),%edx
81005b91:	89 10                	mov    %edx,(%eax)
81005b93:	83 7d a0 1b          	cmpl   $0x1b,-0x60(%ebp)
81005b97:	76 5e                	jbe    81005bf7 <_realloc_r+0x30d>
81005b99:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005b9c:	8d 42 04             	lea    0x4(%edx),%eax
81005b9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005ba2:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005ba5:	8d 48 04             	lea    0x4(%eax),%ecx
81005ba8:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bab:	8b 12                	mov    (%edx),%edx
81005bad:	89 10                	mov    %edx,(%eax)
81005baf:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bb2:	8d 42 04             	lea    0x4(%edx),%eax
81005bb5:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bb8:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bbb:	8d 48 04             	lea    0x4(%eax),%ecx
81005bbe:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bc1:	8b 12                	mov    (%edx),%edx
81005bc3:	89 10                	mov    %edx,(%eax)
81005bc5:	83 7d a0 23          	cmpl   $0x23,-0x60(%ebp)
81005bc9:	76 2c                	jbe    81005bf7 <_realloc_r+0x30d>
81005bcb:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bce:	8d 42 04             	lea    0x4(%edx),%eax
81005bd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bd4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bd7:	8d 48 04             	lea    0x4(%eax),%ecx
81005bda:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bdd:	8b 12                	mov    (%edx),%edx
81005bdf:	89 10                	mov    %edx,(%eax)
81005be1:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005be4:	8d 42 04             	lea    0x4(%edx),%eax
81005be7:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005bea:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005bed:	8d 48 04             	lea    0x4(%eax),%ecx
81005bf0:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005bf3:	8b 12                	mov    (%edx),%edx
81005bf5:	89 10                	mov    %edx,(%eax)
81005bf7:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005bfa:	8d 42 04             	lea    0x4(%edx),%eax
81005bfd:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c00:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c03:	8d 48 04             	lea    0x4(%eax),%ecx
81005c06:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c09:	8b 12                	mov    (%edx),%edx
81005c0b:	89 10                	mov    %edx,(%eax)
81005c0d:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81005c10:	8d 42 04             	lea    0x4(%edx),%eax
81005c13:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81005c16:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c19:	8d 48 04             	lea    0x4(%eax),%ecx
81005c1c:	89 4d e0             	mov    %ecx,-0x20(%ebp)
81005c1f:	8b 12                	mov    (%edx),%edx
81005c21:	89 10                	mov    %edx,(%eax)
81005c23:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81005c26:	8b 10                	mov    (%eax),%edx
81005c28:	8b 45 e0             	mov    -0x20(%ebp),%eax
81005c2b:	89 10                	mov    %edx,(%eax)
81005c2d:	eb 14                	jmp    81005c43 <_realloc_r+0x359>
81005c2f:	83 ec 04             	sub    $0x4,%esp
81005c32:	ff 75 a0             	pushl  -0x60(%ebp)
81005c35:	ff 75 0c             	pushl  0xc(%ebp)
81005c38:	ff 75 a8             	pushl  -0x58(%ebp)
81005c3b:	e8 a0 ee ff ff       	call   81004ae0 <memmove>
81005c40:	83 c4 10             	add    $0x10,%esp
81005c43:	ba c0 90 00 81       	mov    $0x810090c0,%edx
81005c48:	8b 4d f4             	mov    -0xc(%ebp),%ecx
81005c4b:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005c4e:	01 c8                	add    %ecx,%eax
81005c50:	89 42 08             	mov    %eax,0x8(%edx)
81005c53:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c56:	2b 45 bc             	sub    -0x44(%ebp),%eax
81005c59:	89 c2                	mov    %eax,%edx
81005c5b:	b8 c0 90 00 81       	mov    $0x810090c0,%eax
81005c60:	8b 40 08             	mov    0x8(%eax),%eax
81005c63:	83 ca 01             	or     $0x1,%edx
81005c66:	89 50 04             	mov    %edx,0x4(%eax)
81005c69:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c6c:	8b 40 04             	mov    0x4(%eax),%eax
81005c6f:	83 e0 01             	and    $0x1,%eax
81005c72:	0b 45 bc             	or     -0x44(%ebp),%eax
81005c75:	89 c2                	mov    %eax,%edx
81005c77:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005c7a:	89 50 04             	mov    %edx,0x4(%eax)
81005c7d:	83 ec 0c             	sub    $0xc,%esp
81005c80:	ff 75 08             	pushl  0x8(%ebp)
81005c83:	e8 73 ef ff ff       	call   81004bfb <__malloc_unlock>
81005c88:	83 c4 10             	add    $0x10,%esp
81005c8b:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005c8e:	e9 2f 05 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
81005c93:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005c96:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005c99:	01 c2                	add    %eax,%edx
81005c9b:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005c9e:	01 d0                	add    %edx,%eax
81005ca0:	89 c2                	mov    %eax,%edx
81005ca2:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005ca5:	39 c2                	cmp    %eax,%edx
81005ca7:	0f 8c 6f 01 00 00    	jl     81005e1c <_realloc_r+0x532>
81005cad:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cb0:	8b 40 0c             	mov    0xc(%eax),%eax
81005cb3:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cb6:	8b 45 ec             	mov    -0x14(%ebp),%eax
81005cb9:	8b 40 08             	mov    0x8(%eax),%eax
81005cbc:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005cbf:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005cc2:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005cc5:	89 50 0c             	mov    %edx,0xc(%eax)
81005cc8:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005ccb:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005cce:	89 50 08             	mov    %edx,0x8(%eax)
81005cd1:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cd4:	8b 40 0c             	mov    0xc(%eax),%eax
81005cd7:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005cda:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cdd:	8b 40 08             	mov    0x8(%eax),%eax
81005ce0:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005ce3:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005ce6:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005ce9:	89 50 0c             	mov    %edx,0xc(%eax)
81005cec:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005cef:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005cf2:	89 50 08             	mov    %edx,0x8(%eax)
81005cf5:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005cf8:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005cfb:	8b 55 e8             	mov    -0x18(%ebp),%edx
81005cfe:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005d01:	01 d0                	add    %edx,%eax
81005d03:	01 45 f0             	add    %eax,-0x10(%ebp)
81005d06:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005d09:	83 c0 08             	add    $0x8,%eax
81005d0c:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005d0f:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005d12:	83 e8 04             	sub    $0x4,%eax
81005d15:	89 45 a4             	mov    %eax,-0x5c(%ebp)
81005d18:	83 7d a4 24          	cmpl   $0x24,-0x5c(%ebp)
81005d1c:	0f 87 e1 00 00 00    	ja     81005e03 <_realloc_r+0x519>
81005d22:	8b 45 0c             	mov    0xc(%ebp),%eax
81005d25:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d28:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005d2b:	89 45 d8             	mov    %eax,-0x28(%ebp)
81005d2e:	83 7d a4 13          	cmpl   $0x13,-0x5c(%ebp)
81005d32:	0f 86 90 00 00 00    	jbe    81005dc8 <_realloc_r+0x4de>
81005d38:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d3b:	8d 42 04             	lea    0x4(%edx),%eax
81005d3e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d41:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d44:	8d 48 04             	lea    0x4(%eax),%ecx
81005d47:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d4a:	8b 12                	mov    (%edx),%edx
81005d4c:	89 10                	mov    %edx,(%eax)
81005d4e:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d51:	8d 42 04             	lea    0x4(%edx),%eax
81005d54:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d57:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d5a:	8d 48 04             	lea    0x4(%eax),%ecx
81005d5d:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d60:	8b 12                	mov    (%edx),%edx
81005d62:	89 10                	mov    %edx,(%eax)
81005d64:	83 7d a4 1b          	cmpl   $0x1b,-0x5c(%ebp)
81005d68:	76 5e                	jbe    81005dc8 <_realloc_r+0x4de>
81005d6a:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d6d:	8d 42 04             	lea    0x4(%edx),%eax
81005d70:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d73:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d76:	8d 48 04             	lea    0x4(%eax),%ecx
81005d79:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d7c:	8b 12                	mov    (%edx),%edx
81005d7e:	89 10                	mov    %edx,(%eax)
81005d80:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d83:	8d 42 04             	lea    0x4(%edx),%eax
81005d86:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005d89:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005d8c:	8d 48 04             	lea    0x4(%eax),%ecx
81005d8f:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005d92:	8b 12                	mov    (%edx),%edx
81005d94:	89 10                	mov    %edx,(%eax)
81005d96:	83 7d a4 23          	cmpl   $0x23,-0x5c(%ebp)
81005d9a:	76 2c                	jbe    81005dc8 <_realloc_r+0x4de>
81005d9c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005d9f:	8d 42 04             	lea    0x4(%edx),%eax
81005da2:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005da5:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005da8:	8d 48 04             	lea    0x4(%eax),%ecx
81005dab:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dae:	8b 12                	mov    (%edx),%edx
81005db0:	89 10                	mov    %edx,(%eax)
81005db2:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005db5:	8d 42 04             	lea    0x4(%edx),%eax
81005db8:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dbb:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dbe:	8d 48 04             	lea    0x4(%eax),%ecx
81005dc1:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dc4:	8b 12                	mov    (%edx),%edx
81005dc6:	89 10                	mov    %edx,(%eax)
81005dc8:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005dcb:	8d 42 04             	lea    0x4(%edx),%eax
81005dce:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005dd1:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dd4:	8d 48 04             	lea    0x4(%eax),%ecx
81005dd7:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005dda:	8b 12                	mov    (%edx),%edx
81005ddc:	89 10                	mov    %edx,(%eax)
81005dde:	8b 55 dc             	mov    -0x24(%ebp),%edx
81005de1:	8d 42 04             	lea    0x4(%edx),%eax
81005de4:	89 45 dc             	mov    %eax,-0x24(%ebp)
81005de7:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dea:	8d 48 04             	lea    0x4(%eax),%ecx
81005ded:	89 4d d8             	mov    %ecx,-0x28(%ebp)
81005df0:	8b 12                	mov    (%edx),%edx
81005df2:	89 10                	mov    %edx,(%eax)
81005df4:	8b 45 dc             	mov    -0x24(%ebp),%eax
81005df7:	8b 10                	mov    (%eax),%edx
81005df9:	8b 45 d8             	mov    -0x28(%ebp),%eax
81005dfc:	89 10                	mov    %edx,(%eax)
81005dfe:	e9 12 03 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005e03:	83 ec 04             	sub    $0x4,%esp
81005e06:	ff 75 a4             	pushl  -0x5c(%ebp)
81005e09:	ff 75 0c             	pushl  0xc(%ebp)
81005e0c:	ff 75 a8             	pushl  -0x58(%ebp)
81005e0f:	e8 cc ec ff ff       	call   81004ae0 <memmove>
81005e14:	83 c4 10             	add    $0x10,%esp
81005e17:	e9 f9 02 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005e1c:	83 7d b0 00          	cmpl   $0x0,-0x50(%ebp)
81005e20:	0f 84 5b 01 00 00    	je     81005f81 <_realloc_r+0x697>
81005e26:	8b 55 ac             	mov    -0x54(%ebp),%edx
81005e29:	8b 45 f0             	mov    -0x10(%ebp),%eax
81005e2c:	01 d0                	add    %edx,%eax
81005e2e:	89 c2                	mov    %eax,%edx
81005e30:	8b 45 bc             	mov    -0x44(%ebp),%eax
81005e33:	39 c2                	cmp    %eax,%edx
81005e35:	0f 8c 46 01 00 00    	jl     81005f81 <_realloc_r+0x697>
81005e3b:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e3e:	8b 40 0c             	mov    0xc(%eax),%eax
81005e41:	89 45 b8             	mov    %eax,-0x48(%ebp)
81005e44:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e47:	8b 40 08             	mov    0x8(%eax),%eax
81005e4a:	89 45 b4             	mov    %eax,-0x4c(%ebp)
81005e4d:	8b 45 b4             	mov    -0x4c(%ebp),%eax
81005e50:	8b 55 b8             	mov    -0x48(%ebp),%edx
81005e53:	89 50 0c             	mov    %edx,0xc(%eax)
81005e56:	8b 45 b8             	mov    -0x48(%ebp),%eax
81005e59:	8b 55 b4             	mov    -0x4c(%ebp),%edx
81005e5c:	89 50 08             	mov    %edx,0x8(%eax)
81005e5f:	8b 45 b0             	mov    -0x50(%ebp),%eax
81005e62:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005e65:	8b 45 ac             	mov    -0x54(%ebp),%eax
81005e68:	01 45 f0             	add    %eax,-0x10(%ebp)
81005e6b:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005e6e:	83 c0 08             	add    $0x8,%eax
81005e71:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005e74:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005e77:	83 e8 04             	sub    $0x4,%eax
81005e7a:	89 45 9c             	mov    %eax,-0x64(%ebp)
81005e7d:	83 7d 9c 24          	cmpl   $0x24,-0x64(%ebp)
81005e81:	0f 87 e1 00 00 00    	ja     81005f68 <_realloc_r+0x67e>
81005e87:	8b 45 0c             	mov    0xc(%ebp),%eax
81005e8a:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005e8d:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005e90:	89 45 d0             	mov    %eax,-0x30(%ebp)
81005e93:	83 7d 9c 13          	cmpl   $0x13,-0x64(%ebp)
81005e97:	0f 86 90 00 00 00    	jbe    81005f2d <_realloc_r+0x643>
81005e9d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ea0:	8d 42 04             	lea    0x4(%edx),%eax
81005ea3:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ea6:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ea9:	8d 48 04             	lea    0x4(%eax),%ecx
81005eac:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005eaf:	8b 12                	mov    (%edx),%edx
81005eb1:	89 10                	mov    %edx,(%eax)
81005eb3:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005eb6:	8d 42 04             	lea    0x4(%edx),%eax
81005eb9:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ebc:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ebf:	8d 48 04             	lea    0x4(%eax),%ecx
81005ec2:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ec5:	8b 12                	mov    (%edx),%edx
81005ec7:	89 10                	mov    %edx,(%eax)
81005ec9:	83 7d 9c 1b          	cmpl   $0x1b,-0x64(%ebp)
81005ecd:	76 5e                	jbe    81005f2d <_realloc_r+0x643>
81005ecf:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ed2:	8d 42 04             	lea    0x4(%edx),%eax
81005ed5:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005ed8:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005edb:	8d 48 04             	lea    0x4(%eax),%ecx
81005ede:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ee1:	8b 12                	mov    (%edx),%edx
81005ee3:	89 10                	mov    %edx,(%eax)
81005ee5:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005ee8:	8d 42 04             	lea    0x4(%edx),%eax
81005eeb:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005eee:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005ef1:	8d 48 04             	lea    0x4(%eax),%ecx
81005ef4:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005ef7:	8b 12                	mov    (%edx),%edx
81005ef9:	89 10                	mov    %edx,(%eax)
81005efb:	83 7d 9c 23          	cmpl   $0x23,-0x64(%ebp)
81005eff:	76 2c                	jbe    81005f2d <_realloc_r+0x643>
81005f01:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f04:	8d 42 04             	lea    0x4(%edx),%eax
81005f07:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f0a:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f0d:	8d 48 04             	lea    0x4(%eax),%ecx
81005f10:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f13:	8b 12                	mov    (%edx),%edx
81005f15:	89 10                	mov    %edx,(%eax)
81005f17:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f1a:	8d 42 04             	lea    0x4(%edx),%eax
81005f1d:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f20:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f23:	8d 48 04             	lea    0x4(%eax),%ecx
81005f26:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f29:	8b 12                	mov    (%edx),%edx
81005f2b:	89 10                	mov    %edx,(%eax)
81005f2d:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f30:	8d 42 04             	lea    0x4(%edx),%eax
81005f33:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f36:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f39:	8d 48 04             	lea    0x4(%eax),%ecx
81005f3c:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f3f:	8b 12                	mov    (%edx),%edx
81005f41:	89 10                	mov    %edx,(%eax)
81005f43:	8b 55 d4             	mov    -0x2c(%ebp),%edx
81005f46:	8d 42 04             	lea    0x4(%edx),%eax
81005f49:	89 45 d4             	mov    %eax,-0x2c(%ebp)
81005f4c:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f4f:	8d 48 04             	lea    0x4(%eax),%ecx
81005f52:	89 4d d0             	mov    %ecx,-0x30(%ebp)
81005f55:	8b 12                	mov    (%edx),%edx
81005f57:	89 10                	mov    %edx,(%eax)
81005f59:	8b 45 d4             	mov    -0x2c(%ebp),%eax
81005f5c:	8b 10                	mov    (%eax),%edx
81005f5e:	8b 45 d0             	mov    -0x30(%ebp),%eax
81005f61:	89 10                	mov    %edx,(%eax)
81005f63:	e9 ad 01 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005f68:	83 ec 04             	sub    $0x4,%esp
81005f6b:	ff 75 9c             	pushl  -0x64(%ebp)
81005f6e:	ff 75 0c             	pushl  0xc(%ebp)
81005f71:	ff 75 a8             	pushl  -0x58(%ebp)
81005f74:	e8 67 eb ff ff       	call   81004ae0 <memmove>
81005f79:	83 c4 10             	add    $0x10,%esp
81005f7c:	e9 94 01 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005f81:	83 ec 08             	sub    $0x8,%esp
81005f84:	ff 75 10             	pushl  0x10(%ebp)
81005f87:	ff 75 08             	pushl  0x8(%ebp)
81005f8a:	e8 ff e1 ff ff       	call   8100418e <_malloc_r>
81005f8f:	83 c4 10             	add    $0x10,%esp
81005f92:	89 45 a8             	mov    %eax,-0x58(%ebp)
81005f95:	83 7d a8 00          	cmpl   $0x0,-0x58(%ebp)
81005f99:	75 18                	jne    81005fb3 <_realloc_r+0x6c9>
81005f9b:	83 ec 0c             	sub    $0xc,%esp
81005f9e:	ff 75 08             	pushl  0x8(%ebp)
81005fa1:	e8 55 ec ff ff       	call   81004bfb <__malloc_unlock>
81005fa6:	83 c4 10             	add    $0x10,%esp
81005fa9:	b8 00 00 00 00       	mov    $0x0,%eax
81005fae:	e9 0f 02 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
81005fb3:	8b 45 a8             	mov    -0x58(%ebp),%eax
81005fb6:	83 e8 08             	sub    $0x8,%eax
81005fb9:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fbc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fbf:	8b 40 04             	mov    0x4(%eax),%eax
81005fc2:	83 e0 fe             	and    $0xfffffffe,%eax
81005fc5:	89 c2                	mov    %eax,%edx
81005fc7:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fca:	01 d0                	add    %edx,%eax
81005fcc:	39 45 f4             	cmp    %eax,-0xc(%ebp)
81005fcf:	75 17                	jne    81005fe8 <_realloc_r+0x6fe>
81005fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax
81005fd4:	8b 40 04             	mov    0x4(%eax),%eax
81005fd7:	83 e0 fc             	and    $0xfffffffc,%eax
81005fda:	01 45 f0             	add    %eax,-0x10(%ebp)
81005fdd:	8b 45 c4             	mov    -0x3c(%ebp),%eax
81005fe0:	89 45 f4             	mov    %eax,-0xc(%ebp)
81005fe3:	e9 2d 01 00 00       	jmp    81006115 <_realloc_r+0x82b>
81005fe8:	8b 45 c0             	mov    -0x40(%ebp),%eax
81005feb:	83 e8 04             	sub    $0x4,%eax
81005fee:	89 45 98             	mov    %eax,-0x68(%ebp)
81005ff1:	83 7d 98 24          	cmpl   $0x24,-0x68(%ebp)
81005ff5:	0f 87 de 00 00 00    	ja     810060d9 <_realloc_r+0x7ef>
81005ffb:	8b 45 0c             	mov    0xc(%ebp),%eax
81005ffe:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006001:	8b 45 a8             	mov    -0x58(%ebp),%eax
81006004:	89 45 c8             	mov    %eax,-0x38(%ebp)
81006007:	83 7d 98 13          	cmpl   $0x13,-0x68(%ebp)
8100600b:	0f 86 90 00 00 00    	jbe    810060a1 <_realloc_r+0x7b7>
81006011:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006014:	8d 42 04             	lea    0x4(%edx),%eax
81006017:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100601a:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100601d:	8d 48 04             	lea    0x4(%eax),%ecx
81006020:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006023:	8b 12                	mov    (%edx),%edx
81006025:	89 10                	mov    %edx,(%eax)
81006027:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100602a:	8d 42 04             	lea    0x4(%edx),%eax
8100602d:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006030:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006033:	8d 48 04             	lea    0x4(%eax),%ecx
81006036:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006039:	8b 12                	mov    (%edx),%edx
8100603b:	89 10                	mov    %edx,(%eax)
8100603d:	83 7d 98 1b          	cmpl   $0x1b,-0x68(%ebp)
81006041:	76 5e                	jbe    810060a1 <_realloc_r+0x7b7>
81006043:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006046:	8d 42 04             	lea    0x4(%edx),%eax
81006049:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100604c:	8b 45 c8             	mov    -0x38(%ebp),%eax
8100604f:	8d 48 04             	lea    0x4(%eax),%ecx
81006052:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006055:	8b 12                	mov    (%edx),%edx
81006057:	89 10                	mov    %edx,(%eax)
81006059:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100605c:	8d 42 04             	lea    0x4(%edx),%eax
8100605f:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006062:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006065:	8d 48 04             	lea    0x4(%eax),%ecx
81006068:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100606b:	8b 12                	mov    (%edx),%edx
8100606d:	89 10                	mov    %edx,(%eax)
8100606f:	83 7d 98 23          	cmpl   $0x23,-0x68(%ebp)
81006073:	76 2c                	jbe    810060a1 <_realloc_r+0x7b7>
81006075:	8b 55 cc             	mov    -0x34(%ebp),%edx
81006078:	8d 42 04             	lea    0x4(%edx),%eax
8100607b:	89 45 cc             	mov    %eax,-0x34(%ebp)
8100607e:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006081:	8d 48 04             	lea    0x4(%eax),%ecx
81006084:	89 4d c8             	mov    %ecx,-0x38(%ebp)
81006087:	8b 12                	mov    (%edx),%edx
81006089:	89 10                	mov    %edx,(%eax)
8100608b:	8b 55 cc             	mov    -0x34(%ebp),%edx
8100608e:	8d 42 04             	lea    0x4(%edx),%eax
81006091:	89 45 cc             	mov    %eax,-0x34(%ebp)
81006094:	8b 45 c8             	mov    -0x38(%ebp),%eax
81006097:	8d 48 04             	lea    0x4(%eax),%ecx
8100609a:	89 4d c8             	mov    %ecx,-0x38(%ebp)
8100609d:	8b 12                	mov    (%edx),%edx
8100609f:	89 10                	mov    %edx,(%eax)
810060a1:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060a4:	8d 42 04             	lea    0x4(%edx),%eax
810060a7:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060aa:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060ad:	8d 48 04             	lea    0x4(%eax),%ecx
810060b0:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060b3:	8b 12                	mov    (%edx),%edx
810060b5:	89 10                	mov    %edx,(%eax)
810060b7:	8b 55 cc             	mov    -0x34(%ebp),%edx
810060ba:	8d 42 04             	lea    0x4(%edx),%eax
810060bd:	89 45 cc             	mov    %eax,-0x34(%ebp)
810060c0:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060c3:	8d 48 04             	lea    0x4(%eax),%ecx
810060c6:	89 4d c8             	mov    %ecx,-0x38(%ebp)
810060c9:	8b 12                	mov    (%edx),%edx
810060cb:	89 10                	mov    %edx,(%eax)
810060cd:	8b 45 cc             	mov    -0x34(%ebp),%eax
810060d0:	8b 10                	mov    (%eax),%edx
810060d2:	8b 45 c8             	mov    -0x38(%ebp),%eax
810060d5:	89 10                	mov    %edx,(%eax)
810060d7:	eb 14                	jmp    810060ed <_realloc_r+0x803>
810060d9:	83 ec 04             	sub    $0x4,%esp
810060dc:	ff 75 98             	pushl  -0x68(%ebp)
810060df:	ff 75 0c             	pushl  0xc(%ebp)
810060e2:	ff 75 a8             	pushl  -0x58(%ebp)
810060e5:	e8 f6 e9 ff ff       	call   81004ae0 <memmove>
810060ea:	83 c4 10             	add    $0x10,%esp
810060ed:	83 ec 08             	sub    $0x8,%esp
810060f0:	ff 75 0c             	pushl  0xc(%ebp)
810060f3:	ff 75 08             	pushl  0x8(%ebp)
810060f6:	e8 7e bd ff ff       	call   81001e79 <_free_r>
810060fb:	83 c4 10             	add    $0x10,%esp
810060fe:	83 ec 0c             	sub    $0xc,%esp
81006101:	ff 75 08             	pushl  0x8(%ebp)
81006104:	e8 f2 ea ff ff       	call   81004bfb <__malloc_unlock>
81006109:	83 c4 10             	add    $0x10,%esp
8100610c:	8b 45 a8             	mov    -0x58(%ebp),%eax
8100610f:	e9 ae 00 00 00       	jmp    810061c2 <_realloc_r+0x8d8>
81006114:	90                   	nop
81006115:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006118:	2b 45 bc             	sub    -0x44(%ebp),%eax
8100611b:	89 45 94             	mov    %eax,-0x6c(%ebp)
8100611e:	83 7d 94 0f          	cmpl   $0xf,-0x6c(%ebp)
81006122:	76 5d                	jbe    81006181 <_realloc_r+0x897>
81006124:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006127:	8b 45 bc             	mov    -0x44(%ebp),%eax
8100612a:	01 d0                	add    %edx,%eax
8100612c:	89 45 90             	mov    %eax,-0x70(%ebp)
8100612f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006132:	8b 40 04             	mov    0x4(%eax),%eax
81006135:	83 e0 01             	and    $0x1,%eax
81006138:	0b 45 bc             	or     -0x44(%ebp),%eax
8100613b:	89 c2                	mov    %eax,%edx
8100613d:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006140:	89 50 04             	mov    %edx,0x4(%eax)
81006143:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006146:	83 c8 01             	or     $0x1,%eax
81006149:	89 c2                	mov    %eax,%edx
8100614b:	8b 45 90             	mov    -0x70(%ebp),%eax
8100614e:	89 50 04             	mov    %edx,0x4(%eax)
81006151:	8b 55 90             	mov    -0x70(%ebp),%edx
81006154:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006157:	01 d0                	add    %edx,%eax
81006159:	8b 50 04             	mov    0x4(%eax),%edx
8100615c:	8b 4d 90             	mov    -0x70(%ebp),%ecx
8100615f:	8b 45 94             	mov    -0x6c(%ebp),%eax
81006162:	01 c8                	add    %ecx,%eax
81006164:	83 ca 01             	or     $0x1,%edx
81006167:	89 50 04             	mov    %edx,0x4(%eax)
8100616a:	8b 45 90             	mov    -0x70(%ebp),%eax
8100616d:	83 c0 08             	add    $0x8,%eax
81006170:	83 ec 08             	sub    $0x8,%esp
81006173:	50                   	push   %eax
81006174:	ff 75 08             	pushl  0x8(%ebp)
81006177:	e8 fd bc ff ff       	call   81001e79 <_free_r>
8100617c:	83 c4 10             	add    $0x10,%esp
8100617f:	eb 2d                	jmp    810061ae <_realloc_r+0x8c4>
81006181:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006184:	8b 40 04             	mov    0x4(%eax),%eax
81006187:	83 e0 01             	and    $0x1,%eax
8100618a:	0b 45 f0             	or     -0x10(%ebp),%eax
8100618d:	89 c2                	mov    %eax,%edx
8100618f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006192:	89 50 04             	mov    %edx,0x4(%eax)
81006195:	8b 55 f4             	mov    -0xc(%ebp),%edx
81006198:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100619b:	01 d0                	add    %edx,%eax
8100619d:	8b 50 04             	mov    0x4(%eax),%edx
810061a0:	8b 4d f4             	mov    -0xc(%ebp),%ecx
810061a3:	8b 45 f0             	mov    -0x10(%ebp),%eax
810061a6:	01 c8                	add    %ecx,%eax
810061a8:	83 ca 01             	or     $0x1,%edx
810061ab:	89 50 04             	mov    %edx,0x4(%eax)
810061ae:	83 ec 0c             	sub    $0xc,%esp
810061b1:	ff 75 08             	pushl  0x8(%ebp)
810061b4:	e8 42 ea ff ff       	call   81004bfb <__malloc_unlock>
810061b9:	83 c4 10             	add    $0x10,%esp
810061bc:	8b 45 f4             	mov    -0xc(%ebp),%eax
810061bf:	83 c0 08             	add    $0x8,%eax
810061c2:	c9                   	leave  
810061c3:	c3                   	ret    

810061c4 <cleanup_glue>:
810061c4:	55                   	push   %ebp
810061c5:	89 e5                	mov    %esp,%ebp
810061c7:	83 ec 08             	sub    $0x8,%esp
810061ca:	8b 45 0c             	mov    0xc(%ebp),%eax
810061cd:	8b 00                	mov    (%eax),%eax
810061cf:	85 c0                	test   %eax,%eax
810061d1:	74 14                	je     810061e7 <cleanup_glue+0x23>
810061d3:	8b 45 0c             	mov    0xc(%ebp),%eax
810061d6:	8b 00                	mov    (%eax),%eax
810061d8:	83 ec 08             	sub    $0x8,%esp
810061db:	50                   	push   %eax
810061dc:	ff 75 08             	pushl  0x8(%ebp)
810061df:	e8 e0 ff ff ff       	call   810061c4 <cleanup_glue>
810061e4:	83 c4 10             	add    $0x10,%esp
810061e7:	83 ec 08             	sub    $0x8,%esp
810061ea:	ff 75 0c             	pushl  0xc(%ebp)
810061ed:	ff 75 08             	pushl  0x8(%ebp)
810061f0:	e8 84 bc ff ff       	call   81001e79 <_free_r>
810061f5:	83 c4 10             	add    $0x10,%esp
810061f8:	90                   	nop
810061f9:	c9                   	leave  
810061fa:	c3                   	ret    

810061fb <_reclaim_reent>:
810061fb:	55                   	push   %ebp
810061fc:	89 e5                	mov    %esp,%ebp
810061fe:	83 ec 28             	sub    $0x28,%esp
81006201:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006206:	39 45 08             	cmp    %eax,0x8(%ebp)
81006209:	0f 84 49 01 00 00    	je     81006358 <_reclaim_reent+0x15d>
8100620f:	8b 45 08             	mov    0x8(%ebp),%eax
81006212:	8b 40 4c             	mov    0x4c(%eax),%eax
81006215:	85 c0                	test   %eax,%eax
81006217:	74 64                	je     8100627d <_reclaim_reent+0x82>
81006219:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81006220:	eb 3e                	jmp    81006260 <_reclaim_reent+0x65>
81006222:	8b 45 08             	mov    0x8(%ebp),%eax
81006225:	8b 50 4c             	mov    0x4c(%eax),%edx
81006228:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100622b:	c1 e0 02             	shl    $0x2,%eax
8100622e:	01 d0                	add    %edx,%eax
81006230:	8b 00                	mov    (%eax),%eax
81006232:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006235:	eb 1f                	jmp    81006256 <_reclaim_reent+0x5b>
81006237:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100623a:	89 45 e8             	mov    %eax,-0x18(%ebp)
8100623d:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006240:	8b 00                	mov    (%eax),%eax
81006242:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006245:	83 ec 08             	sub    $0x8,%esp
81006248:	ff 75 e8             	pushl  -0x18(%ebp)
8100624b:	ff 75 08             	pushl  0x8(%ebp)
8100624e:	e8 26 bc ff ff       	call   81001e79 <_free_r>
81006253:	83 c4 10             	add    $0x10,%esp
81006256:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100625a:	75 db                	jne    81006237 <_reclaim_reent+0x3c>
8100625c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81006260:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006263:	83 f8 1f             	cmp    $0x1f,%eax
81006266:	76 ba                	jbe    81006222 <_reclaim_reent+0x27>
81006268:	8b 45 08             	mov    0x8(%ebp),%eax
8100626b:	8b 40 4c             	mov    0x4c(%eax),%eax
8100626e:	83 ec 08             	sub    $0x8,%esp
81006271:	50                   	push   %eax
81006272:	ff 75 08             	pushl  0x8(%ebp)
81006275:	e8 ff bb ff ff       	call   81001e79 <_free_r>
8100627a:	83 c4 10             	add    $0x10,%esp
8100627d:	8b 45 08             	mov    0x8(%ebp),%eax
81006280:	8b 40 40             	mov    0x40(%eax),%eax
81006283:	85 c0                	test   %eax,%eax
81006285:	74 15                	je     8100629c <_reclaim_reent+0xa1>
81006287:	8b 45 08             	mov    0x8(%ebp),%eax
8100628a:	8b 40 40             	mov    0x40(%eax),%eax
8100628d:	83 ec 08             	sub    $0x8,%esp
81006290:	50                   	push   %eax
81006291:	ff 75 08             	pushl  0x8(%ebp)
81006294:	e8 e0 bb ff ff       	call   81001e79 <_free_r>
81006299:	83 c4 10             	add    $0x10,%esp
8100629c:	8b 45 08             	mov    0x8(%ebp),%eax
8100629f:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062a5:	85 c0                	test   %eax,%eax
810062a7:	74 50                	je     810062f9 <_reclaim_reent+0xfe>
810062a9:	8b 45 08             	mov    0x8(%ebp),%eax
810062ac:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062b2:	8b 55 08             	mov    0x8(%ebp),%edx
810062b5:	81 c2 4c 01 00 00    	add    $0x14c,%edx
810062bb:	39 d0                	cmp    %edx,%eax
810062bd:	74 3a                	je     810062f9 <_reclaim_reent+0xfe>
810062bf:	8b 45 08             	mov    0x8(%ebp),%eax
810062c2:	8b 80 48 01 00 00    	mov    0x148(%eax),%eax
810062c8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062cb:	eb 1f                	jmp    810062ec <_reclaim_reent+0xf1>
810062cd:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062d0:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810062d3:	8b 45 ec             	mov    -0x14(%ebp),%eax
810062d6:	8b 00                	mov    (%eax),%eax
810062d8:	89 45 ec             	mov    %eax,-0x14(%ebp)
810062db:	83 ec 08             	sub    $0x8,%esp
810062de:	ff 75 e4             	pushl  -0x1c(%ebp)
810062e1:	ff 75 08             	pushl  0x8(%ebp)
810062e4:	e8 90 bb ff ff       	call   81001e79 <_free_r>
810062e9:	83 c4 10             	add    $0x10,%esp
810062ec:	8b 45 08             	mov    0x8(%ebp),%eax
810062ef:	05 4c 01 00 00       	add    $0x14c,%eax
810062f4:	39 45 ec             	cmp    %eax,-0x14(%ebp)
810062f7:	75 d4                	jne    810062cd <_reclaim_reent+0xd2>
810062f9:	8b 45 08             	mov    0x8(%ebp),%eax
810062fc:	8b 40 54             	mov    0x54(%eax),%eax
810062ff:	85 c0                	test   %eax,%eax
81006301:	74 15                	je     81006318 <_reclaim_reent+0x11d>
81006303:	8b 45 08             	mov    0x8(%ebp),%eax
81006306:	8b 40 54             	mov    0x54(%eax),%eax
81006309:	83 ec 08             	sub    $0x8,%esp
8100630c:	50                   	push   %eax
8100630d:	ff 75 08             	pushl  0x8(%ebp)
81006310:	e8 64 bb ff ff       	call   81001e79 <_free_r>
81006315:	83 c4 10             	add    $0x10,%esp
81006318:	8b 45 08             	mov    0x8(%ebp),%eax
8100631b:	8b 40 38             	mov    0x38(%eax),%eax
8100631e:	85 c0                	test   %eax,%eax
81006320:	74 36                	je     81006358 <_reclaim_reent+0x15d>
81006322:	8b 45 08             	mov    0x8(%ebp),%eax
81006325:	8b 40 3c             	mov    0x3c(%eax),%eax
81006328:	83 ec 0c             	sub    $0xc,%esp
8100632b:	ff 75 08             	pushl  0x8(%ebp)
8100632e:	ff d0                	call   *%eax
81006330:	83 c4 10             	add    $0x10,%esp
81006333:	8b 45 08             	mov    0x8(%ebp),%eax
81006336:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
8100633c:	85 c0                	test   %eax,%eax
8100633e:	74 18                	je     81006358 <_reclaim_reent+0x15d>
81006340:	8b 45 08             	mov    0x8(%ebp),%eax
81006343:	8b 80 e0 02 00 00    	mov    0x2e0(%eax),%eax
81006349:	83 ec 08             	sub    $0x8,%esp
8100634c:	50                   	push   %eax
8100634d:	ff 75 08             	pushl  0x8(%ebp)
81006350:	e8 6f fe ff ff       	call   810061c4 <cleanup_glue>
81006355:	83 c4 10             	add    $0x10,%esp
81006358:	90                   	nop
81006359:	c9                   	leave  
8100635a:	c3                   	ret    

8100635b <lflush>:
8100635b:	55                   	push   %ebp
8100635c:	89 e5                	mov    %esp,%ebp
8100635e:	83 ec 08             	sub    $0x8,%esp
81006361:	8b 45 08             	mov    0x8(%ebp),%eax
81006364:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81006368:	98                   	cwtl   
81006369:	83 e0 09             	and    $0x9,%eax
8100636c:	83 f8 09             	cmp    $0x9,%eax
8100636f:	75 10                	jne    81006381 <lflush+0x26>
81006371:	83 ec 0c             	sub    $0xc,%esp
81006374:	ff 75 08             	pushl  0x8(%ebp)
81006377:	e8 b3 af ff ff       	call   8100132f <fflush>
8100637c:	83 c4 10             	add    $0x10,%esp
8100637f:	eb 05                	jmp    81006386 <lflush+0x2b>
81006381:	b8 00 00 00 00       	mov    $0x0,%eax
81006386:	c9                   	leave  
81006387:	c3                   	ret    

81006388 <__srefill_r>:
81006388:	55                   	push   %ebp
81006389:	89 e5                	mov    %esp,%ebp
8100638b:	56                   	push   %esi
8100638c:	53                   	push   %ebx
8100638d:	83 ec 10             	sub    $0x10,%esp
81006390:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006393:	8b 45 08             	mov    0x8(%ebp),%eax
81006396:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006399:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100639d:	74 18                	je     810063b7 <__srefill_r+0x2f>
8100639f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810063a2:	8b 40 38             	mov    0x38(%eax),%eax
810063a5:	85 c0                	test   %eax,%eax
810063a7:	75 0e                	jne    810063b7 <__srefill_r+0x2f>
810063a9:	83 ec 0c             	sub    $0xc,%esp
810063ac:	ff 75 f4             	pushl  -0xc(%ebp)
810063af:	e8 10 b5 ff ff       	call   810018c4 <__sinit>
810063b4:	83 c4 10             	add    $0x10,%esp
810063b7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063bb:	98                   	cwtl   
810063bc:	25 00 20 00 00       	and    $0x2000,%eax
810063c1:	85 c0                	test   %eax,%eax
810063c3:	75 14                	jne    810063d9 <__srefill_r+0x51>
810063c5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063c9:	80 cc 20             	or     $0x20,%ah
810063cc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810063d0:	8b 43 64             	mov    0x64(%ebx),%eax
810063d3:	80 e4 df             	and    $0xdf,%ah
810063d6:	89 43 64             	mov    %eax,0x64(%ebx)
810063d9:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
810063e0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063e4:	98                   	cwtl   
810063e5:	83 e0 20             	and    $0x20,%eax
810063e8:	85 c0                	test   %eax,%eax
810063ea:	74 0a                	je     810063f6 <__srefill_r+0x6e>
810063ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810063f1:	e9 8c 01 00 00       	jmp    81006582 <__srefill_r+0x1fa>
810063f6:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810063fa:	98                   	cwtl   
810063fb:	83 e0 04             	and    $0x4,%eax
810063fe:	85 c0                	test   %eax,%eax
81006400:	75 79                	jne    8100647b <__srefill_r+0xf3>
81006402:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006406:	98                   	cwtl   
81006407:	83 e0 10             	and    $0x10,%eax
8100640a:	85 c0                	test   %eax,%eax
8100640c:	75 1e                	jne    8100642c <__srefill_r+0xa4>
8100640e:	8b 45 08             	mov    0x8(%ebp),%eax
81006411:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
81006417:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100641b:	83 c8 40             	or     $0x40,%eax
8100641e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006422:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006427:	e9 56 01 00 00       	jmp    81006582 <__srefill_r+0x1fa>
8100642c:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006430:	98                   	cwtl   
81006431:	83 e0 08             	and    $0x8,%eax
81006434:	85 c0                	test   %eax,%eax
81006436:	74 36                	je     8100646e <__srefill_r+0xe6>
81006438:	83 ec 08             	sub    $0x8,%esp
8100643b:	53                   	push   %ebx
8100643c:	ff 75 08             	pushl  0x8(%ebp)
8100643f:	e8 93 ae ff ff       	call   810012d7 <_fflush_r>
81006444:	83 c4 10             	add    $0x10,%esp
81006447:	85 c0                	test   %eax,%eax
81006449:	74 0a                	je     81006455 <__srefill_r+0xcd>
8100644b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81006450:	e9 2d 01 00 00       	jmp    81006582 <__srefill_r+0x1fa>
81006455:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006459:	83 e0 f7             	and    $0xfffffff7,%eax
8100645c:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006460:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006467:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
8100646e:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006472:	83 c8 04             	or     $0x4,%eax
81006475:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006479:	eb 46                	jmp    810064c1 <__srefill_r+0x139>
8100647b:	8b 43 30             	mov    0x30(%ebx),%eax
8100647e:	85 c0                	test   %eax,%eax
81006480:	74 3f                	je     810064c1 <__srefill_r+0x139>
81006482:	8b 53 30             	mov    0x30(%ebx),%edx
81006485:	8d 43 40             	lea    0x40(%ebx),%eax
81006488:	39 c2                	cmp    %eax,%edx
8100648a:	74 12                	je     8100649e <__srefill_r+0x116>
8100648c:	8b 43 30             	mov    0x30(%ebx),%eax
8100648f:	83 ec 08             	sub    $0x8,%esp
81006492:	50                   	push   %eax
81006493:	ff 75 08             	pushl  0x8(%ebp)
81006496:	e8 de b9 ff ff       	call   81001e79 <_free_r>
8100649b:	83 c4 10             	add    $0x10,%esp
8100649e:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810064a5:	8b 43 3c             	mov    0x3c(%ebx),%eax
810064a8:	89 43 04             	mov    %eax,0x4(%ebx)
810064ab:	8b 43 04             	mov    0x4(%ebx),%eax
810064ae:	85 c0                	test   %eax,%eax
810064b0:	74 0f                	je     810064c1 <__srefill_r+0x139>
810064b2:	8b 43 38             	mov    0x38(%ebx),%eax
810064b5:	89 03                	mov    %eax,(%ebx)
810064b7:	b8 00 00 00 00       	mov    $0x0,%eax
810064bc:	e9 c1 00 00 00       	jmp    81006582 <__srefill_r+0x1fa>
810064c1:	8b 43 10             	mov    0x10(%ebx),%eax
810064c4:	85 c0                	test   %eax,%eax
810064c6:	75 0f                	jne    810064d7 <__srefill_r+0x14f>
810064c8:	83 ec 08             	sub    $0x8,%esp
810064cb:	53                   	push   %ebx
810064cc:	ff 75 08             	pushl  0x8(%ebp)
810064cf:	e8 6e d8 ff ff       	call   81003d42 <__smakebuf_r>
810064d4:	83 c4 10             	add    $0x10,%esp
810064d7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064db:	98                   	cwtl   
810064dc:	83 e0 03             	and    $0x3,%eax
810064df:	85 c0                	test   %eax,%eax
810064e1:	74 48                	je     8100652b <__srefill_r+0x1a3>
810064e3:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810064e7:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
810064eb:	66 c7 43 0c 01 00    	movw   $0x1,0xc(%ebx)
810064f1:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810064f6:	83 ec 08             	sub    $0x8,%esp
810064f9:	68 5b 63 00 81       	push   $0x8100635b
810064fe:	50                   	push   %eax
810064ff:	e8 a0 c8 ff ff       	call   81002da4 <_fwalk>
81006504:	83 c4 10             	add    $0x10,%esp
81006507:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
8100650b:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100650f:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006513:	98                   	cwtl   
81006514:	83 e0 09             	and    $0x9,%eax
81006517:	83 f8 09             	cmp    $0x9,%eax
8100651a:	75 0f                	jne    8100652b <__srefill_r+0x1a3>
8100651c:	83 ec 08             	sub    $0x8,%esp
8100651f:	53                   	push   %ebx
81006520:	ff 75 08             	pushl  0x8(%ebp)
81006523:	e8 89 ab ff ff       	call   810010b1 <__sflush_r>
81006528:	83 c4 10             	add    $0x10,%esp
8100652b:	8b 43 10             	mov    0x10(%ebx),%eax
8100652e:	89 03                	mov    %eax,(%ebx)
81006530:	8b 43 20             	mov    0x20(%ebx),%eax
81006533:	8b 73 14             	mov    0x14(%ebx),%esi
81006536:	8b 0b                	mov    (%ebx),%ecx
81006538:	8b 53 1c             	mov    0x1c(%ebx),%edx
8100653b:	56                   	push   %esi
8100653c:	51                   	push   %ecx
8100653d:	52                   	push   %edx
8100653e:	ff 75 08             	pushl  0x8(%ebp)
81006541:	ff d0                	call   *%eax
81006543:	83 c4 10             	add    $0x10,%esp
81006546:	89 43 04             	mov    %eax,0x4(%ebx)
81006549:	8b 43 04             	mov    0x4(%ebx),%eax
8100654c:	85 c0                	test   %eax,%eax
8100654e:	7f 2d                	jg     8100657d <__srefill_r+0x1f5>
81006550:	8b 43 04             	mov    0x4(%ebx),%eax
81006553:	85 c0                	test   %eax,%eax
81006555:	75 0d                	jne    81006564 <__srefill_r+0x1dc>
81006557:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100655b:	83 c8 20             	or     $0x20,%eax
8100655e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006562:	eb 12                	jmp    81006576 <__srefill_r+0x1ee>
81006564:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
8100656b:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100656f:	83 c8 40             	or     $0x40,%eax
81006572:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006576:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100657b:	eb 05                	jmp    81006582 <__srefill_r+0x1fa>
8100657d:	b8 00 00 00 00       	mov    $0x0,%eax
81006582:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006585:	5b                   	pop    %ebx
81006586:	5e                   	pop    %esi
81006587:	5d                   	pop    %ebp
81006588:	c3                   	ret    

81006589 <__srget_r>:
81006589:	55                   	push   %ebp
8100658a:	89 e5                	mov    %esp,%ebp
8100658c:	53                   	push   %ebx
8100658d:	83 ec 14             	sub    $0x14,%esp
81006590:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81006593:	8b 45 08             	mov    0x8(%ebp),%eax
81006596:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006599:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
8100659d:	74 18                	je     810065b7 <__srget_r+0x2e>
8100659f:	8b 45 f4             	mov    -0xc(%ebp),%eax
810065a2:	8b 40 38             	mov    0x38(%eax),%eax
810065a5:	85 c0                	test   %eax,%eax
810065a7:	75 0e                	jne    810065b7 <__srget_r+0x2e>
810065a9:	83 ec 0c             	sub    $0xc,%esp
810065ac:	ff 75 f4             	pushl  -0xc(%ebp)
810065af:	e8 10 b3 ff ff       	call   810018c4 <__sinit>
810065b4:	83 c4 10             	add    $0x10,%esp
810065b7:	83 ec 08             	sub    $0x8,%esp
810065ba:	53                   	push   %ebx
810065bb:	ff 75 08             	pushl  0x8(%ebp)
810065be:	e8 c5 fd ff ff       	call   81006388 <__srefill_r>
810065c3:	83 c4 10             	add    $0x10,%esp
810065c6:	85 c0                	test   %eax,%eax
810065c8:	75 18                	jne    810065e2 <__srget_r+0x59>
810065ca:	8b 43 04             	mov    0x4(%ebx),%eax
810065cd:	83 e8 01             	sub    $0x1,%eax
810065d0:	89 43 04             	mov    %eax,0x4(%ebx)
810065d3:	8b 03                	mov    (%ebx),%eax
810065d5:	8d 50 01             	lea    0x1(%eax),%edx
810065d8:	89 13                	mov    %edx,(%ebx)
810065da:	0f b6 00             	movzbl (%eax),%eax
810065dd:	0f b6 c0             	movzbl %al,%eax
810065e0:	eb 05                	jmp    810065e7 <__srget_r+0x5e>
810065e2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810065e7:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810065ea:	c9                   	leave  
810065eb:	c3                   	ret    

810065ec <__srget>:
810065ec:	55                   	push   %ebp
810065ed:	89 e5                	mov    %esp,%ebp
810065ef:	83 ec 08             	sub    $0x8,%esp
810065f2:	8b 55 08             	mov    0x8(%ebp),%edx
810065f5:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810065fa:	83 ec 08             	sub    $0x8,%esp
810065fd:	52                   	push   %edx
810065fe:	50                   	push   %eax
810065ff:	e8 85 ff ff ff       	call   81006589 <__srget_r>
81006604:	83 c4 10             	add    $0x10,%esp
81006607:	c9                   	leave  
81006608:	c3                   	ret    

81006609 <_sbrk_r>:
81006609:	55                   	push   %ebp
8100660a:	89 e5                	mov    %esp,%ebp
8100660c:	83 ec 18             	sub    $0x18,%esp
8100660f:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
81006616:	00 00 00 
81006619:	83 ec 0c             	sub    $0xc,%esp
8100661c:	ff 75 0c             	pushl  0xc(%ebp)
8100661f:	e8 7c a7 ff ff       	call   81000da0 <sbrk>
81006624:	83 c4 10             	add    $0x10,%esp
81006627:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100662a:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100662e:	75 14                	jne    81006644 <_sbrk_r+0x3b>
81006630:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
81006635:	85 c0                	test   %eax,%eax
81006637:	74 0b                	je     81006644 <_sbrk_r+0x3b>
81006639:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
8100663f:	8b 45 08             	mov    0x8(%ebp),%eax
81006642:	89 10                	mov    %edx,(%eax)
81006644:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006647:	c9                   	leave  
81006648:	c3                   	ret    

81006649 <setvbuf>:
81006649:	55                   	push   %ebp
8100664a:	89 e5                	mov    %esp,%ebp
8100664c:	57                   	push   %edi
8100664d:	56                   	push   %esi
8100664e:	53                   	push   %ebx
8100664f:	83 ec 2c             	sub    $0x2c,%esp
81006652:	8b 5d 08             	mov    0x8(%ebp),%ebx
81006655:	8b 7d 10             	mov    0x10(%ebp),%edi
81006658:	8b 75 14             	mov    0x14(%ebp),%esi
8100665b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006662:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006667:	89 45 e0             	mov    %eax,-0x20(%ebp)
8100666a:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100666d:	89 45 dc             	mov    %eax,-0x24(%ebp)
81006670:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81006674:	74 18                	je     8100668e <setvbuf+0x45>
81006676:	8b 45 dc             	mov    -0x24(%ebp),%eax
81006679:	8b 40 38             	mov    0x38(%eax),%eax
8100667c:	85 c0                	test   %eax,%eax
8100667e:	75 0e                	jne    8100668e <setvbuf+0x45>
81006680:	83 ec 0c             	sub    $0xc,%esp
81006683:	ff 75 dc             	pushl  -0x24(%ebp)
81006686:	e8 39 b2 ff ff       	call   810018c4 <__sinit>
8100668b:	83 c4 10             	add    $0x10,%esp
8100668e:	83 ff 02             	cmp    $0x2,%edi
81006691:	74 19                	je     810066ac <setvbuf+0x63>
81006693:	85 ff                	test   %edi,%edi
81006695:	74 05                	je     8100669c <setvbuf+0x53>
81006697:	83 ff 01             	cmp    $0x1,%edi
8100669a:	75 06                	jne    810066a2 <setvbuf+0x59>
8100669c:	89 f0                	mov    %esi,%eax
8100669e:	85 c0                	test   %eax,%eax
810066a0:	79 0a                	jns    810066ac <setvbuf+0x63>
810066a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810066a7:	e9 a1 01 00 00       	jmp    8100684d <setvbuf+0x204>
810066ac:	83 ec 08             	sub    $0x8,%esp
810066af:	53                   	push   %ebx
810066b0:	ff 75 e0             	pushl  -0x20(%ebp)
810066b3:	e8 1f ac ff ff       	call   810012d7 <_fflush_r>
810066b8:	83 c4 10             	add    $0x10,%esp
810066bb:	8b 43 30             	mov    0x30(%ebx),%eax
810066be:	85 c0                	test   %eax,%eax
810066c0:	74 23                	je     810066e5 <setvbuf+0x9c>
810066c2:	8b 53 30             	mov    0x30(%ebx),%edx
810066c5:	8d 43 40             	lea    0x40(%ebx),%eax
810066c8:	39 c2                	cmp    %eax,%edx
810066ca:	74 12                	je     810066de <setvbuf+0x95>
810066cc:	8b 43 30             	mov    0x30(%ebx),%eax
810066cf:	83 ec 08             	sub    $0x8,%esp
810066d2:	50                   	push   %eax
810066d3:	ff 75 e0             	pushl  -0x20(%ebp)
810066d6:	e8 9e b7 ff ff       	call   81001e79 <_free_r>
810066db:	83 c4 10             	add    $0x10,%esp
810066de:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
810066e5:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
810066ec:	8b 43 18             	mov    0x18(%ebx),%eax
810066ef:	89 43 04             	mov    %eax,0x4(%ebx)
810066f2:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810066f6:	98                   	cwtl   
810066f7:	25 80 00 00 00       	and    $0x80,%eax
810066fc:	85 c0                	test   %eax,%eax
810066fe:	74 12                	je     81006712 <setvbuf+0xc9>
81006700:	8b 43 10             	mov    0x10(%ebx),%eax
81006703:	83 ec 08             	sub    $0x8,%esp
81006706:	50                   	push   %eax
81006707:	ff 75 e0             	pushl  -0x20(%ebp)
8100670a:	e8 6a b7 ff ff       	call   81001e79 <_free_r>
8100670f:	83 c4 10             	add    $0x10,%esp
81006712:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006716:	66 25 5c f3          	and    $0xf35c,%ax
8100671a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100671e:	83 ff 02             	cmp    $0x2,%edi
81006721:	74 6f                	je     81006792 <setvbuf+0x149>
81006723:	8d 45 d4             	lea    -0x2c(%ebp),%eax
81006726:	50                   	push   %eax
81006727:	8d 45 d8             	lea    -0x28(%ebp),%eax
8100672a:	50                   	push   %eax
8100672b:	53                   	push   %ebx
8100672c:	ff 75 e0             	pushl  -0x20(%ebp)
8100672f:	e8 fb d6 ff ff       	call   81003e2f <__swhatbuf_r>
81006734:	83 c4 10             	add    $0x10,%esp
81006737:	0f b7 53 0c          	movzwl 0xc(%ebx),%edx
8100673b:	09 d0                	or     %edx,%eax
8100673d:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006741:	85 f6                	test   %esi,%esi
81006743:	75 0a                	jne    8100674f <setvbuf+0x106>
81006745:	c7 45 0c 00 00 00 00 	movl   $0x0,0xc(%ebp)
8100674c:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100674f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006753:	75 73                	jne    810067c8 <setvbuf+0x17f>
81006755:	83 ec 0c             	sub    $0xc,%esp
81006758:	56                   	push   %esi
81006759:	e8 64 d7 ff ff       	call   81003ec2 <malloc>
8100675e:	83 c4 10             	add    $0x10,%esp
81006761:	89 45 0c             	mov    %eax,0xc(%ebp)
81006764:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81006768:	75 20                	jne    8100678a <setvbuf+0x141>
8100676a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)
81006771:	8b 45 d8             	mov    -0x28(%ebp),%eax
81006774:	39 c6                	cmp    %eax,%esi
81006776:	74 12                	je     8100678a <setvbuf+0x141>
81006778:	8b 75 d8             	mov    -0x28(%ebp),%esi
8100677b:	83 ec 0c             	sub    $0xc,%esp
8100677e:	56                   	push   %esi
8100677f:	e8 3e d7 ff ff       	call   81003ec2 <malloc>
81006784:	83 c4 10             	add    $0x10,%esp
81006787:	89 45 0c             	mov    %eax,0xc(%ebp)
8100678a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
8100678e:	75 2e                	jne    810067be <setvbuf+0x175>
81006790:	eb 01                	jmp    81006793 <setvbuf+0x14a>
81006792:	90                   	nop
81006793:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006797:	83 c8 02             	or     $0x2,%eax
8100679a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100679e:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
810067a5:	8d 43 43             	lea    0x43(%ebx),%eax
810067a8:	89 03                	mov    %eax,(%ebx)
810067aa:	8b 03                	mov    (%ebx),%eax
810067ac:	89 43 10             	mov    %eax,0x10(%ebx)
810067af:	c7 43 14 01 00 00 00 	movl   $0x1,0x14(%ebx)
810067b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810067b9:	e9 8f 00 00 00       	jmp    8100684d <setvbuf+0x204>
810067be:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067c2:	0c 80                	or     $0x80,%al
810067c4:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067c8:	8b 45 e0             	mov    -0x20(%ebp),%eax
810067cb:	8b 40 38             	mov    0x38(%eax),%eax
810067ce:	85 c0                	test   %eax,%eax
810067d0:	75 0e                	jne    810067e0 <setvbuf+0x197>
810067d2:	83 ec 0c             	sub    $0xc,%esp
810067d5:	ff 75 e0             	pushl  -0x20(%ebp)
810067d8:	e8 e7 b0 ff ff       	call   810018c4 <__sinit>
810067dd:	83 c4 10             	add    $0x10,%esp
810067e0:	8b 45 d8             	mov    -0x28(%ebp),%eax
810067e3:	39 c6                	cmp    %eax,%esi
810067e5:	74 0b                	je     810067f2 <setvbuf+0x1a9>
810067e7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067eb:	80 cc 08             	or     $0x8,%ah
810067ee:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810067f2:	83 ff 01             	cmp    $0x1,%edi
810067f5:	75 0b                	jne    81006802 <setvbuf+0x1b9>
810067f7:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810067fb:	83 c8 01             	or     $0x1,%eax
810067fe:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006802:	8b 45 0c             	mov    0xc(%ebp),%eax
81006805:	89 03                	mov    %eax,(%ebx)
81006807:	8b 03                	mov    (%ebx),%eax
81006809:	89 43 10             	mov    %eax,0x10(%ebx)
8100680c:	89 f0                	mov    %esi,%eax
8100680e:	89 43 14             	mov    %eax,0x14(%ebx)
81006811:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006815:	98                   	cwtl   
81006816:	83 e0 08             	and    $0x8,%eax
81006819:	85 c0                	test   %eax,%eax
8100681b:	74 24                	je     81006841 <setvbuf+0x1f8>
8100681d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006821:	98                   	cwtl   
81006822:	83 e0 01             	and    $0x1,%eax
81006825:	85 c0                	test   %eax,%eax
81006827:	74 11                	je     8100683a <setvbuf+0x1f1>
81006829:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006830:	8b 43 14             	mov    0x14(%ebx),%eax
81006833:	f7 d8                	neg    %eax
81006835:	89 43 18             	mov    %eax,0x18(%ebx)
81006838:	eb 0e                	jmp    81006848 <setvbuf+0x1ff>
8100683a:	89 f0                	mov    %esi,%eax
8100683c:	89 43 08             	mov    %eax,0x8(%ebx)
8100683f:	eb 07                	jmp    81006848 <setvbuf+0x1ff>
81006841:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81006848:	b8 00 00 00 00       	mov    $0x0,%eax
8100684d:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006850:	5b                   	pop    %ebx
81006851:	5e                   	pop    %esi
81006852:	5f                   	pop    %edi
81006853:	5d                   	pop    %ebp
81006854:	c3                   	ret    

81006855 <_siprintf_r>:
81006855:	55                   	push   %ebp
81006856:	89 e5                	mov    %esp,%ebp
81006858:	83 ec 78             	sub    $0x78,%esp
8100685b:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
81006861:	8b 45 0c             	mov    0xc(%ebp),%eax
81006864:	89 45 88             	mov    %eax,-0x78(%ebp)
81006867:	8b 45 88             	mov    -0x78(%ebp),%eax
8100686a:	89 45 98             	mov    %eax,-0x68(%ebp)
8100686d:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
81006874:	8b 45 90             	mov    -0x70(%ebp),%eax
81006877:	89 45 9c             	mov    %eax,-0x64(%ebp)
8100687a:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
81006880:	8d 45 14             	lea    0x14(%ebp),%eax
81006883:	89 45 f0             	mov    %eax,-0x10(%ebp)
81006886:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006889:	50                   	push   %eax
8100688a:	ff 75 10             	pushl  0x10(%ebp)
8100688d:	8d 45 88             	lea    -0x78(%ebp),%eax
81006890:	50                   	push   %eax
81006891:	ff 75 08             	pushl  0x8(%ebp)
81006894:	e8 99 15 00 00       	call   81007e32 <_svfiprintf_r>
81006899:	83 c4 10             	add    $0x10,%esp
8100689c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100689f:	8b 45 88             	mov    -0x78(%ebp),%eax
810068a2:	c6 00 00             	movb   $0x0,(%eax)
810068a5:	8b 45 f4             	mov    -0xc(%ebp),%eax
810068a8:	c9                   	leave  
810068a9:	c3                   	ret    

810068aa <siprintf>:
810068aa:	55                   	push   %ebp
810068ab:	89 e5                	mov    %esp,%ebp
810068ad:	83 ec 78             	sub    $0x78,%esp
810068b0:	66 c7 45 94 08 02    	movw   $0x208,-0x6c(%ebp)
810068b6:	8b 45 08             	mov    0x8(%ebp),%eax
810068b9:	89 45 88             	mov    %eax,-0x78(%ebp)
810068bc:	8b 45 88             	mov    -0x78(%ebp),%eax
810068bf:	89 45 98             	mov    %eax,-0x68(%ebp)
810068c2:	c7 45 90 ff ff ff 7f 	movl   $0x7fffffff,-0x70(%ebp)
810068c9:	8b 45 90             	mov    -0x70(%ebp),%eax
810068cc:	89 45 9c             	mov    %eax,-0x64(%ebp)
810068cf:	66 c7 45 96 ff ff    	movw   $0xffff,-0x6a(%ebp)
810068d5:	8d 45 10             	lea    0x10(%ebp),%eax
810068d8:	89 45 f0             	mov    %eax,-0x10(%ebp)
810068db:	8b 55 f0             	mov    -0x10(%ebp),%edx
810068de:	a1 a4 90 00 81       	mov    0x810090a4,%eax
810068e3:	52                   	push   %edx
810068e4:	ff 75 0c             	pushl  0xc(%ebp)
810068e7:	8d 55 88             	lea    -0x78(%ebp),%edx
810068ea:	52                   	push   %edx
810068eb:	50                   	push   %eax
810068ec:	e8 41 15 00 00       	call   81007e32 <_svfiprintf_r>
810068f1:	83 c4 10             	add    $0x10,%esp
810068f4:	89 45 f4             	mov    %eax,-0xc(%ebp)
810068f7:	8b 45 88             	mov    -0x78(%ebp),%eax
810068fa:	c6 00 00             	movb   $0x0,(%eax)
810068fd:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006900:	c9                   	leave  
81006901:	c3                   	ret    

81006902 <__sread>:
81006902:	55                   	push   %ebp
81006903:	89 e5                	mov    %esp,%ebp
81006905:	56                   	push   %esi
81006906:	53                   	push   %ebx
81006907:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100690a:	8b 55 14             	mov    0x14(%ebp),%edx
8100690d:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
81006911:	98                   	cwtl   
81006912:	52                   	push   %edx
81006913:	ff 75 10             	pushl  0x10(%ebp)
81006916:	50                   	push   %eax
81006917:	ff 75 08             	pushl  0x8(%ebp)
8100691a:	e8 51 19 00 00       	call   81008270 <_read_r>
8100691f:	83 c4 10             	add    $0x10,%esp
81006922:	89 c6                	mov    %eax,%esi
81006924:	85 f6                	test   %esi,%esi
81006926:	78 0a                	js     81006932 <__sread+0x30>
81006928:	8b 43 50             	mov    0x50(%ebx),%eax
8100692b:	01 f0                	add    %esi,%eax
8100692d:	89 43 50             	mov    %eax,0x50(%ebx)
81006930:	eb 0b                	jmp    8100693d <__sread+0x3b>
81006932:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006936:	80 e4 ef             	and    $0xef,%ah
81006939:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100693d:	89 f0                	mov    %esi,%eax
8100693f:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006942:	5b                   	pop    %ebx
81006943:	5e                   	pop    %esi
81006944:	5d                   	pop    %ebp
81006945:	c3                   	ret    

81006946 <__seofread>:
81006946:	55                   	push   %ebp
81006947:	89 e5                	mov    %esp,%ebp
81006949:	b8 00 00 00 00       	mov    $0x0,%eax
8100694e:	5d                   	pop    %ebp
8100694f:	c3                   	ret    

81006950 <__swrite>:
81006950:	55                   	push   %ebp
81006951:	89 e5                	mov    %esp,%ebp
81006953:	53                   	push   %ebx
81006954:	83 ec 14             	sub    $0x14,%esp
81006957:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100695a:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100695e:	98                   	cwtl   
8100695f:	25 00 01 00 00       	and    $0x100,%eax
81006964:	85 c0                	test   %eax,%eax
81006966:	74 15                	je     8100697d <__swrite+0x2d>
81006968:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100696c:	98                   	cwtl   
8100696d:	6a 02                	push   $0x2
8100696f:	6a 00                	push   $0x0
81006971:	50                   	push   %eax
81006972:	ff 75 08             	pushl  0x8(%ebp)
81006975:	e8 f3 0f 00 00       	call   8100796d <_lseek_r>
8100697a:	83 c4 10             	add    $0x10,%esp
8100697d:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81006981:	80 e4 ef             	and    $0xef,%ah
81006984:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81006988:	8b 55 14             	mov    0x14(%ebp),%edx
8100698b:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
8100698f:	98                   	cwtl   
81006990:	52                   	push   %edx
81006991:	ff 75 10             	pushl  0x10(%ebp)
81006994:	50                   	push   %eax
81006995:	ff 75 08             	pushl  0x8(%ebp)
81006998:	e8 9d 07 00 00       	call   8100713a <_write_r>
8100699d:	83 c4 10             	add    $0x10,%esp
810069a0:	89 45 f4             	mov    %eax,-0xc(%ebp)
810069a3:	8b 45 f4             	mov    -0xc(%ebp),%eax
810069a6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810069a9:	c9                   	leave  
810069aa:	c3                   	ret    

810069ab <__sseek>:
810069ab:	55                   	push   %ebp
810069ac:	89 e5                	mov    %esp,%ebp
810069ae:	56                   	push   %esi
810069af:	53                   	push   %ebx
810069b0:	8b 5d 0c             	mov    0xc(%ebp),%ebx
810069b3:	0f b7 43 0e          	movzwl 0xe(%ebx),%eax
810069b7:	98                   	cwtl   
810069b8:	ff 75 14             	pushl  0x14(%ebp)
810069bb:	ff 75 10             	pushl  0x10(%ebp)
810069be:	50                   	push   %eax
810069bf:	ff 75 08             	pushl  0x8(%ebp)
810069c2:	e8 a6 0f 00 00       	call   8100796d <_lseek_r>
810069c7:	83 c4 10             	add    $0x10,%esp
810069ca:	89 c6                	mov    %eax,%esi
810069cc:	83 fe ff             	cmp    $0xffffffff,%esi
810069cf:	75 0d                	jne    810069de <__sseek+0x33>
810069d1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069d5:	80 e4 ef             	and    $0xef,%ah
810069d8:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069dc:	eb 0e                	jmp    810069ec <__sseek+0x41>
810069de:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810069e2:	80 cc 10             	or     $0x10,%ah
810069e5:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810069e9:	89 73 50             	mov    %esi,0x50(%ebx)
810069ec:	89 f0                	mov    %esi,%eax
810069ee:	8d 65 f8             	lea    -0x8(%ebp),%esp
810069f1:	5b                   	pop    %ebx
810069f2:	5e                   	pop    %esi
810069f3:	5d                   	pop    %ebp
810069f4:	c3                   	ret    

810069f5 <__sclose>:
810069f5:	55                   	push   %ebp
810069f6:	89 e5                	mov    %esp,%ebp
810069f8:	83 ec 18             	sub    $0x18,%esp
810069fb:	8b 45 0c             	mov    0xc(%ebp),%eax
810069fe:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006a01:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006a04:	0f b7 40 0e          	movzwl 0xe(%eax),%eax
81006a08:	98                   	cwtl   
81006a09:	83 ec 08             	sub    $0x8,%esp
81006a0c:	50                   	push   %eax
81006a0d:	ff 75 08             	pushl  0x8(%ebp)
81006a10:	e8 db 09 00 00       	call   810073f0 <_close_r>
81006a15:	83 c4 10             	add    $0x10,%esp
81006a18:	c9                   	leave  
81006a19:	c3                   	ret    
81006a1a:	66 90                	xchg   %ax,%ax
81006a1c:	66 90                	xchg   %ax,%ax
81006a1e:	66 90                	xchg   %ax,%ax

81006a20 <strchr>:
81006a20:	55                   	push   %ebp
81006a21:	89 e5                	mov    %esp,%ebp
81006a23:	57                   	push   %edi
81006a24:	53                   	push   %ebx
81006a25:	31 db                	xor    %ebx,%ebx
81006a27:	8b 7d 08             	mov    0x8(%ebp),%edi
81006a2a:	02 5d 0c             	add    0xc(%ebp),%bl
81006a2d:	0f 84 98 00 00 00    	je     81006acb <L25>
81006a33:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a39:	74 37                	je     81006a72 <L5>
81006a3b:	89 f8                	mov    %edi,%eax
81006a3d:	8a 08                	mov    (%eax),%cl
81006a3f:	84 c9                	test   %cl,%cl
81006a41:	74 7b                	je     81006abe <L14>
81006a43:	38 d9                	cmp    %bl,%cl
81006a45:	74 7d                	je     81006ac4 <L19>
81006a47:	47                   	inc    %edi
81006a48:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a4e:	74 22                	je     81006a72 <L5>
81006a50:	89 f8                	mov    %edi,%eax
81006a52:	8a 08                	mov    (%eax),%cl
81006a54:	84 c9                	test   %cl,%cl
81006a56:	74 66                	je     81006abe <L14>
81006a58:	38 d9                	cmp    %bl,%cl
81006a5a:	74 68                	je     81006ac4 <L19>
81006a5c:	47                   	inc    %edi
81006a5d:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006a63:	74 0d                	je     81006a72 <L5>
81006a65:	89 f8                	mov    %edi,%eax
81006a67:	8a 08                	mov    (%eax),%cl
81006a69:	84 c9                	test   %cl,%cl
81006a6b:	74 51                	je     81006abe <L14>
81006a6d:	38 d9                	cmp    %bl,%cl
81006a6f:	74 53                	je     81006ac4 <L19>
81006a71:	47                   	inc    %edi

81006a72 <L5>:
81006a72:	89 d9                	mov    %ebx,%ecx
81006a74:	c1 e3 08             	shl    $0x8,%ebx
81006a77:	83 ef 04             	sub    $0x4,%edi
81006a7a:	09 cb                	or     %ecx,%ebx
81006a7c:	89 da                	mov    %ebx,%edx
81006a7e:	c1 e3 10             	shl    $0x10,%ebx
81006a81:	09 d3                	or     %edx,%ebx

81006a83 <L10>:
81006a83:	83 c7 04             	add    $0x4,%edi
81006a86:	8b 0f                	mov    (%edi),%ecx
81006a88:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006a8e:	89 c8                	mov    %ecx,%eax
81006a90:	f7 d0                	not    %eax
81006a92:	21 c2                	and    %eax,%edx
81006a94:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006a9a:	75 14                	jne    81006ab0 <L9>
81006a9c:	31 d9                	xor    %ebx,%ecx
81006a9e:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006aa4:	f7 d1                	not    %ecx
81006aa6:	21 ca                	and    %ecx,%edx
81006aa8:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006aae:	74 d3                	je     81006a83 <L10>

81006ab0 <L9>:
81006ab0:	8d 47 ff             	lea    -0x1(%edi),%eax

81006ab3 <L15>:
81006ab3:	40                   	inc    %eax
81006ab4:	8a 10                	mov    (%eax),%dl
81006ab6:	84 d2                	test   %dl,%dl
81006ab8:	74 04                	je     81006abe <L14>
81006aba:	38 da                	cmp    %bl,%dl
81006abc:	75 f5                	jne    81006ab3 <L15>

81006abe <L14>:
81006abe:	38 18                	cmp    %bl,(%eax)
81006ac0:	74 02                	je     81006ac4 <L19>
81006ac2:	31 c0                	xor    %eax,%eax

81006ac4 <L19>:
81006ac4:	8d 65 f8             	lea    -0x8(%ebp),%esp
81006ac7:	5b                   	pop    %ebx
81006ac8:	5f                   	pop    %edi
81006ac9:	c9                   	leave  
81006aca:	c3                   	ret    

81006acb <L25>:
81006acb:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006ad1:	74 2b                	je     81006afe <L26>
81006ad3:	89 f8                	mov    %edi,%eax
81006ad5:	8a 08                	mov    (%eax),%cl
81006ad7:	84 c9                	test   %cl,%cl
81006ad9:	74 e9                	je     81006ac4 <L19>
81006adb:	47                   	inc    %edi
81006adc:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006ae2:	74 1a                	je     81006afe <L26>
81006ae4:	89 f8                	mov    %edi,%eax
81006ae6:	8a 08                	mov    (%eax),%cl
81006ae8:	84 c9                	test   %cl,%cl
81006aea:	74 d8                	je     81006ac4 <L19>
81006aec:	47                   	inc    %edi
81006aed:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006af3:	74 09                	je     81006afe <L26>
81006af5:	89 f8                	mov    %edi,%eax
81006af7:	8a 08                	mov    (%eax),%cl
81006af9:	84 c9                	test   %cl,%cl
81006afb:	74 c7                	je     81006ac4 <L19>
81006afd:	47                   	inc    %edi

81006afe <L26>:
81006afe:	83 ef 04             	sub    $0x4,%edi

81006b01 <L27>:
81006b01:	83 c7 04             	add    $0x4,%edi
81006b04:	8b 0f                	mov    (%edi),%ecx
81006b06:	8d 91 ff fe fe fe    	lea    -0x1010101(%ecx),%edx
81006b0c:	89 c8                	mov    %ecx,%eax
81006b0e:	f7 d0                	not    %eax
81006b10:	21 c2                	and    %eax,%edx
81006b12:	f7 c2 80 80 80 80    	test   $0x80808080,%edx
81006b18:	74 e7                	je     81006b01 <L27>
81006b1a:	eb 94                	jmp    81006ab0 <L9>

81006b1c <strcmp>:
81006b1c:	55                   	push   %ebp
81006b1d:	89 e5                	mov    %esp,%ebp
81006b1f:	83 ec 10             	sub    $0x10,%esp
81006b22:	8b 55 08             	mov    0x8(%ebp),%edx
81006b25:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b28:	09 d0                	or     %edx,%eax
81006b2a:	83 e0 03             	and    $0x3,%eax
81006b2d:	85 c0                	test   %eax,%eax
81006b2f:	75 5e                	jne    81006b8f <strcmp+0x73>
81006b31:	8b 45 08             	mov    0x8(%ebp),%eax
81006b34:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006b37:	8b 45 0c             	mov    0xc(%ebp),%eax
81006b3a:	89 45 f8             	mov    %eax,-0x8(%ebp)
81006b3d:	eb 2c                	jmp    81006b6b <strcmp+0x4f>
81006b3f:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b42:	8b 00                	mov    (%eax),%eax
81006b44:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81006b4a:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b4d:	8b 00                	mov    (%eax),%eax
81006b4f:	f7 d0                	not    %eax
81006b51:	21 d0                	and    %edx,%eax
81006b53:	25 80 80 80 80       	and    $0x80808080,%eax
81006b58:	85 c0                	test   %eax,%eax
81006b5a:	74 07                	je     81006b63 <strcmp+0x47>
81006b5c:	b8 00 00 00 00       	mov    $0x0,%eax
81006b61:	eb 5c                	jmp    81006bbf <strcmp+0xa3>
81006b63:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
81006b67:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81006b6b:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b6e:	8b 10                	mov    (%eax),%edx
81006b70:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006b73:	8b 00                	mov    (%eax),%eax
81006b75:	39 c2                	cmp    %eax,%edx
81006b77:	74 c6                	je     81006b3f <strcmp+0x23>
81006b79:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006b7c:	89 45 08             	mov    %eax,0x8(%ebp)
81006b7f:	8b 45 f8             	mov    -0x8(%ebp),%eax
81006b82:	89 45 0c             	mov    %eax,0xc(%ebp)
81006b85:	eb 08                	jmp    81006b8f <strcmp+0x73>
81006b87:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81006b8b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81006b8f:	8b 45 08             	mov    0x8(%ebp),%eax
81006b92:	0f b6 00             	movzbl (%eax),%eax
81006b95:	84 c0                	test   %al,%al
81006b97:	74 10                	je     81006ba9 <strcmp+0x8d>
81006b99:	8b 45 08             	mov    0x8(%ebp),%eax
81006b9c:	0f b6 10             	movzbl (%eax),%edx
81006b9f:	8b 45 0c             	mov    0xc(%ebp),%eax
81006ba2:	0f b6 00             	movzbl (%eax),%eax
81006ba5:	38 c2                	cmp    %al,%dl
81006ba7:	74 de                	je     81006b87 <strcmp+0x6b>
81006ba9:	8b 45 08             	mov    0x8(%ebp),%eax
81006bac:	0f b6 00             	movzbl (%eax),%eax
81006baf:	0f b6 d0             	movzbl %al,%edx
81006bb2:	8b 45 0c             	mov    0xc(%ebp),%eax
81006bb5:	0f b6 00             	movzbl (%eax),%eax
81006bb8:	0f b6 c8             	movzbl %al,%ecx
81006bbb:	89 d0                	mov    %edx,%eax
81006bbd:	29 c8                	sub    %ecx,%eax
81006bbf:	c9                   	leave  
81006bc0:	c3                   	ret    
81006bc1:	66 90                	xchg   %ax,%ax
81006bc3:	66 90                	xchg   %ax,%ax
81006bc5:	66 90                	xchg   %ax,%ax
81006bc7:	66 90                	xchg   %ax,%ax
81006bc9:	66 90                	xchg   %ax,%ax
81006bcb:	66 90                	xchg   %ax,%ax
81006bcd:	66 90                	xchg   %ax,%ax
81006bcf:	90                   	nop

81006bd0 <strlen>:
81006bd0:	55                   	push   %ebp
81006bd1:	89 e5                	mov    %esp,%ebp
81006bd3:	57                   	push   %edi
81006bd4:	8b 55 08             	mov    0x8(%ebp),%edx
81006bd7:	89 d7                	mov    %edx,%edi
81006bd9:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bdf:	74 25                	je     81006c06 <L5>
81006be1:	8a 0f                	mov    (%edi),%cl
81006be3:	47                   	inc    %edi
81006be4:	84 c9                	test   %cl,%cl
81006be6:	74 56                	je     81006c3e <L15>
81006be8:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bee:	74 16                	je     81006c06 <L5>
81006bf0:	8a 0f                	mov    (%edi),%cl
81006bf2:	47                   	inc    %edi
81006bf3:	84 c9                	test   %cl,%cl
81006bf5:	74 47                	je     81006c3e <L15>
81006bf7:	f7 c7 03 00 00 00    	test   $0x3,%edi
81006bfd:	74 07                	je     81006c06 <L5>
81006bff:	8a 0f                	mov    (%edi),%cl
81006c01:	47                   	inc    %edi
81006c02:	84 c9                	test   %cl,%cl
81006c04:	74 38                	je     81006c3e <L15>

81006c06 <L5>:
81006c06:	83 ef 04             	sub    $0x4,%edi
81006c09:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

81006c10 <L10>:
81006c10:	83 c7 04             	add    $0x4,%edi
81006c13:	8b 0f                	mov    (%edi),%ecx
81006c15:	8d 81 ff fe fe fe    	lea    -0x1010101(%ecx),%eax
81006c1b:	f7 d1                	not    %ecx
81006c1d:	21 c8                	and    %ecx,%eax
81006c1f:	a9 80 80 80 80       	test   $0x80808080,%eax
81006c24:	74 ea                	je     81006c10 <L10>
81006c26:	f7 d1                	not    %ecx
81006c28:	47                   	inc    %edi
81006c29:	84 c9                	test   %cl,%cl
81006c2b:	74 11                	je     81006c3e <L15>
81006c2d:	47                   	inc    %edi
81006c2e:	c1 e9 08             	shr    $0x8,%ecx
81006c31:	84 c9                	test   %cl,%cl
81006c33:	74 09                	je     81006c3e <L15>
81006c35:	47                   	inc    %edi
81006c36:	c1 e9 08             	shr    $0x8,%ecx
81006c39:	84 c9                	test   %cl,%cl
81006c3b:	74 01                	je     81006c3e <L15>
81006c3d:	47                   	inc    %edi

81006c3e <L15>:
81006c3e:	29 d7                	sub    %edx,%edi
81006c40:	8d 47 ff             	lea    -0x1(%edi),%eax
81006c43:	8d 65 fc             	lea    -0x4(%ebp),%esp
81006c46:	5f                   	pop    %edi
81006c47:	c9                   	leave  
81006c48:	c3                   	ret    

81006c49 <strlwr>:
81006c49:	55                   	push   %ebp
81006c4a:	89 e5                	mov    %esp,%ebp
81006c4c:	83 ec 10             	sub    $0x10,%esp
81006c4f:	8b 45 08             	mov    0x8(%ebp),%eax
81006c52:	89 45 fc             	mov    %eax,-0x4(%ebp)
81006c55:	eb 3b                	jmp    81006c92 <strlwr+0x49>
81006c57:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c5a:	0f b6 00             	movzbl (%eax),%eax
81006c5d:	88 45 fb             	mov    %al,-0x5(%ebp)
81006c60:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c64:	83 c0 01             	add    $0x1,%eax
81006c67:	05 40 8b 00 81       	add    $0x81008b40,%eax
81006c6c:	0f b6 00             	movzbl (%eax),%eax
81006c6f:	0f be c0             	movsbl %al,%eax
81006c72:	83 e0 03             	and    $0x3,%eax
81006c75:	83 f8 01             	cmp    $0x1,%eax
81006c78:	75 09                	jne    81006c83 <strlwr+0x3a>
81006c7a:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c7e:	83 c0 20             	add    $0x20,%eax
81006c81:	eb 04                	jmp    81006c87 <strlwr+0x3e>
81006c83:	0f b6 45 fb          	movzbl -0x5(%ebp),%eax
81006c87:	89 c2                	mov    %eax,%edx
81006c89:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c8c:	88 10                	mov    %dl,(%eax)
81006c8e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
81006c92:	8b 45 fc             	mov    -0x4(%ebp),%eax
81006c95:	0f b6 00             	movzbl (%eax),%eax
81006c98:	84 c0                	test   %al,%al
81006c9a:	75 bb                	jne    81006c57 <strlwr+0xe>
81006c9c:	8b 45 08             	mov    0x8(%ebp),%eax
81006c9f:	c9                   	leave  
81006ca0:	c3                   	ret    

81006ca1 <strtok>:
81006ca1:	55                   	push   %ebp
81006ca2:	89 e5                	mov    %esp,%ebp
81006ca4:	83 ec 18             	sub    $0x18,%esp
81006ca7:	8b 55 08             	mov    0x8(%ebp),%edx
81006caa:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006cad:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006cb2:	89 45 f4             	mov    %eax,-0xc(%ebp)
81006cb5:	8b 45 f4             	mov    -0xc(%ebp),%eax
81006cb8:	83 c0 5c             	add    $0x5c,%eax
81006cbb:	6a 01                	push   $0x1
81006cbd:	50                   	push   %eax
81006cbe:	51                   	push   %ecx
81006cbf:	52                   	push   %edx
81006cc0:	e8 05 00 00 00       	call   81006cca <__strtok_r>
81006cc5:	83 c4 10             	add    $0x10,%esp
81006cc8:	c9                   	leave  
81006cc9:	c3                   	ret    

81006cca <__strtok_r>:
81006cca:	55                   	push   %ebp
81006ccb:	89 e5                	mov    %esp,%ebp
81006ccd:	57                   	push   %edi
81006cce:	56                   	push   %esi
81006ccf:	53                   	push   %ebx
81006cd0:	83 ec 10             	sub    $0x10,%esp
81006cd3:	8b 45 08             	mov    0x8(%ebp),%eax
81006cd6:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81006cd9:	85 c0                	test   %eax,%eax
81006cdb:	75 13                	jne    81006cf0 <__strtok_r+0x26>
81006cdd:	8b 45 10             	mov    0x10(%ebp),%eax
81006ce0:	8b 00                	mov    (%eax),%eax
81006ce2:	85 c0                	test   %eax,%eax
81006ce4:	75 0a                	jne    81006cf0 <__strtok_r+0x26>
81006ce6:	b8 00 00 00 00       	mov    $0x0,%eax
81006ceb:	e9 92 00 00 00       	jmp    81006d82 <__strtok_r+0xb8>
81006cf0:	90                   	nop
81006cf1:	89 c2                	mov    %eax,%edx
81006cf3:	8d 42 01             	lea    0x1(%edx),%eax
81006cf6:	0f b6 12             	movzbl (%edx),%edx
81006cf9:	0f be f2             	movsbl %dl,%esi
81006cfc:	89 cf                	mov    %ecx,%edi
81006cfe:	eb 1c                	jmp    81006d1c <__strtok_r+0x52>
81006d00:	39 de                	cmp    %ebx,%esi
81006d02:	75 18                	jne    81006d1c <__strtok_r+0x52>
81006d04:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006d08:	74 02                	je     81006d0c <__strtok_r+0x42>
81006d0a:	eb e5                	jmp    81006cf1 <__strtok_r+0x27>
81006d0c:	8b 55 10             	mov    0x10(%ebp),%edx
81006d0f:	89 02                	mov    %eax,(%edx)
81006d11:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d14:	c6 02 00             	movb   $0x0,(%edx)
81006d17:	83 e8 01             	sub    $0x1,%eax
81006d1a:	eb 66                	jmp    81006d82 <__strtok_r+0xb8>
81006d1c:	89 fa                	mov    %edi,%edx
81006d1e:	8d 7a 01             	lea    0x1(%edx),%edi
81006d21:	0f b6 12             	movzbl (%edx),%edx
81006d24:	0f be da             	movsbl %dl,%ebx
81006d27:	85 db                	test   %ebx,%ebx
81006d29:	75 d5                	jne    81006d00 <__strtok_r+0x36>
81006d2b:	85 f6                	test   %esi,%esi
81006d2d:	75 10                	jne    81006d3f <__strtok_r+0x75>
81006d2f:	8b 45 10             	mov    0x10(%ebp),%eax
81006d32:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
81006d38:	b8 00 00 00 00       	mov    $0x0,%eax
81006d3d:	eb 43                	jmp    81006d82 <__strtok_r+0xb8>
81006d3f:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d42:	89 55 f0             	mov    %edx,-0x10(%ebp)
81006d45:	89 c2                	mov    %eax,%edx
81006d47:	8d 42 01             	lea    0x1(%edx),%eax
81006d4a:	0f b6 12             	movzbl (%edx),%edx
81006d4d:	0f be f2             	movsbl %dl,%esi
81006d50:	89 cf                	mov    %ecx,%edi
81006d52:	89 fa                	mov    %edi,%edx
81006d54:	8d 7a 01             	lea    0x1(%edx),%edi
81006d57:	0f b6 12             	movzbl (%edx),%edx
81006d5a:	0f be da             	movsbl %dl,%ebx
81006d5d:	39 f3                	cmp    %esi,%ebx
81006d5f:	75 1b                	jne    81006d7c <__strtok_r+0xb2>
81006d61:	85 f6                	test   %esi,%esi
81006d63:	75 07                	jne    81006d6c <__strtok_r+0xa2>
81006d65:	b8 00 00 00 00       	mov    $0x0,%eax
81006d6a:	eb 06                	jmp    81006d72 <__strtok_r+0xa8>
81006d6c:	8d 50 ff             	lea    -0x1(%eax),%edx
81006d6f:	c6 02 00             	movb   $0x0,(%edx)
81006d72:	8b 55 10             	mov    0x10(%ebp),%edx
81006d75:	89 02                	mov    %eax,(%edx)
81006d77:	8b 45 f0             	mov    -0x10(%ebp),%eax
81006d7a:	eb 06                	jmp    81006d82 <__strtok_r+0xb8>
81006d7c:	85 db                	test   %ebx,%ebx
81006d7e:	75 d2                	jne    81006d52 <__strtok_r+0x88>
81006d80:	eb c3                	jmp    81006d45 <__strtok_r+0x7b>
81006d82:	83 c4 10             	add    $0x10,%esp
81006d85:	5b                   	pop    %ebx
81006d86:	5e                   	pop    %esi
81006d87:	5f                   	pop    %edi
81006d88:	5d                   	pop    %ebp
81006d89:	c3                   	ret    

81006d8a <strtok_r>:
81006d8a:	55                   	push   %ebp
81006d8b:	89 e5                	mov    %esp,%ebp
81006d8d:	8b 45 08             	mov    0x8(%ebp),%eax
81006d90:	8b 55 0c             	mov    0xc(%ebp),%edx
81006d93:	6a 01                	push   $0x1
81006d95:	ff 75 10             	pushl  0x10(%ebp)
81006d98:	52                   	push   %edx
81006d99:	50                   	push   %eax
81006d9a:	e8 2b ff ff ff       	call   81006cca <__strtok_r>
81006d9f:	83 c4 10             	add    $0x10,%esp
81006da2:	c9                   	leave  
81006da3:	c3                   	ret    

81006da4 <__locale_ctype_ptr_l>:
81006da4:	55                   	push   %ebp
81006da5:	89 e5                	mov    %esp,%ebp
81006da7:	b8 40 8b 00 81       	mov    $0x81008b40,%eax
81006dac:	5d                   	pop    %ebp
81006dad:	c3                   	ret    

81006dae <__get_global_locale>:
81006dae:	55                   	push   %ebp
81006daf:	89 e5                	mov    %esp,%ebp
81006db1:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
81006db6:	5d                   	pop    %ebp
81006db7:	c3                   	ret    

81006db8 <__get_current_locale>:
81006db8:	55                   	push   %ebp
81006db9:	89 e5                	mov    %esp,%ebp
81006dbb:	e8 ee ff ff ff       	call   81006dae <__get_global_locale>
81006dc0:	5d                   	pop    %ebp
81006dc1:	c3                   	ret    

81006dc2 <_strtol_l>:
81006dc2:	55                   	push   %ebp
81006dc3:	89 e5                	mov    %esp,%ebp
81006dc5:	57                   	push   %edi
81006dc6:	56                   	push   %esi
81006dc7:	53                   	push   %ebx
81006dc8:	83 ec 1c             	sub    $0x1c,%esp
81006dcb:	8b 75 0c             	mov    0xc(%ebp),%esi
81006dce:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)
81006dd5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006dd9:	78 0c                	js     81006de7 <_strtol_l+0x25>
81006ddb:	83 7d 14 01          	cmpl   $0x1,0x14(%ebp)
81006ddf:	74 06                	je     81006de7 <_strtol_l+0x25>
81006de1:	83 7d 14 24          	cmpl   $0x24,0x14(%ebp)
81006de5:	7e 15                	jle    81006dfc <_strtol_l+0x3a>
81006de7:	e8 44 06 00 00       	call   81007430 <__errno>
81006dec:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81006df2:	b8 00 00 00 00       	mov    $0x0,%eax
81006df7:	e9 90 01 00 00       	jmp    81006f8c <_strtol_l+0x1ca>
81006dfc:	89 f0                	mov    %esi,%eax
81006dfe:	8d 70 01             	lea    0x1(%eax),%esi
81006e01:	0f b6 00             	movzbl (%eax),%eax
81006e04:	0f b6 d8             	movzbl %al,%ebx
81006e07:	83 ec 0c             	sub    $0xc,%esp
81006e0a:	ff 75 18             	pushl  0x18(%ebp)
81006e0d:	e8 92 ff ff ff       	call   81006da4 <__locale_ctype_ptr_l>
81006e12:	83 c4 10             	add    $0x10,%esp
81006e15:	89 da                	mov    %ebx,%edx
81006e17:	83 c2 01             	add    $0x1,%edx
81006e1a:	01 d0                	add    %edx,%eax
81006e1c:	0f b6 00             	movzbl (%eax),%eax
81006e1f:	0f be c0             	movsbl %al,%eax
81006e22:	83 e0 08             	and    $0x8,%eax
81006e25:	85 c0                	test   %eax,%eax
81006e27:	75 d3                	jne    81006dfc <_strtol_l+0x3a>
81006e29:	83 fb 2d             	cmp    $0x2d,%ebx
81006e2c:	75 14                	jne    81006e42 <_strtol_l+0x80>
81006e2e:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)
81006e35:	89 f0                	mov    %esi,%eax
81006e37:	8d 70 01             	lea    0x1(%eax),%esi
81006e3a:	0f b6 00             	movzbl (%eax),%eax
81006e3d:	0f b6 d8             	movzbl %al,%ebx
81006e40:	eb 10                	jmp    81006e52 <_strtol_l+0x90>
81006e42:	83 fb 2b             	cmp    $0x2b,%ebx
81006e45:	75 0b                	jne    81006e52 <_strtol_l+0x90>
81006e47:	89 f0                	mov    %esi,%eax
81006e49:	8d 70 01             	lea    0x1(%eax),%esi
81006e4c:	0f b6 00             	movzbl (%eax),%eax
81006e4f:	0f b6 d8             	movzbl %al,%ebx
81006e52:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e56:	74 06                	je     81006e5e <_strtol_l+0x9c>
81006e58:	83 7d 14 10          	cmpl   $0x10,0x14(%ebp)
81006e5c:	75 26                	jne    81006e84 <_strtol_l+0xc2>
81006e5e:	83 fb 30             	cmp    $0x30,%ebx
81006e61:	75 21                	jne    81006e84 <_strtol_l+0xc2>
81006e63:	0f b6 06             	movzbl (%esi),%eax
81006e66:	3c 78                	cmp    $0x78,%al
81006e68:	74 07                	je     81006e71 <_strtol_l+0xaf>
81006e6a:	0f b6 06             	movzbl (%esi),%eax
81006e6d:	3c 58                	cmp    $0x58,%al
81006e6f:	75 13                	jne    81006e84 <_strtol_l+0xc2>
81006e71:	8d 46 01             	lea    0x1(%esi),%eax
81006e74:	0f b6 00             	movzbl (%eax),%eax
81006e77:	0f b6 d8             	movzbl %al,%ebx
81006e7a:	83 c6 02             	add    $0x2,%esi
81006e7d:	c7 45 14 10 00 00 00 	movl   $0x10,0x14(%ebp)
81006e84:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81006e88:	75 14                	jne    81006e9e <_strtol_l+0xdc>
81006e8a:	83 fb 30             	cmp    $0x30,%ebx
81006e8d:	75 07                	jne    81006e96 <_strtol_l+0xd4>
81006e8f:	b8 08 00 00 00       	mov    $0x8,%eax
81006e94:	eb 05                	jmp    81006e9b <_strtol_l+0xd9>
81006e96:	b8 0a 00 00 00       	mov    $0xa,%eax
81006e9b:	89 45 14             	mov    %eax,0x14(%ebp)
81006e9e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006ea2:	74 07                	je     81006eab <_strtol_l+0xe9>
81006ea4:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006ea9:	eb 05                	jmp    81006eb0 <_strtol_l+0xee>
81006eab:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006eb0:	89 c7                	mov    %eax,%edi
81006eb2:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006eb5:	89 f8                	mov    %edi,%eax
81006eb7:	ba 00 00 00 00       	mov    $0x0,%edx
81006ebc:	f7 f1                	div    %ecx
81006ebe:	89 d0                	mov    %edx,%eax
81006ec0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81006ec3:	8b 4d 14             	mov    0x14(%ebp),%ecx
81006ec6:	89 f8                	mov    %edi,%eax
81006ec8:	ba 00 00 00 00       	mov    $0x0,%edx
81006ecd:	f7 f1                	div    %ecx
81006ecf:	89 c2                	mov    %eax,%edx
81006ed1:	bf 00 00 00 00       	mov    $0x0,%edi
81006ed6:	b9 00 00 00 00       	mov    $0x0,%ecx
81006edb:	83 fb 2f             	cmp    $0x2f,%ebx
81006ede:	7e 0a                	jle    81006eea <_strtol_l+0x128>
81006ee0:	83 fb 39             	cmp    $0x39,%ebx
81006ee3:	7f 05                	jg     81006eea <_strtol_l+0x128>
81006ee5:	83 eb 30             	sub    $0x30,%ebx
81006ee8:	eb 1c                	jmp    81006f06 <_strtol_l+0x144>
81006eea:	83 fb 40             	cmp    $0x40,%ebx
81006eed:	7e 0a                	jle    81006ef9 <_strtol_l+0x137>
81006eef:	83 fb 5a             	cmp    $0x5a,%ebx
81006ef2:	7f 05                	jg     81006ef9 <_strtol_l+0x137>
81006ef4:	83 eb 37             	sub    $0x37,%ebx
81006ef7:	eb 0d                	jmp    81006f06 <_strtol_l+0x144>
81006ef9:	83 fb 60             	cmp    $0x60,%ebx
81006efc:	7e 46                	jle    81006f44 <_strtol_l+0x182>
81006efe:	83 fb 7a             	cmp    $0x7a,%ebx
81006f01:	7f 41                	jg     81006f44 <_strtol_l+0x182>
81006f03:	83 eb 57             	sub    $0x57,%ebx
81006f06:	3b 5d 14             	cmp    0x14(%ebp),%ebx
81006f09:	7d 38                	jge    81006f43 <_strtol_l+0x181>
81006f0b:	89 c8                	mov    %ecx,%eax
81006f0d:	85 c0                	test   %eax,%eax
81006f0f:	78 0f                	js     81006f20 <_strtol_l+0x15e>
81006f11:	89 d0                	mov    %edx,%eax
81006f13:	39 c7                	cmp    %eax,%edi
81006f15:	77 09                	ja     81006f20 <_strtol_l+0x15e>
81006f17:	39 c7                	cmp    %eax,%edi
81006f19:	75 0c                	jne    81006f27 <_strtol_l+0x165>
81006f1b:	3b 5d e0             	cmp    -0x20(%ebp),%ebx
81006f1e:	7e 07                	jle    81006f27 <_strtol_l+0x165>
81006f20:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
81006f25:	eb 0f                	jmp    81006f36 <_strtol_l+0x174>
81006f27:	b9 01 00 00 00       	mov    $0x1,%ecx
81006f2c:	8b 45 14             	mov    0x14(%ebp),%eax
81006f2f:	0f af f8             	imul   %eax,%edi
81006f32:	89 d8                	mov    %ebx,%eax
81006f34:	01 c7                	add    %eax,%edi
81006f36:	89 f0                	mov    %esi,%eax
81006f38:	8d 70 01             	lea    0x1(%eax),%esi
81006f3b:	0f b6 00             	movzbl (%eax),%eax
81006f3e:	0f b6 d8             	movzbl %al,%ebx
81006f41:	eb 98                	jmp    81006edb <_strtol_l+0x119>
81006f43:	90                   	nop
81006f44:	89 c8                	mov    %ecx,%eax
81006f46:	85 c0                	test   %eax,%eax
81006f48:	79 1f                	jns    81006f69 <_strtol_l+0x1a7>
81006f4a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f4e:	74 07                	je     81006f57 <_strtol_l+0x195>
81006f50:	b8 00 00 00 80       	mov    $0x80000000,%eax
81006f55:	eb 05                	jmp    81006f5c <_strtol_l+0x19a>
81006f57:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
81006f5c:	89 c7                	mov    %eax,%edi
81006f5e:	8b 45 08             	mov    0x8(%ebp),%eax
81006f61:	c7 00 22 00 00 00    	movl   $0x22,(%eax)
81006f67:	eb 08                	jmp    81006f71 <_strtol_l+0x1af>
81006f69:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81006f6d:	74 02                	je     81006f71 <_strtol_l+0x1af>
81006f6f:	f7 df                	neg    %edi
81006f71:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81006f75:	74 13                	je     81006f8a <_strtol_l+0x1c8>
81006f77:	89 c8                	mov    %ecx,%eax
81006f79:	85 c0                	test   %eax,%eax
81006f7b:	74 05                	je     81006f82 <_strtol_l+0x1c0>
81006f7d:	8d 46 ff             	lea    -0x1(%esi),%eax
81006f80:	eb 03                	jmp    81006f85 <_strtol_l+0x1c3>
81006f82:	8b 45 0c             	mov    0xc(%ebp),%eax
81006f85:	8b 55 10             	mov    0x10(%ebp),%edx
81006f88:	89 02                	mov    %eax,(%edx)
81006f8a:	89 f8                	mov    %edi,%eax
81006f8c:	8d 65 f4             	lea    -0xc(%ebp),%esp
81006f8f:	5b                   	pop    %ebx
81006f90:	5e                   	pop    %esi
81006f91:	5f                   	pop    %edi
81006f92:	5d                   	pop    %ebp
81006f93:	c3                   	ret    

81006f94 <_strtol_r>:
81006f94:	55                   	push   %ebp
81006f95:	89 e5                	mov    %esp,%ebp
81006f97:	83 ec 08             	sub    $0x8,%esp
81006f9a:	e8 19 fe ff ff       	call   81006db8 <__get_current_locale>
81006f9f:	83 ec 0c             	sub    $0xc,%esp
81006fa2:	50                   	push   %eax
81006fa3:	ff 75 14             	pushl  0x14(%ebp)
81006fa6:	ff 75 10             	pushl  0x10(%ebp)
81006fa9:	ff 75 0c             	pushl  0xc(%ebp)
81006fac:	ff 75 08             	pushl  0x8(%ebp)
81006faf:	e8 0e fe ff ff       	call   81006dc2 <_strtol_l>
81006fb4:	83 c4 20             	add    $0x20,%esp
81006fb7:	c9                   	leave  
81006fb8:	c3                   	ret    

81006fb9 <strtol_l>:
81006fb9:	55                   	push   %ebp
81006fba:	89 e5                	mov    %esp,%ebp
81006fbc:	83 ec 08             	sub    $0x8,%esp
81006fbf:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81006fc4:	83 ec 0c             	sub    $0xc,%esp
81006fc7:	ff 75 14             	pushl  0x14(%ebp)
81006fca:	ff 75 10             	pushl  0x10(%ebp)
81006fcd:	ff 75 0c             	pushl  0xc(%ebp)
81006fd0:	ff 75 08             	pushl  0x8(%ebp)
81006fd3:	50                   	push   %eax
81006fd4:	e8 e9 fd ff ff       	call   81006dc2 <_strtol_l>
81006fd9:	83 c4 20             	add    $0x20,%esp
81006fdc:	c9                   	leave  
81006fdd:	c3                   	ret    

81006fde <strtol>:
81006fde:	55                   	push   %ebp
81006fdf:	89 e5                	mov    %esp,%ebp
81006fe1:	83 ec 08             	sub    $0x8,%esp
81006fe4:	e8 cf fd ff ff       	call   81006db8 <__get_current_locale>
81006fe9:	8b 15 a4 90 00 81    	mov    0x810090a4,%edx
81006fef:	83 ec 0c             	sub    $0xc,%esp
81006ff2:	50                   	push   %eax
81006ff3:	ff 75 10             	pushl  0x10(%ebp)
81006ff6:	ff 75 0c             	pushl  0xc(%ebp)
81006ff9:	ff 75 08             	pushl  0x8(%ebp)
81006ffc:	52                   	push   %edx
81006ffd:	e8 c0 fd ff ff       	call   81006dc2 <_strtol_l>
81007002:	83 c4 20             	add    $0x20,%esp
81007005:	c9                   	leave  
81007006:	c3                   	ret    

81007007 <__swbuf_r>:
81007007:	55                   	push   %ebp
81007008:	89 e5                	mov    %esp,%ebp
8100700a:	57                   	push   %edi
8100700b:	56                   	push   %esi
8100700c:	53                   	push   %ebx
8100700d:	83 ec 1c             	sub    $0x1c,%esp
81007010:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007013:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007016:	8b 45 08             	mov    0x8(%ebp),%eax
81007019:	89 45 e4             	mov    %eax,-0x1c(%ebp)
8100701c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007020:	74 18                	je     8100703a <__swbuf_r+0x33>
81007022:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007025:	8b 40 38             	mov    0x38(%eax),%eax
81007028:	85 c0                	test   %eax,%eax
8100702a:	75 0e                	jne    8100703a <__swbuf_r+0x33>
8100702c:	83 ec 0c             	sub    $0xc,%esp
8100702f:	ff 75 e4             	pushl  -0x1c(%ebp)
81007032:	e8 8d a8 ff ff       	call   810018c4 <__sinit>
81007037:	83 c4 10             	add    $0x10,%esp
8100703a:	8b 43 18             	mov    0x18(%ebx),%eax
8100703d:	89 43 08             	mov    %eax,0x8(%ebx)
81007040:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007044:	98                   	cwtl   
81007045:	83 e0 08             	and    $0x8,%eax
81007048:	85 c0                	test   %eax,%eax
8100704a:	74 07                	je     81007053 <__swbuf_r+0x4c>
8100704c:	8b 43 10             	mov    0x10(%ebx),%eax
8100704f:	85 c0                	test   %eax,%eax
81007051:	75 1d                	jne    81007070 <__swbuf_r+0x69>
81007053:	83 ec 08             	sub    $0x8,%esp
81007056:	53                   	push   %ebx
81007057:	ff 75 08             	pushl  0x8(%ebp)
8100705a:	e8 21 01 00 00       	call   81007180 <__swsetup_r>
8100705f:	83 c4 10             	add    $0x10,%esp
81007062:	85 c0                	test   %eax,%eax
81007064:	74 0a                	je     81007070 <__swbuf_r+0x69>
81007066:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100706b:	e9 a1 00 00 00       	jmp    81007111 <__swbuf_r+0x10a>
81007070:	89 f8                	mov    %edi,%eax
81007072:	0f b6 f8             	movzbl %al,%edi
81007075:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007079:	98                   	cwtl   
8100707a:	25 00 20 00 00       	and    $0x2000,%eax
8100707f:	85 c0                	test   %eax,%eax
81007081:	75 14                	jne    81007097 <__swbuf_r+0x90>
81007083:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007087:	80 cc 20             	or     $0x20,%ah
8100708a:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100708e:	8b 43 64             	mov    0x64(%ebx),%eax
81007091:	80 e4 df             	and    $0xdf,%ah
81007094:	89 43 64             	mov    %eax,0x64(%ebx)
81007097:	8b 03                	mov    (%ebx),%eax
81007099:	8b 53 10             	mov    0x10(%ebx),%edx
8100709c:	29 d0                	sub    %edx,%eax
8100709e:	89 c6                	mov    %eax,%esi
810070a0:	8b 43 14             	mov    0x14(%ebx),%eax
810070a3:	39 c6                	cmp    %eax,%esi
810070a5:	7c 1f                	jl     810070c6 <__swbuf_r+0xbf>
810070a7:	83 ec 08             	sub    $0x8,%esp
810070aa:	53                   	push   %ebx
810070ab:	ff 75 08             	pushl  0x8(%ebp)
810070ae:	e8 24 a2 ff ff       	call   810012d7 <_fflush_r>
810070b3:	83 c4 10             	add    $0x10,%esp
810070b6:	85 c0                	test   %eax,%eax
810070b8:	74 07                	je     810070c1 <__swbuf_r+0xba>
810070ba:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810070bf:	eb 50                	jmp    81007111 <__swbuf_r+0x10a>
810070c1:	be 00 00 00 00       	mov    $0x0,%esi
810070c6:	8b 43 08             	mov    0x8(%ebx),%eax
810070c9:	83 e8 01             	sub    $0x1,%eax
810070cc:	89 43 08             	mov    %eax,0x8(%ebx)
810070cf:	8b 03                	mov    (%ebx),%eax
810070d1:	8d 50 01             	lea    0x1(%eax),%edx
810070d4:	89 13                	mov    %edx,(%ebx)
810070d6:	89 fa                	mov    %edi,%edx
810070d8:	88 10                	mov    %dl,(%eax)
810070da:	83 c6 01             	add    $0x1,%esi
810070dd:	8b 43 14             	mov    0x14(%ebx),%eax
810070e0:	39 c6                	cmp    %eax,%esi
810070e2:	74 11                	je     810070f5 <__swbuf_r+0xee>
810070e4:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810070e8:	98                   	cwtl   
810070e9:	83 e0 01             	and    $0x1,%eax
810070ec:	85 c0                	test   %eax,%eax
810070ee:	74 1f                	je     8100710f <__swbuf_r+0x108>
810070f0:	83 ff 0a             	cmp    $0xa,%edi
810070f3:	75 1a                	jne    8100710f <__swbuf_r+0x108>
810070f5:	83 ec 08             	sub    $0x8,%esp
810070f8:	53                   	push   %ebx
810070f9:	ff 75 08             	pushl  0x8(%ebp)
810070fc:	e8 d6 a1 ff ff       	call   810012d7 <_fflush_r>
81007101:	83 c4 10             	add    $0x10,%esp
81007104:	85 c0                	test   %eax,%eax
81007106:	74 07                	je     8100710f <__swbuf_r+0x108>
81007108:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100710d:	eb 02                	jmp    81007111 <__swbuf_r+0x10a>
8100710f:	89 f8                	mov    %edi,%eax
81007111:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007114:	5b                   	pop    %ebx
81007115:	5e                   	pop    %esi
81007116:	5f                   	pop    %edi
81007117:	5d                   	pop    %ebp
81007118:	c3                   	ret    

81007119 <__swbuf>:
81007119:	55                   	push   %ebp
8100711a:	89 e5                	mov    %esp,%ebp
8100711c:	83 ec 08             	sub    $0x8,%esp
8100711f:	8b 55 08             	mov    0x8(%ebp),%edx
81007122:	8b 4d 0c             	mov    0xc(%ebp),%ecx
81007125:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100712a:	83 ec 04             	sub    $0x4,%esp
8100712d:	51                   	push   %ecx
8100712e:	52                   	push   %edx
8100712f:	50                   	push   %eax
81007130:	e8 d2 fe ff ff       	call   81007007 <__swbuf_r>
81007135:	83 c4 10             	add    $0x10,%esp
81007138:	c9                   	leave  
81007139:	c3                   	ret    

8100713a <_write_r>:
8100713a:	55                   	push   %ebp
8100713b:	89 e5                	mov    %esp,%ebp
8100713d:	83 ec 18             	sub    $0x18,%esp
81007140:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
81007147:	00 00 00 
8100714a:	83 ec 04             	sub    $0x4,%esp
8100714d:	ff 75 14             	pushl  0x14(%ebp)
81007150:	ff 75 10             	pushl  0x10(%ebp)
81007153:	ff 75 0c             	pushl  0xc(%ebp)
81007156:	e8 82 9b ff ff       	call   81000cdd <write>
8100715b:	83 c4 10             	add    $0x10,%esp
8100715e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007161:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007165:	75 14                	jne    8100717b <_write_r+0x41>
81007167:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
8100716c:	85 c0                	test   %eax,%eax
8100716e:	74 0b                	je     8100717b <_write_r+0x41>
81007170:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
81007176:	8b 45 08             	mov    0x8(%ebp),%eax
81007179:	89 10                	mov    %edx,(%eax)
8100717b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100717e:	c9                   	leave  
8100717f:	c3                   	ret    

81007180 <__swsetup_r>:
81007180:	55                   	push   %ebp
81007181:	89 e5                	mov    %esp,%ebp
81007183:	53                   	push   %ebx
81007184:	83 ec 14             	sub    $0x14,%esp
81007187:	8b 5d 0c             	mov    0xc(%ebp),%ebx
8100718a:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100718f:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007192:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007196:	74 18                	je     810071b0 <__swsetup_r+0x30>
81007198:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100719b:	8b 40 38             	mov    0x38(%eax),%eax
8100719e:	85 c0                	test   %eax,%eax
810071a0:	75 0e                	jne    810071b0 <__swsetup_r+0x30>
810071a2:	83 ec 0c             	sub    $0xc,%esp
810071a5:	ff 75 f4             	pushl  -0xc(%ebp)
810071a8:	e8 17 a7 ff ff       	call   810018c4 <__sinit>
810071ad:	83 c4 10             	add    $0x10,%esp
810071b0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071b4:	98                   	cwtl   
810071b5:	83 e0 08             	and    $0x8,%eax
810071b8:	85 c0                	test   %eax,%eax
810071ba:	0f 85 82 00 00 00    	jne    81007242 <__swsetup_r+0xc2>
810071c0:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071c4:	98                   	cwtl   
810071c5:	83 e0 10             	and    $0x10,%eax
810071c8:	85 c0                	test   %eax,%eax
810071ca:	75 1e                	jne    810071ea <__swsetup_r+0x6a>
810071cc:	8b 45 08             	mov    0x8(%ebp),%eax
810071cf:	c7 00 09 00 00 00    	movl   $0x9,(%eax)
810071d5:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071d9:	83 c8 40             	or     $0x40,%eax
810071dc:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810071e0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810071e5:	e9 ec 00 00 00       	jmp    810072d6 <__swsetup_r+0x156>
810071ea:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810071ee:	98                   	cwtl   
810071ef:	83 e0 04             	and    $0x4,%eax
810071f2:	85 c0                	test   %eax,%eax
810071f4:	74 41                	je     81007237 <__swsetup_r+0xb7>
810071f6:	8b 43 30             	mov    0x30(%ebx),%eax
810071f9:	85 c0                	test   %eax,%eax
810071fb:	74 23                	je     81007220 <__swsetup_r+0xa0>
810071fd:	8b 53 30             	mov    0x30(%ebx),%edx
81007200:	8d 43 40             	lea    0x40(%ebx),%eax
81007203:	39 c2                	cmp    %eax,%edx
81007205:	74 12                	je     81007219 <__swsetup_r+0x99>
81007207:	8b 43 30             	mov    0x30(%ebx),%eax
8100720a:	83 ec 08             	sub    $0x8,%esp
8100720d:	50                   	push   %eax
8100720e:	ff 75 08             	pushl  0x8(%ebp)
81007211:	e8 63 ac ff ff       	call   81001e79 <_free_r>
81007216:	83 c4 10             	add    $0x10,%esp
81007219:	c7 43 30 00 00 00 00 	movl   $0x0,0x30(%ebx)
81007220:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007224:	83 e0 db             	and    $0xffffffdb,%eax
81007227:	66 89 43 0c          	mov    %ax,0xc(%ebx)
8100722b:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007232:	8b 43 10             	mov    0x10(%ebx),%eax
81007235:	89 03                	mov    %eax,(%ebx)
81007237:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100723b:	83 c8 08             	or     $0x8,%eax
8100723e:	66 89 43 0c          	mov    %ax,0xc(%ebx)
81007242:	8b 43 10             	mov    0x10(%ebx),%eax
81007245:	85 c0                	test   %eax,%eax
81007247:	75 2b                	jne    81007274 <__swsetup_r+0xf4>
81007249:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100724d:	98                   	cwtl   
8100724e:	25 00 02 00 00       	and    $0x200,%eax
81007253:	85 c0                	test   %eax,%eax
81007255:	74 0e                	je     81007265 <__swsetup_r+0xe5>
81007257:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
8100725b:	98                   	cwtl   
8100725c:	25 80 00 00 00       	and    $0x80,%eax
81007261:	85 c0                	test   %eax,%eax
81007263:	74 0f                	je     81007274 <__swsetup_r+0xf4>
81007265:	83 ec 08             	sub    $0x8,%esp
81007268:	53                   	push   %ebx
81007269:	ff 75 08             	pushl  0x8(%ebp)
8100726c:	e8 d1 ca ff ff       	call   81003d42 <__smakebuf_r>
81007271:	83 c4 10             	add    $0x10,%esp
81007274:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007278:	98                   	cwtl   
81007279:	83 e0 01             	and    $0x1,%eax
8100727c:	85 c0                	test   %eax,%eax
8100727e:	74 11                	je     81007291 <__swsetup_r+0x111>
81007280:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007287:	8b 43 14             	mov    0x14(%ebx),%eax
8100728a:	f7 d8                	neg    %eax
8100728c:	89 43 18             	mov    %eax,0x18(%ebx)
8100728f:	eb 19                	jmp    810072aa <__swsetup_r+0x12a>
81007291:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
81007295:	98                   	cwtl   
81007296:	83 e0 02             	and    $0x2,%eax
81007299:	85 c0                	test   %eax,%eax
8100729b:	75 05                	jne    810072a2 <__swsetup_r+0x122>
8100729d:	8b 43 14             	mov    0x14(%ebx),%eax
810072a0:	eb 05                	jmp    810072a7 <__swsetup_r+0x127>
810072a2:	b8 00 00 00 00       	mov    $0x0,%eax
810072a7:	89 43 08             	mov    %eax,0x8(%ebx)
810072aa:	8b 43 10             	mov    0x10(%ebx),%eax
810072ad:	85 c0                	test   %eax,%eax
810072af:	75 20                	jne    810072d1 <__swsetup_r+0x151>
810072b1:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072b5:	98                   	cwtl   
810072b6:	25 80 00 00 00       	and    $0x80,%eax
810072bb:	85 c0                	test   %eax,%eax
810072bd:	74 12                	je     810072d1 <__swsetup_r+0x151>
810072bf:	0f b7 43 0c          	movzwl 0xc(%ebx),%eax
810072c3:	83 c8 40             	or     $0x40,%eax
810072c6:	66 89 43 0c          	mov    %ax,0xc(%ebx)
810072ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
810072cf:	eb 05                	jmp    810072d6 <__swsetup_r+0x156>
810072d1:	b8 00 00 00 00       	mov    $0x0,%eax
810072d6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
810072d9:	c9                   	leave  
810072da:	c3                   	ret    

810072db <__call_exitprocs>:
810072db:	55                   	push   %ebp
810072dc:	89 e5                	mov    %esp,%ebp
810072de:	57                   	push   %edi
810072df:	56                   	push   %esi
810072e0:	53                   	push   %ebx
810072e1:	83 ec 1c             	sub    $0x1c,%esp
810072e4:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810072e9:	8b 98 48 01 00 00    	mov    0x148(%eax),%ebx
810072ef:	a1 e4 88 00 81       	mov    0x810088e4,%eax
810072f4:	05 48 01 00 00       	add    $0x148,%eax
810072f9:	89 45 e4             	mov    %eax,-0x1c(%ebp)
810072fc:	90                   	nop
810072fd:	85 db                	test   %ebx,%ebx
810072ff:	0f 84 e1 00 00 00    	je     810073e6 <__call_exitprocs+0x10b>
81007305:	8d bb 88 00 00 00    	lea    0x88(%ebx),%edi
8100730b:	8b 43 04             	mov    0x4(%ebx),%eax
8100730e:	8d 70 ff             	lea    -0x1(%eax),%esi
81007311:	e9 c6 00 00 00       	jmp    810073dc <__call_exitprocs+0x101>
81007316:	b8 01 00 00 00       	mov    $0x1,%eax
8100731b:	89 f1                	mov    %esi,%ecx
8100731d:	d3 e0                	shl    %cl,%eax
8100731f:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007322:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007326:	74 17                	je     8100733f <__call_exitprocs+0x64>
81007328:	85 ff                	test   %edi,%edi
8100732a:	0f 84 a5 00 00 00    	je     810073d5 <__call_exitprocs+0xfa>
81007330:	8d 46 20             	lea    0x20(%esi),%eax
81007333:	8b 04 87             	mov    (%edi,%eax,4),%eax
81007336:	39 45 0c             	cmp    %eax,0xc(%ebp)
81007339:	0f 85 96 00 00 00    	jne    810073d5 <__call_exitprocs+0xfa>
8100733f:	8b 44 b3 08          	mov    0x8(%ebx,%esi,4),%eax
81007343:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007346:	8b 43 04             	mov    0x4(%ebx),%eax
81007349:	83 e8 01             	sub    $0x1,%eax
8100734c:	39 c6                	cmp    %eax,%esi
8100734e:	75 0b                	jne    8100735b <__call_exitprocs+0x80>
81007350:	8b 43 04             	mov    0x4(%ebx),%eax
81007353:	83 e8 01             	sub    $0x1,%eax
81007356:	89 43 04             	mov    %eax,0x4(%ebx)
81007359:	eb 08                	jmp    81007363 <__call_exitprocs+0x88>
8100735b:	c7 44 b3 08 00 00 00 	movl   $0x0,0x8(%ebx,%esi,4)
81007362:	00 
81007363:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)
81007367:	74 6f                	je     810073d8 <__call_exitprocs+0xfd>
81007369:	8b 43 04             	mov    0x4(%ebx),%eax
8100736c:	89 45 d8             	mov    %eax,-0x28(%ebp)
8100736f:	85 ff                	test   %edi,%edi
81007371:	74 0f                	je     81007382 <__call_exitprocs+0xa7>
81007373:	8b 97 00 01 00 00    	mov    0x100(%edi),%edx
81007379:	8b 45 e0             	mov    -0x20(%ebp),%eax
8100737c:	21 d0                	and    %edx,%eax
8100737e:	85 c0                	test   %eax,%eax
81007380:	75 07                	jne    81007389 <__call_exitprocs+0xae>
81007382:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007385:	ff d0                	call   *%eax
81007387:	eb 32                	jmp    810073bb <__call_exitprocs+0xe0>
81007389:	8b 97 04 01 00 00    	mov    0x104(%edi),%edx
8100738f:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007392:	21 d0                	and    %edx,%eax
81007394:	85 c0                	test   %eax,%eax
81007396:	75 14                	jne    810073ac <__call_exitprocs+0xd1>
81007398:	8b 04 b7             	mov    (%edi,%esi,4),%eax
8100739b:	83 ec 08             	sub    $0x8,%esp
8100739e:	50                   	push   %eax
8100739f:	ff 75 08             	pushl  0x8(%ebp)
810073a2:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073a5:	ff d0                	call   *%eax
810073a7:	83 c4 10             	add    $0x10,%esp
810073aa:	eb 0f                	jmp    810073bb <__call_exitprocs+0xe0>
810073ac:	8b 04 b7             	mov    (%edi,%esi,4),%eax
810073af:	83 ec 0c             	sub    $0xc,%esp
810073b2:	50                   	push   %eax
810073b3:	8b 45 dc             	mov    -0x24(%ebp),%eax
810073b6:	ff d0                	call   *%eax
810073b8:	83 c4 10             	add    $0x10,%esp
810073bb:	8b 43 04             	mov    0x4(%ebx),%eax
810073be:	39 45 d8             	cmp    %eax,-0x28(%ebp)
810073c1:	0f 85 1d ff ff ff    	jne    810072e4 <__call_exitprocs+0x9>
810073c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810073ca:	8b 00                	mov    (%eax),%eax
810073cc:	39 c3                	cmp    %eax,%ebx
810073ce:	74 09                	je     810073d9 <__call_exitprocs+0xfe>
810073d0:	e9 0f ff ff ff       	jmp    810072e4 <__call_exitprocs+0x9>
810073d5:	90                   	nop
810073d6:	eb 01                	jmp    810073d9 <__call_exitprocs+0xfe>
810073d8:	90                   	nop
810073d9:	83 ee 01             	sub    $0x1,%esi
810073dc:	85 f6                	test   %esi,%esi
810073de:	0f 89 32 ff ff ff    	jns    81007316 <__call_exitprocs+0x3b>
810073e4:	eb 01                	jmp    810073e7 <__call_exitprocs+0x10c>
810073e6:	90                   	nop
810073e7:	90                   	nop
810073e8:	8d 65 f4             	lea    -0xc(%ebp),%esp
810073eb:	5b                   	pop    %ebx
810073ec:	5e                   	pop    %esi
810073ed:	5f                   	pop    %edi
810073ee:	5d                   	pop    %ebp
810073ef:	c3                   	ret    

810073f0 <_close_r>:
810073f0:	55                   	push   %ebp
810073f1:	89 e5                	mov    %esp,%ebp
810073f3:	83 ec 18             	sub    $0x18,%esp
810073f6:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
810073fd:	00 00 00 
81007400:	83 ec 0c             	sub    $0xc,%esp
81007403:	ff 75 0c             	pushl  0xc(%ebp)
81007406:	e8 ff 98 ff ff       	call   81000d0a <close>
8100740b:	83 c4 10             	add    $0x10,%esp
8100740e:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007411:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007415:	75 14                	jne    8100742b <_close_r+0x3b>
81007417:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
8100741c:	85 c0                	test   %eax,%eax
8100741e:	74 0b                	je     8100742b <_close_r+0x3b>
81007420:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
81007426:	8b 45 08             	mov    0x8(%ebp),%eax
81007429:	89 10                	mov    %edx,(%eax)
8100742b:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100742e:	c9                   	leave  
8100742f:	c3                   	ret    

81007430 <__errno>:
81007430:	55                   	push   %ebp
81007431:	89 e5                	mov    %esp,%ebp
81007433:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007438:	5d                   	pop    %ebp
81007439:	c3                   	ret    

8100743a <__sflags>:
8100743a:	55                   	push   %ebp
8100743b:	89 e5                	mov    %esp,%ebp
8100743d:	57                   	push   %edi
8100743e:	56                   	push   %esi
8100743f:	53                   	push   %ebx
81007440:	8b 55 0c             	mov    0xc(%ebp),%edx
81007443:	0f b6 02             	movzbl (%edx),%eax
81007446:	0f be c0             	movsbl %al,%eax
81007449:	83 f8 77             	cmp    $0x77,%eax
8100744c:	74 20                	je     8100746e <__sflags+0x34>
8100744e:	83 f8 77             	cmp    $0x77,%eax
81007451:	7f 3d                	jg     81007490 <__sflags+0x56>
81007453:	83 f8 61             	cmp    $0x61,%eax
81007456:	74 27                	je     8100747f <__sflags+0x45>
81007458:	83 f8 72             	cmp    $0x72,%eax
8100745b:	75 33                	jne    81007490 <__sflags+0x56>
8100745d:	be 04 00 00 00       	mov    $0x4,%esi
81007462:	bb 00 00 00 00       	mov    $0x0,%ebx
81007467:	bf 00 00 00 00       	mov    $0x0,%edi
8100746c:	eb 32                	jmp    810074a0 <__sflags+0x66>
8100746e:	be 08 00 00 00       	mov    $0x8,%esi
81007473:	bb 01 00 00 00       	mov    $0x1,%ebx
81007478:	bf 00 06 00 00       	mov    $0x600,%edi
8100747d:	eb 21                	jmp    810074a0 <__sflags+0x66>
8100747f:	be 08 01 00 00       	mov    $0x108,%esi
81007484:	bb 01 00 00 00       	mov    $0x1,%ebx
81007489:	bf 08 02 00 00       	mov    $0x208,%edi
8100748e:	eb 10                	jmp    810074a0 <__sflags+0x66>
81007490:	8b 45 08             	mov    0x8(%ebp),%eax
81007493:	c7 00 16 00 00 00    	movl   $0x16,(%eax)
81007499:	b8 00 00 00 00       	mov    $0x0,%eax
8100749e:	eb 4f                	jmp    810074ef <__sflags+0xb5>
810074a0:	eb 38                	jmp    810074da <__sflags+0xa0>
810074a2:	0f b6 02             	movzbl (%edx),%eax
810074a5:	0f be c0             	movsbl %al,%eax
810074a8:	83 f8 78             	cmp    $0x78,%eax
810074ab:	74 27                	je     810074d4 <__sflags+0x9a>
810074ad:	83 f8 78             	cmp    $0x78,%eax
810074b0:	7f 27                	jg     810074d9 <__sflags+0x9f>
810074b2:	83 f8 2b             	cmp    $0x2b,%eax
810074b5:	74 07                	je     810074be <__sflags+0x84>
810074b7:	83 f8 62             	cmp    $0x62,%eax
810074ba:	74 1e                	je     810074da <__sflags+0xa0>
810074bc:	eb 1b                	jmp    810074d9 <__sflags+0x9f>
810074be:	89 f0                	mov    %esi,%eax
810074c0:	83 e0 e3             	and    $0xffffffe3,%eax
810074c3:	83 c8 10             	or     $0x10,%eax
810074c6:	89 c6                	mov    %eax,%esi
810074c8:	89 d8                	mov    %ebx,%eax
810074ca:	83 e0 fc             	and    $0xfffffffc,%eax
810074cd:	83 c8 02             	or     $0x2,%eax
810074d0:	89 c3                	mov    %eax,%ebx
810074d2:	eb 06                	jmp    810074da <__sflags+0xa0>
810074d4:	80 cf 08             	or     $0x8,%bh
810074d7:	eb 01                	jmp    810074da <__sflags+0xa0>
810074d9:	90                   	nop
810074da:	83 c2 01             	add    $0x1,%edx
810074dd:	0f b6 02             	movzbl (%edx),%eax
810074e0:	84 c0                	test   %al,%al
810074e2:	75 be                	jne    810074a2 <__sflags+0x68>
810074e4:	89 da                	mov    %ebx,%edx
810074e6:	09 fa                	or     %edi,%edx
810074e8:	8b 45 10             	mov    0x10(%ebp),%eax
810074eb:	89 10                	mov    %edx,(%eax)
810074ed:	89 f0                	mov    %esi,%eax
810074ef:	5b                   	pop    %ebx
810074f0:	5e                   	pop    %esi
810074f1:	5f                   	pop    %edi
810074f2:	5d                   	pop    %ebp
810074f3:	c3                   	ret    

810074f4 <_fputc_r>:
810074f4:	55                   	push   %ebp
810074f5:	89 e5                	mov    %esp,%ebp
810074f7:	83 ec 18             	sub    $0x18,%esp
810074fa:	8b 45 08             	mov    0x8(%ebp),%eax
810074fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007500:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007504:	74 18                	je     8100751e <_fputc_r+0x2a>
81007506:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007509:	8b 40 38             	mov    0x38(%eax),%eax
8100750c:	85 c0                	test   %eax,%eax
8100750e:	75 0e                	jne    8100751e <_fputc_r+0x2a>
81007510:	83 ec 0c             	sub    $0xc,%esp
81007513:	ff 75 f4             	pushl  -0xc(%ebp)
81007516:	e8 a9 a3 ff ff       	call   810018c4 <__sinit>
8100751b:	83 c4 10             	add    $0x10,%esp
8100751e:	83 ec 04             	sub    $0x4,%esp
81007521:	ff 75 10             	pushl  0x10(%ebp)
81007524:	ff 75 0c             	pushl  0xc(%ebp)
81007527:	ff 75 08             	pushl  0x8(%ebp)
8100752a:	e8 a3 0c 00 00       	call   810081d2 <_putc_r>
8100752f:	83 c4 10             	add    $0x10,%esp
81007532:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007535:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007538:	c9                   	leave  
81007539:	c3                   	ret    

8100753a <fputc>:
8100753a:	55                   	push   %ebp
8100753b:	89 e5                	mov    %esp,%ebp
8100753d:	83 ec 18             	sub    $0x18,%esp
81007540:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007545:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007548:	8b 45 f4             	mov    -0xc(%ebp),%eax
8100754b:	89 45 f0             	mov    %eax,-0x10(%ebp)
8100754e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81007552:	74 18                	je     8100756c <fputc+0x32>
81007554:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007557:	8b 40 38             	mov    0x38(%eax),%eax
8100755a:	85 c0                	test   %eax,%eax
8100755c:	75 0e                	jne    8100756c <fputc+0x32>
8100755e:	83 ec 0c             	sub    $0xc,%esp
81007561:	ff 75 f0             	pushl  -0x10(%ebp)
81007564:	e8 5b a3 ff ff       	call   810018c4 <__sinit>
81007569:	83 c4 10             	add    $0x10,%esp
8100756c:	83 ec 04             	sub    $0x4,%esp
8100756f:	ff 75 0c             	pushl  0xc(%ebp)
81007572:	ff 75 08             	pushl  0x8(%ebp)
81007575:	ff 75 f4             	pushl  -0xc(%ebp)
81007578:	e8 55 0c 00 00       	call   810081d2 <_putc_r>
8100757d:	83 c4 10             	add    $0x10,%esp
81007580:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007583:	8b 45 ec             	mov    -0x14(%ebp),%eax
81007586:	c9                   	leave  
81007587:	c3                   	ret    

81007588 <__sputc_r>:
81007588:	55                   	push   %ebp
81007589:	89 e5                	mov    %esp,%ebp
8100758b:	83 ec 08             	sub    $0x8,%esp
8100758e:	8b 45 10             	mov    0x10(%ebp),%eax
81007591:	8b 40 08             	mov    0x8(%eax),%eax
81007594:	8d 50 ff             	lea    -0x1(%eax),%edx
81007597:	8b 45 10             	mov    0x10(%ebp),%eax
8100759a:	89 50 08             	mov    %edx,0x8(%eax)
8100759d:	8b 45 10             	mov    0x10(%ebp),%eax
810075a0:	8b 40 08             	mov    0x8(%eax),%eax
810075a3:	85 c0                	test   %eax,%eax
810075a5:	79 17                	jns    810075be <__sputc_r+0x36>
810075a7:	8b 45 10             	mov    0x10(%ebp),%eax
810075aa:	8b 50 08             	mov    0x8(%eax),%edx
810075ad:	8b 45 10             	mov    0x10(%ebp),%eax
810075b0:	8b 40 18             	mov    0x18(%eax),%eax
810075b3:	39 c2                	cmp    %eax,%edx
810075b5:	7c 21                	jl     810075d8 <__sputc_r+0x50>
810075b7:	8b 45 0c             	mov    0xc(%ebp),%eax
810075ba:	3c 0a                	cmp    $0xa,%al
810075bc:	74 1a                	je     810075d8 <__sputc_r+0x50>
810075be:	8b 45 10             	mov    0x10(%ebp),%eax
810075c1:	8b 00                	mov    (%eax),%eax
810075c3:	8d 48 01             	lea    0x1(%eax),%ecx
810075c6:	8b 55 10             	mov    0x10(%ebp),%edx
810075c9:	89 0a                	mov    %ecx,(%edx)
810075cb:	8b 55 0c             	mov    0xc(%ebp),%edx
810075ce:	88 10                	mov    %dl,(%eax)
810075d0:	0f b6 00             	movzbl (%eax),%eax
810075d3:	0f b6 c0             	movzbl %al,%eax
810075d6:	eb 14                	jmp    810075ec <__sputc_r+0x64>
810075d8:	83 ec 04             	sub    $0x4,%esp
810075db:	ff 75 10             	pushl  0x10(%ebp)
810075de:	ff 75 0c             	pushl  0xc(%ebp)
810075e1:	ff 75 08             	pushl  0x8(%ebp)
810075e4:	e8 1e fa ff ff       	call   81007007 <__swbuf_r>
810075e9:	83 c4 10             	add    $0x10,%esp
810075ec:	c9                   	leave  
810075ed:	c3                   	ret    

810075ee <__fputwc>:
810075ee:	55                   	push   %ebp
810075ef:	89 e5                	mov    %esp,%ebp
810075f1:	83 ec 18             	sub    $0x18,%esp
810075f4:	e8 41 03 00 00       	call   8100793a <__locale_mb_cur_max>
810075f9:	83 f8 01             	cmp    $0x1,%eax
810075fc:	75 1e                	jne    8100761c <__fputwc+0x2e>
810075fe:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007602:	7e 18                	jle    8100761c <__fputwc+0x2e>
81007604:	81 7d 0c ff 00 00 00 	cmpl   $0xff,0xc(%ebp)
8100760b:	7f 0f                	jg     8100761c <__fputwc+0x2e>
8100760d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007610:	88 45 ef             	mov    %al,-0x11(%ebp)
81007613:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)
8100761a:	eb 3c                	jmp    81007658 <__fputwc+0x6a>
8100761c:	8b 45 10             	mov    0x10(%ebp),%eax
8100761f:	83 c0 5c             	add    $0x5c,%eax
81007622:	50                   	push   %eax
81007623:	ff 75 0c             	pushl  0xc(%ebp)
81007626:	8d 45 ef             	lea    -0x11(%ebp),%eax
81007629:	50                   	push   %eax
8100762a:	ff 75 08             	pushl  0x8(%ebp)
8100762d:	e8 7b 0d 00 00       	call   810083ad <_wcrtomb_r>
81007632:	83 c4 10             	add    $0x10,%esp
81007635:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007638:	83 7d f0 ff          	cmpl   $0xffffffff,-0x10(%ebp)
8100763c:	75 1a                	jne    81007658 <__fputwc+0x6a>
8100763e:	8b 45 10             	mov    0x10(%ebp),%eax
81007641:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007645:	83 c8 40             	or     $0x40,%eax
81007648:	89 c2                	mov    %eax,%edx
8100764a:	8b 45 10             	mov    0x10(%ebp),%eax
8100764d:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007651:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007656:	eb 44                	jmp    8100769c <__fputwc+0xae>
81007658:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
8100765f:	eb 30                	jmp    81007691 <__fputwc+0xa3>
81007661:	8d 55 ef             	lea    -0x11(%ebp),%edx
81007664:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007667:	01 d0                	add    %edx,%eax
81007669:	0f b6 00             	movzbl (%eax),%eax
8100766c:	0f b6 c0             	movzbl %al,%eax
8100766f:	83 ec 04             	sub    $0x4,%esp
81007672:	ff 75 10             	pushl  0x10(%ebp)
81007675:	50                   	push   %eax
81007676:	ff 75 08             	pushl  0x8(%ebp)
81007679:	e8 0a ff ff ff       	call   81007588 <__sputc_r>
8100767e:	83 c4 10             	add    $0x10,%esp
81007681:	83 f8 ff             	cmp    $0xffffffff,%eax
81007684:	75 07                	jne    8100768d <__fputwc+0x9f>
81007686:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100768b:	eb 0f                	jmp    8100769c <__fputwc+0xae>
8100768d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
81007691:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007694:	3b 45 f0             	cmp    -0x10(%ebp),%eax
81007697:	72 c8                	jb     81007661 <__fputwc+0x73>
81007699:	8b 45 0c             	mov    0xc(%ebp),%eax
8100769c:	c9                   	leave  
8100769d:	c3                   	ret    

8100769e <_fputwc_r>:
8100769e:	55                   	push   %ebp
8100769f:	89 e5                	mov    %esp,%ebp
810076a1:	83 ec 18             	sub    $0x18,%esp
810076a4:	8b 45 10             	mov    0x10(%ebp),%eax
810076a7:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076ab:	98                   	cwtl   
810076ac:	25 00 20 00 00       	and    $0x2000,%eax
810076b1:	85 c0                	test   %eax,%eax
810076b3:	75 24                	jne    810076d9 <_fputwc_r+0x3b>
810076b5:	8b 45 10             	mov    0x10(%ebp),%eax
810076b8:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
810076bc:	80 cc 20             	or     $0x20,%ah
810076bf:	89 c2                	mov    %eax,%edx
810076c1:	8b 45 10             	mov    0x10(%ebp),%eax
810076c4:	66 89 50 0c          	mov    %dx,0xc(%eax)
810076c8:	8b 45 10             	mov    0x10(%ebp),%eax
810076cb:	8b 40 64             	mov    0x64(%eax),%eax
810076ce:	80 cc 20             	or     $0x20,%ah
810076d1:	89 c2                	mov    %eax,%edx
810076d3:	8b 45 10             	mov    0x10(%ebp),%eax
810076d6:	89 50 64             	mov    %edx,0x64(%eax)
810076d9:	83 ec 04             	sub    $0x4,%esp
810076dc:	ff 75 10             	pushl  0x10(%ebp)
810076df:	ff 75 0c             	pushl  0xc(%ebp)
810076e2:	ff 75 08             	pushl  0x8(%ebp)
810076e5:	e8 04 ff ff ff       	call   810075ee <__fputwc>
810076ea:	83 c4 10             	add    $0x10,%esp
810076ed:	89 45 f4             	mov    %eax,-0xc(%ebp)
810076f0:	8b 45 f4             	mov    -0xc(%ebp),%eax
810076f3:	c9                   	leave  
810076f4:	c3                   	ret    

810076f5 <fputwc>:
810076f5:	55                   	push   %ebp
810076f6:	89 e5                	mov    %esp,%ebp
810076f8:	83 ec 18             	sub    $0x18,%esp
810076fb:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007700:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007703:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007706:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007709:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
8100770d:	74 18                	je     81007727 <fputwc+0x32>
8100770f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007712:	8b 40 38             	mov    0x38(%eax),%eax
81007715:	85 c0                	test   %eax,%eax
81007717:	75 0e                	jne    81007727 <fputwc+0x32>
81007719:	83 ec 0c             	sub    $0xc,%esp
8100771c:	ff 75 f0             	pushl  -0x10(%ebp)
8100771f:	e8 a0 a1 ff ff       	call   810018c4 <__sinit>
81007724:	83 c4 10             	add    $0x10,%esp
81007727:	83 ec 04             	sub    $0x4,%esp
8100772a:	ff 75 0c             	pushl  0xc(%ebp)
8100772d:	ff 75 08             	pushl  0x8(%ebp)
81007730:	ff 75 f4             	pushl  -0xc(%ebp)
81007733:	e8 66 ff ff ff       	call   8100769e <_fputwc_r>
81007738:	83 c4 10             	add    $0x10,%esp
8100773b:	c9                   	leave  
8100773c:	c3                   	ret    

8100773d <_findenv>:
8100773d:	55                   	push   %ebp
8100773e:	89 e5                	mov    %esp,%ebp
81007740:	83 ec 08             	sub    $0x8,%esp
81007743:	8b 55 08             	mov    0x8(%ebp),%edx
81007746:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100774b:	83 ec 04             	sub    $0x4,%esp
8100774e:	ff 75 0c             	pushl  0xc(%ebp)
81007751:	52                   	push   %edx
81007752:	50                   	push   %eax
81007753:	e8 25 00 00 00       	call   8100777d <_findenv_r>
81007758:	83 c4 10             	add    $0x10,%esp
8100775b:	c9                   	leave  
8100775c:	c3                   	ret    

8100775d <getenv>:
8100775d:	55                   	push   %ebp
8100775e:	89 e5                	mov    %esp,%ebp
81007760:	83 ec 18             	sub    $0x18,%esp
81007763:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007768:	83 ec 04             	sub    $0x4,%esp
8100776b:	8d 55 f4             	lea    -0xc(%ebp),%edx
8100776e:	52                   	push   %edx
8100776f:	ff 75 08             	pushl  0x8(%ebp)
81007772:	50                   	push   %eax
81007773:	e8 05 00 00 00       	call   8100777d <_findenv_r>
81007778:	83 c4 10             	add    $0x10,%esp
8100777b:	c9                   	leave  
8100777c:	c3                   	ret    

8100777d <_findenv_r>:
8100777d:	55                   	push   %ebp
8100777e:	89 e5                	mov    %esp,%ebp
81007780:	57                   	push   %edi
81007781:	56                   	push   %esi
81007782:	53                   	push   %ebx
81007783:	83 ec 1c             	sub    $0x1c,%esp
81007786:	8b 7d 0c             	mov    0xc(%ebp),%edi
81007789:	83 ec 0c             	sub    $0xc,%esp
8100778c:	ff 75 08             	pushl  0x8(%ebp)
8100778f:	e8 8a 0d 00 00       	call   8100851e <__env_lock>
81007794:	83 c4 10             	add    $0x10,%esp
81007797:	a1 d0 94 00 81       	mov    0x810094d0,%eax
8100779c:	8b 00                	mov    (%eax),%eax
8100779e:	85 c0                	test   %eax,%eax
810077a0:	75 18                	jne    810077ba <_findenv_r+0x3d>
810077a2:	83 ec 0c             	sub    $0xc,%esp
810077a5:	ff 75 08             	pushl  0x8(%ebp)
810077a8:	e8 77 0d 00 00       	call   81008524 <__env_unlock>
810077ad:	83 c4 10             	add    $0x10,%esp
810077b0:	b8 00 00 00 00       	mov    $0x0,%eax
810077b5:	e9 a8 00 00 00       	jmp    81007862 <_findenv_r+0xe5>
810077ba:	89 7d e4             	mov    %edi,-0x1c(%ebp)
810077bd:	eb 04                	jmp    810077c3 <_findenv_r+0x46>
810077bf:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
810077c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077c6:	0f b6 00             	movzbl (%eax),%eax
810077c9:	84 c0                	test   %al,%al
810077cb:	74 0a                	je     810077d7 <_findenv_r+0x5a>
810077cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077d0:	0f b6 00             	movzbl (%eax),%eax
810077d3:	3c 3d                	cmp    $0x3d,%al
810077d5:	75 e8                	jne    810077bf <_findenv_r+0x42>
810077d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077da:	0f b6 00             	movzbl (%eax),%eax
810077dd:	3c 3d                	cmp    $0x3d,%al
810077df:	74 6e                	je     8100784f <_findenv_r+0xd2>
810077e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax
810077e4:	29 f8                	sub    %edi,%eax
810077e6:	89 c6                	mov    %eax,%esi
810077e8:	a1 d0 94 00 81       	mov    0x810094d0,%eax
810077ed:	8b 18                	mov    (%eax),%ebx
810077ef:	eb 58                	jmp    81007849 <_findenv_r+0xcc>
810077f1:	89 f2                	mov    %esi,%edx
810077f3:	8b 03                	mov    (%ebx),%eax
810077f5:	83 ec 04             	sub    $0x4,%esp
810077f8:	52                   	push   %edx
810077f9:	57                   	push   %edi
810077fa:	50                   	push   %eax
810077fb:	e8 b6 0a 00 00       	call   810082b6 <strncmp>
81007800:	83 c4 10             	add    $0x10,%esp
81007803:	85 c0                	test   %eax,%eax
81007805:	75 3f                	jne    81007846 <_findenv_r+0xc9>
81007807:	8b 03                	mov    (%ebx),%eax
81007809:	89 f2                	mov    %esi,%edx
8100780b:	01 d0                	add    %edx,%eax
8100780d:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007810:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007813:	0f b6 00             	movzbl (%eax),%eax
81007816:	3c 3d                	cmp    $0x3d,%al
81007818:	75 2c                	jne    81007846 <_findenv_r+0xc9>
8100781a:	a1 d0 94 00 81       	mov    0x810094d0,%eax
8100781f:	8b 10                	mov    (%eax),%edx
81007821:	89 d8                	mov    %ebx,%eax
81007823:	29 d0                	sub    %edx,%eax
81007825:	c1 f8 02             	sar    $0x2,%eax
81007828:	89 c2                	mov    %eax,%edx
8100782a:	8b 45 10             	mov    0x10(%ebp),%eax
8100782d:	89 10                	mov    %edx,(%eax)
8100782f:	83 ec 0c             	sub    $0xc,%esp
81007832:	ff 75 08             	pushl  0x8(%ebp)
81007835:	e8 ea 0c 00 00       	call   81008524 <__env_unlock>
8100783a:	83 c4 10             	add    $0x10,%esp
8100783d:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)
81007841:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007844:	eb 1c                	jmp    81007862 <_findenv_r+0xe5>
81007846:	83 c3 04             	add    $0x4,%ebx
81007849:	8b 03                	mov    (%ebx),%eax
8100784b:	85 c0                	test   %eax,%eax
8100784d:	75 a2                	jne    810077f1 <_findenv_r+0x74>
8100784f:	83 ec 0c             	sub    $0xc,%esp
81007852:	ff 75 08             	pushl  0x8(%ebp)
81007855:	e8 ca 0c 00 00       	call   81008524 <__env_unlock>
8100785a:	83 c4 10             	add    $0x10,%esp
8100785d:	b8 00 00 00 00       	mov    $0x0,%eax
81007862:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007865:	5b                   	pop    %ebx
81007866:	5e                   	pop    %esi
81007867:	5f                   	pop    %edi
81007868:	5d                   	pop    %ebp
81007869:	c3                   	ret    

8100786a <_getenv_r>:
8100786a:	55                   	push   %ebp
8100786b:	89 e5                	mov    %esp,%ebp
8100786d:	83 ec 18             	sub    $0x18,%esp
81007870:	83 ec 04             	sub    $0x4,%esp
81007873:	8d 45 f4             	lea    -0xc(%ebp),%eax
81007876:	50                   	push   %eax
81007877:	ff 75 0c             	pushl  0xc(%ebp)
8100787a:	ff 75 08             	pushl  0x8(%ebp)
8100787d:	e8 fb fe ff ff       	call   8100777d <_findenv_r>
81007882:	83 c4 10             	add    $0x10,%esp
81007885:	c9                   	leave  
81007886:	c3                   	ret    

81007887 <_isatty_r>:
81007887:	55                   	push   %ebp
81007888:	89 e5                	mov    %esp,%ebp
8100788a:	83 ec 18             	sub    $0x18,%esp
8100788d:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
81007894:	00 00 00 
81007897:	83 ec 0c             	sub    $0xc,%esp
8100789a:	ff 75 0c             	pushl  0xc(%ebp)
8100789d:	e8 dd 94 ff ff       	call   81000d7f <isatty>
810078a2:	83 c4 10             	add    $0x10,%esp
810078a5:	89 45 f4             	mov    %eax,-0xc(%ebp)
810078a8:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
810078ac:	75 14                	jne    810078c2 <_isatty_r+0x3b>
810078ae:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810078b3:	85 c0                	test   %eax,%eax
810078b5:	74 0b                	je     810078c2 <_isatty_r+0x3b>
810078b7:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810078bd:	8b 45 08             	mov    0x8(%ebp),%eax
810078c0:	89 10                	mov    %edx,(%eax)
810078c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
810078c5:	c9                   	leave  
810078c6:	c3                   	ret    

810078c7 <__get_global_locale>:
810078c7:	55                   	push   %ebp
810078c8:	89 e5                	mov    %esp,%ebp
810078ca:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810078cf:	5d                   	pop    %ebp
810078d0:	c3                   	ret    

810078d1 <__get_current_locale>:
810078d1:	55                   	push   %ebp
810078d2:	89 e5                	mov    %esp,%ebp
810078d4:	e8 ee ff ff ff       	call   810078c7 <__get_global_locale>
810078d9:	5d                   	pop    %ebp
810078da:	c3                   	ret    

810078db <_setlocale_r>:
810078db:	55                   	push   %ebp
810078dc:	89 e5                	mov    %esp,%ebp
810078de:	83 ec 08             	sub    $0x8,%esp
810078e1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810078e5:	74 4c                	je     81007933 <_setlocale_r+0x58>
810078e7:	83 ec 08             	sub    $0x8,%esp
810078ea:	68 44 8c 00 81       	push   $0x81008c44
810078ef:	ff 75 10             	pushl  0x10(%ebp)
810078f2:	e8 25 f2 ff ff       	call   81006b1c <strcmp>
810078f7:	83 c4 10             	add    $0x10,%esp
810078fa:	85 c0                	test   %eax,%eax
810078fc:	74 35                	je     81007933 <_setlocale_r+0x58>
810078fe:	83 ec 08             	sub    $0x8,%esp
81007901:	68 4a 8c 00 81       	push   $0x81008c4a
81007906:	ff 75 10             	pushl  0x10(%ebp)
81007909:	e8 0e f2 ff ff       	call   81006b1c <strcmp>
8100790e:	83 c4 10             	add    $0x10,%esp
81007911:	85 c0                	test   %eax,%eax
81007913:	74 1e                	je     81007933 <_setlocale_r+0x58>
81007915:	83 ec 08             	sub    $0x8,%esp
81007918:	68 43 8c 00 81       	push   $0x81008c43
8100791d:	ff 75 10             	pushl  0x10(%ebp)
81007920:	e8 f7 f1 ff ff       	call   81006b1c <strcmp>
81007925:	83 c4 10             	add    $0x10,%esp
81007928:	85 c0                	test   %eax,%eax
8100792a:	74 07                	je     81007933 <_setlocale_r+0x58>
8100792c:	b8 00 00 00 00       	mov    $0x0,%eax
81007931:	eb 05                	jmp    81007938 <_setlocale_r+0x5d>
81007933:	b8 4a 8c 00 81       	mov    $0x81008c4a,%eax
81007938:	c9                   	leave  
81007939:	c3                   	ret    

8100793a <__locale_mb_cur_max>:
8100793a:	55                   	push   %ebp
8100793b:	89 e5                	mov    %esp,%ebp
8100793d:	e8 8f ff ff ff       	call   810078d1 <__get_current_locale>
81007942:	0f b6 80 28 01 00 00 	movzbl 0x128(%eax),%eax
81007949:	0f be c0             	movsbl %al,%eax
8100794c:	5d                   	pop    %ebp
8100794d:	c3                   	ret    

8100794e <setlocale>:
8100794e:	55                   	push   %ebp
8100794f:	89 e5                	mov    %esp,%ebp
81007951:	83 ec 08             	sub    $0x8,%esp
81007954:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81007959:	83 ec 04             	sub    $0x4,%esp
8100795c:	ff 75 0c             	pushl  0xc(%ebp)
8100795f:	ff 75 08             	pushl  0x8(%ebp)
81007962:	50                   	push   %eax
81007963:	e8 73 ff ff ff       	call   810078db <_setlocale_r>
81007968:	83 c4 10             	add    $0x10,%esp
8100796b:	c9                   	leave  
8100796c:	c3                   	ret    

8100796d <_lseek_r>:
8100796d:	55                   	push   %ebp
8100796e:	89 e5                	mov    %esp,%ebp
81007970:	83 ec 18             	sub    $0x18,%esp
81007973:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100797a:	00 00 00 
8100797d:	83 ec 04             	sub    $0x4,%esp
81007980:	ff 75 14             	pushl  0x14(%ebp)
81007983:	ff 75 10             	pushl  0x10(%ebp)
81007986:	ff 75 0c             	pushl  0xc(%ebp)
81007989:	e8 9d 93 ff ff       	call   81000d2b <lseek>
8100798e:	83 c4 10             	add    $0x10,%esp
81007991:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007994:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81007998:	75 14                	jne    810079ae <_lseek_r+0x41>
8100799a:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
8100799f:	85 c0                	test   %eax,%eax
810079a1:	74 0b                	je     810079ae <_lseek_r+0x41>
810079a3:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810079a9:	8b 45 08             	mov    0x8(%ebp),%eax
810079ac:	89 10                	mov    %edx,(%eax)
810079ae:	8b 45 f4             	mov    -0xc(%ebp),%eax
810079b1:	c9                   	leave  
810079b2:	c3                   	ret    

810079b3 <__get_global_locale>:
810079b3:	55                   	push   %ebp
810079b4:	89 e5                	mov    %esp,%ebp
810079b6:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810079bb:	5d                   	pop    %ebp
810079bc:	c3                   	ret    

810079bd <__get_current_locale>:
810079bd:	55                   	push   %ebp
810079be:	89 e5                	mov    %esp,%ebp
810079c0:	e8 ee ff ff ff       	call   810079b3 <__get_global_locale>
810079c5:	5d                   	pop    %ebp
810079c6:	c3                   	ret    

810079c7 <_mbtowc_r>:
810079c7:	55                   	push   %ebp
810079c8:	89 e5                	mov    %esp,%ebp
810079ca:	83 ec 08             	sub    $0x8,%esp
810079cd:	e8 eb ff ff ff       	call   810079bd <__get_current_locale>
810079d2:	8b 80 e4 00 00 00    	mov    0xe4(%eax),%eax
810079d8:	83 ec 0c             	sub    $0xc,%esp
810079db:	ff 75 18             	pushl  0x18(%ebp)
810079de:	ff 75 14             	pushl  0x14(%ebp)
810079e1:	ff 75 10             	pushl  0x10(%ebp)
810079e4:	ff 75 0c             	pushl  0xc(%ebp)
810079e7:	ff 75 08             	pushl  0x8(%ebp)
810079ea:	ff d0                	call   *%eax
810079ec:	83 c4 20             	add    $0x20,%esp
810079ef:	c9                   	leave  
810079f0:	c3                   	ret    

810079f1 <__ascii_mbtowc>:
810079f1:	55                   	push   %ebp
810079f2:	89 e5                	mov    %esp,%ebp
810079f4:	83 ec 10             	sub    $0x10,%esp
810079f7:	8b 45 10             	mov    0x10(%ebp),%eax
810079fa:	89 45 fc             	mov    %eax,-0x4(%ebp)
810079fd:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
81007a01:	75 06                	jne    81007a09 <__ascii_mbtowc+0x18>
81007a03:	8d 45 f8             	lea    -0x8(%ebp),%eax
81007a06:	89 45 0c             	mov    %eax,0xc(%ebp)
81007a09:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81007a0d:	75 07                	jne    81007a16 <__ascii_mbtowc+0x25>
81007a0f:	b8 00 00 00 00       	mov    $0x0,%eax
81007a14:	eb 31                	jmp    81007a47 <__ascii_mbtowc+0x56>
81007a16:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
81007a1a:	75 07                	jne    81007a23 <__ascii_mbtowc+0x32>
81007a1c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
81007a21:	eb 24                	jmp    81007a47 <__ascii_mbtowc+0x56>
81007a23:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a26:	0f b6 00             	movzbl (%eax),%eax
81007a29:	0f b6 d0             	movzbl %al,%edx
81007a2c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a2f:	89 10                	mov    %edx,(%eax)
81007a31:	8b 45 fc             	mov    -0x4(%ebp),%eax
81007a34:	0f b6 00             	movzbl (%eax),%eax
81007a37:	84 c0                	test   %al,%al
81007a39:	75 07                	jne    81007a42 <__ascii_mbtowc+0x51>
81007a3b:	b8 00 00 00 00       	mov    $0x0,%eax
81007a40:	eb 05                	jmp    81007a47 <__ascii_mbtowc+0x56>
81007a42:	b8 01 00 00 00       	mov    $0x1,%eax
81007a47:	c9                   	leave  
81007a48:	c3                   	ret    

81007a49 <__ssputs_r>:
81007a49:	55                   	push   %ebp
81007a4a:	89 e5                	mov    %esp,%ebp
81007a4c:	53                   	push   %ebx
81007a4d:	83 ec 14             	sub    $0x14,%esp
81007a50:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a53:	8b 58 08             	mov    0x8(%eax),%ebx
81007a56:	89 d8                	mov    %ebx,%eax
81007a58:	39 45 14             	cmp    %eax,0x14(%ebp)
81007a5b:	0f 82 3c 01 00 00    	jb     81007b9d <__ssputs_r+0x154>
81007a61:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a64:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007a68:	98                   	cwtl   
81007a69:	25 80 04 00 00       	and    $0x480,%eax
81007a6e:	85 c0                	test   %eax,%eax
81007a70:	0f 84 27 01 00 00    	je     81007b9d <__ssputs_r+0x154>
81007a76:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a79:	8b 10                	mov    (%eax),%edx
81007a7b:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a7e:	8b 48 10             	mov    0x10(%eax),%ecx
81007a81:	89 d0                	mov    %edx,%eax
81007a83:	29 c8                	sub    %ecx,%eax
81007a85:	89 45 ec             	mov    %eax,-0x14(%ebp)
81007a88:	8b 45 0c             	mov    0xc(%ebp),%eax
81007a8b:	8b 50 14             	mov    0x14(%eax),%edx
81007a8e:	89 d0                	mov    %edx,%eax
81007a90:	01 c0                	add    %eax,%eax
81007a92:	01 d0                	add    %edx,%eax
81007a94:	89 c2                	mov    %eax,%edx
81007a96:	c1 ea 1f             	shr    $0x1f,%edx
81007a99:	01 d0                	add    %edx,%eax
81007a9b:	d1 f8                	sar    %eax
81007a9d:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007aa0:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007aa3:	8b 45 14             	mov    0x14(%ebp),%eax
81007aa6:	01 d0                	add    %edx,%eax
81007aa8:	8d 50 01             	lea    0x1(%eax),%edx
81007aab:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007aae:	39 c2                	cmp    %eax,%edx
81007ab0:	76 0e                	jbe    81007ac0 <__ssputs_r+0x77>
81007ab2:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007ab5:	8b 45 14             	mov    0x14(%ebp),%eax
81007ab8:	01 d0                	add    %edx,%eax
81007aba:	83 c0 01             	add    $0x1,%eax
81007abd:	89 45 f0             	mov    %eax,-0x10(%ebp)
81007ac0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007ac3:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007ac7:	98                   	cwtl   
81007ac8:	25 00 04 00 00       	and    $0x400,%eax
81007acd:	85 c0                	test   %eax,%eax
81007acf:	74 5a                	je     81007b2b <__ssputs_r+0xe2>
81007ad1:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007ad4:	83 ec 08             	sub    $0x8,%esp
81007ad7:	50                   	push   %eax
81007ad8:	ff 75 08             	pushl  0x8(%ebp)
81007adb:	e8 ae c6 ff ff       	call   8100418e <_malloc_r>
81007ae0:	83 c4 10             	add    $0x10,%esp
81007ae3:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007ae6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007aea:	75 0e                	jne    81007afa <__ssputs_r+0xb1>
81007aec:	8b 45 08             	mov    0x8(%ebp),%eax
81007aef:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007af5:	e9 e9 00 00 00       	jmp    81007be3 <__ssputs_r+0x19a>
81007afa:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007afd:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b00:	8b 40 10             	mov    0x10(%eax),%eax
81007b03:	83 ec 04             	sub    $0x4,%esp
81007b06:	52                   	push   %edx
81007b07:	50                   	push   %eax
81007b08:	ff 75 f4             	pushl  -0xc(%ebp)
81007b0b:	e8 88 cf ff ff       	call   81004a98 <memcpy>
81007b10:	83 c4 10             	add    $0x10,%esp
81007b13:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b16:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007b1a:	66 25 7f fb          	and    $0xfb7f,%ax
81007b1e:	0c 80                	or     $0x80,%al
81007b20:	89 c2                	mov    %eax,%edx
81007b22:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b25:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007b29:	eb 42                	jmp    81007b6d <__ssputs_r+0x124>
81007b2b:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b2e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b31:	8b 40 10             	mov    0x10(%eax),%eax
81007b34:	83 ec 04             	sub    $0x4,%esp
81007b37:	52                   	push   %edx
81007b38:	50                   	push   %eax
81007b39:	ff 75 08             	pushl  0x8(%ebp)
81007b3c:	e8 a9 dd ff ff       	call   810058ea <_realloc_r>
81007b41:	83 c4 10             	add    $0x10,%esp
81007b44:	89 45 f4             	mov    %eax,-0xc(%ebp)
81007b47:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
81007b4b:	75 20                	jne    81007b6d <__ssputs_r+0x124>
81007b4d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b50:	8b 40 10             	mov    0x10(%eax),%eax
81007b53:	83 ec 08             	sub    $0x8,%esp
81007b56:	50                   	push   %eax
81007b57:	ff 75 08             	pushl  0x8(%ebp)
81007b5a:	e8 1a a3 ff ff       	call   81001e79 <_free_r>
81007b5f:	83 c4 10             	add    $0x10,%esp
81007b62:	8b 45 08             	mov    0x8(%ebp),%eax
81007b65:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007b6b:	eb 76                	jmp    81007be3 <__ssputs_r+0x19a>
81007b6d:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b70:	8b 55 f4             	mov    -0xc(%ebp),%edx
81007b73:	89 50 10             	mov    %edx,0x10(%eax)
81007b76:	8b 55 ec             	mov    -0x14(%ebp),%edx
81007b79:	8b 45 f4             	mov    -0xc(%ebp),%eax
81007b7c:	01 c2                	add    %eax,%edx
81007b7e:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b81:	89 10                	mov    %edx,(%eax)
81007b83:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b86:	8b 55 f0             	mov    -0x10(%ebp),%edx
81007b89:	89 50 14             	mov    %edx,0x14(%eax)
81007b8c:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007b8f:	8b 45 f0             	mov    -0x10(%ebp),%eax
81007b92:	2b 45 ec             	sub    -0x14(%ebp),%eax
81007b95:	89 c2                	mov    %eax,%edx
81007b97:	8b 45 0c             	mov    0xc(%ebp),%eax
81007b9a:	89 50 08             	mov    %edx,0x8(%eax)
81007b9d:	89 d8                	mov    %ebx,%eax
81007b9f:	39 45 14             	cmp    %eax,0x14(%ebp)
81007ba2:	73 03                	jae    81007ba7 <__ssputs_r+0x15e>
81007ba4:	8b 5d 14             	mov    0x14(%ebp),%ebx
81007ba7:	89 da                	mov    %ebx,%edx
81007ba9:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bac:	8b 00                	mov    (%eax),%eax
81007bae:	83 ec 04             	sub    $0x4,%esp
81007bb1:	52                   	push   %edx
81007bb2:	ff 75 10             	pushl  0x10(%ebp)
81007bb5:	50                   	push   %eax
81007bb6:	e8 25 cf ff ff       	call   81004ae0 <memmove>
81007bbb:	83 c4 10             	add    $0x10,%esp
81007bbe:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bc1:	8b 40 08             	mov    0x8(%eax),%eax
81007bc4:	29 d8                	sub    %ebx,%eax
81007bc6:	89 c2                	mov    %eax,%edx
81007bc8:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bcb:	89 50 08             	mov    %edx,0x8(%eax)
81007bce:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bd1:	8b 00                	mov    (%eax),%eax
81007bd3:	89 da                	mov    %ebx,%edx
81007bd5:	01 c2                	add    %eax,%edx
81007bd7:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bda:	89 10                	mov    %edx,(%eax)
81007bdc:	b8 00 00 00 00       	mov    $0x0,%eax
81007be1:	eb 18                	jmp    81007bfb <__ssputs_r+0x1b2>
81007be3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007be6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007bea:	83 c8 40             	or     $0x40,%eax
81007bed:	89 c2                	mov    %eax,%edx
81007bef:	8b 45 0c             	mov    0xc(%ebp),%eax
81007bf2:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007bf6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007bfb:	8b 5d fc             	mov    -0x4(%ebp),%ebx
81007bfe:	c9                   	leave  
81007bff:	c3                   	ret    

81007c00 <__ssprint_r>:
81007c00:	55                   	push   %ebp
81007c01:	89 e5                	mov    %esp,%ebp
81007c03:	57                   	push   %edi
81007c04:	56                   	push   %esi
81007c05:	53                   	push   %ebx
81007c06:	83 ec 2c             	sub    $0x2c,%esp
81007c09:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007c0c:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)
81007c13:	8b 03                	mov    (%ebx),%eax
81007c15:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c18:	be 00 00 00 00       	mov    $0x0,%esi
81007c1d:	8b 43 08             	mov    0x8(%ebx),%eax
81007c20:	85 c0                	test   %eax,%eax
81007c22:	75 22                	jne    81007c46 <__ssprint_r+0x46>
81007c24:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007c2b:	b8 00 00 00 00       	mov    $0x0,%eax
81007c30:	e9 f5 01 00 00       	jmp    81007e2a <__ssprint_r+0x22a>
81007c35:	8b 45 d0             	mov    -0x30(%ebp),%eax
81007c38:	8b 08                	mov    (%eax),%ecx
81007c3a:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
81007c3d:	8b 70 04             	mov    0x4(%eax),%esi
81007c40:	83 c0 08             	add    $0x8,%eax
81007c43:	89 45 d0             	mov    %eax,-0x30(%ebp)
81007c46:	85 f6                	test   %esi,%esi
81007c48:	74 eb                	je     81007c35 <__ssprint_r+0x35>
81007c4a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c4d:	8b 78 08             	mov    0x8(%eax),%edi
81007c50:	89 f8                	mov    %edi,%eax
81007c52:	39 c6                	cmp    %eax,%esi
81007c54:	0f 82 38 01 00 00    	jb     81007d92 <__ssprint_r+0x192>
81007c5a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c5d:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007c61:	98                   	cwtl   
81007c62:	25 80 04 00 00       	and    $0x480,%eax
81007c67:	85 c0                	test   %eax,%eax
81007c69:	0f 84 23 01 00 00    	je     81007d92 <__ssprint_r+0x192>
81007c6f:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c72:	8b 10                	mov    (%eax),%edx
81007c74:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c77:	8b 48 10             	mov    0x10(%eax),%ecx
81007c7a:	89 d0                	mov    %edx,%eax
81007c7c:	29 c8                	sub    %ecx,%eax
81007c7e:	89 45 dc             	mov    %eax,-0x24(%ebp)
81007c81:	8b 45 0c             	mov    0xc(%ebp),%eax
81007c84:	8b 50 14             	mov    0x14(%eax),%edx
81007c87:	89 d0                	mov    %edx,%eax
81007c89:	01 c0                	add    %eax,%eax
81007c8b:	01 d0                	add    %edx,%eax
81007c8d:	89 c2                	mov    %eax,%edx
81007c8f:	c1 ea 1f             	shr    $0x1f,%edx
81007c92:	01 d0                	add    %edx,%eax
81007c94:	d1 f8                	sar    %eax
81007c96:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007c99:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007c9c:	01 f0                	add    %esi,%eax
81007c9e:	8d 50 01             	lea    0x1(%eax),%edx
81007ca1:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007ca4:	39 c2                	cmp    %eax,%edx
81007ca6:	76 0b                	jbe    81007cb3 <__ssprint_r+0xb3>
81007ca8:	8b 45 dc             	mov    -0x24(%ebp),%eax
81007cab:	01 f0                	add    %esi,%eax
81007cad:	83 c0 01             	add    $0x1,%eax
81007cb0:	89 45 e0             	mov    %eax,-0x20(%ebp)
81007cb3:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cb6:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007cba:	98                   	cwtl   
81007cbb:	25 00 04 00 00       	and    $0x400,%eax
81007cc0:	85 c0                	test   %eax,%eax
81007cc2:	74 5a                	je     81007d1e <__ssprint_r+0x11e>
81007cc4:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007cc7:	83 ec 08             	sub    $0x8,%esp
81007cca:	50                   	push   %eax
81007ccb:	ff 75 08             	pushl  0x8(%ebp)
81007cce:	e8 bb c4 ff ff       	call   8100418e <_malloc_r>
81007cd3:	83 c4 10             	add    $0x10,%esp
81007cd6:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007cd9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007cdd:	75 0e                	jne    81007ced <__ssprint_r+0xed>
81007cdf:	8b 45 08             	mov    0x8(%ebp),%eax
81007ce2:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007ce8:	e9 17 01 00 00       	jmp    81007e04 <__ssprint_r+0x204>
81007ced:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007cf0:	8b 45 0c             	mov    0xc(%ebp),%eax
81007cf3:	8b 40 10             	mov    0x10(%eax),%eax
81007cf6:	83 ec 04             	sub    $0x4,%esp
81007cf9:	52                   	push   %edx
81007cfa:	50                   	push   %eax
81007cfb:	ff 75 e4             	pushl  -0x1c(%ebp)
81007cfe:	e8 95 cd ff ff       	call   81004a98 <memcpy>
81007d03:	83 c4 10             	add    $0x10,%esp
81007d06:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d09:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007d0d:	66 25 7f fb          	and    $0xfb7f,%ax
81007d11:	0c 80                	or     $0x80,%al
81007d13:	89 c2                	mov    %eax,%edx
81007d15:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d18:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007d1c:	eb 45                	jmp    81007d63 <__ssprint_r+0x163>
81007d1e:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d21:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d24:	8b 40 10             	mov    0x10(%eax),%eax
81007d27:	83 ec 04             	sub    $0x4,%esp
81007d2a:	52                   	push   %edx
81007d2b:	50                   	push   %eax
81007d2c:	ff 75 08             	pushl  0x8(%ebp)
81007d2f:	e8 b6 db ff ff       	call   810058ea <_realloc_r>
81007d34:	83 c4 10             	add    $0x10,%esp
81007d37:	89 45 e4             	mov    %eax,-0x1c(%ebp)
81007d3a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)
81007d3e:	75 23                	jne    81007d63 <__ssprint_r+0x163>
81007d40:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d43:	8b 40 10             	mov    0x10(%eax),%eax
81007d46:	83 ec 08             	sub    $0x8,%esp
81007d49:	50                   	push   %eax
81007d4a:	ff 75 08             	pushl  0x8(%ebp)
81007d4d:	e8 27 a1 ff ff       	call   81001e79 <_free_r>
81007d52:	83 c4 10             	add    $0x10,%esp
81007d55:	8b 45 08             	mov    0x8(%ebp),%eax
81007d58:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007d5e:	e9 a1 00 00 00       	jmp    81007e04 <__ssprint_r+0x204>
81007d63:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d66:	8b 55 e4             	mov    -0x1c(%ebp),%edx
81007d69:	89 50 10             	mov    %edx,0x10(%eax)
81007d6c:	8b 55 dc             	mov    -0x24(%ebp),%edx
81007d6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007d72:	01 c2                	add    %eax,%edx
81007d74:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d77:	89 10                	mov    %edx,(%eax)
81007d79:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d7c:	8b 55 e0             	mov    -0x20(%ebp),%edx
81007d7f:	89 50 14             	mov    %edx,0x14(%eax)
81007d82:	89 f7                	mov    %esi,%edi
81007d84:	8b 45 e0             	mov    -0x20(%ebp),%eax
81007d87:	2b 45 dc             	sub    -0x24(%ebp),%eax
81007d8a:	89 c2                	mov    %eax,%edx
81007d8c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d8f:	89 50 08             	mov    %edx,0x8(%eax)
81007d92:	89 f8                	mov    %edi,%eax
81007d94:	39 c6                	cmp    %eax,%esi
81007d96:	73 02                	jae    81007d9a <__ssprint_r+0x19a>
81007d98:	89 f7                	mov    %esi,%edi
81007d9a:	89 fa                	mov    %edi,%edx
81007d9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007d9f:	8b 00                	mov    (%eax),%eax
81007da1:	83 ec 04             	sub    $0x4,%esp
81007da4:	52                   	push   %edx
81007da5:	ff 75 d4             	pushl  -0x2c(%ebp)
81007da8:	50                   	push   %eax
81007da9:	e8 32 cd ff ff       	call   81004ae0 <memmove>
81007dae:	83 c4 10             	add    $0x10,%esp
81007db1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007db4:	8b 40 08             	mov    0x8(%eax),%eax
81007db7:	29 f8                	sub    %edi,%eax
81007db9:	89 c2                	mov    %eax,%edx
81007dbb:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dbe:	89 50 08             	mov    %edx,0x8(%eax)
81007dc1:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dc4:	8b 00                	mov    (%eax),%eax
81007dc6:	89 fa                	mov    %edi,%edx
81007dc8:	01 c2                	add    %eax,%edx
81007dca:	8b 45 0c             	mov    0xc(%ebp),%eax
81007dcd:	89 10                	mov    %edx,(%eax)
81007dcf:	89 f7                	mov    %esi,%edi
81007dd1:	89 f8                	mov    %edi,%eax
81007dd3:	01 45 d4             	add    %eax,-0x2c(%ebp)
81007dd6:	89 f8                	mov    %edi,%eax
81007dd8:	29 c6                	sub    %eax,%esi
81007dda:	8b 43 08             	mov    0x8(%ebx),%eax
81007ddd:	89 fa                	mov    %edi,%edx
81007ddf:	29 d0                	sub    %edx,%eax
81007de1:	89 43 08             	mov    %eax,0x8(%ebx)
81007de4:	8b 43 08             	mov    0x8(%ebx),%eax
81007de7:	85 c0                	test   %eax,%eax
81007de9:	0f 85 57 fe ff ff    	jne    81007c46 <__ssprint_r+0x46>
81007def:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007df6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007dfd:	b8 00 00 00 00       	mov    $0x0,%eax
81007e02:	eb 26                	jmp    81007e2a <__ssprint_r+0x22a>
81007e04:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e07:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e0b:	83 c8 40             	or     $0x40,%eax
81007e0e:	89 c2                	mov    %eax,%edx
81007e10:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e13:	66 89 50 0c          	mov    %dx,0xc(%eax)
81007e17:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
81007e1e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
81007e25:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e2a:	8d 65 f4             	lea    -0xc(%ebp),%esp
81007e2d:	5b                   	pop    %ebx
81007e2e:	5e                   	pop    %esi
81007e2f:	5f                   	pop    %edi
81007e30:	5d                   	pop    %ebp
81007e31:	c3                   	ret    

81007e32 <_svfiprintf_r>:
81007e32:	55                   	push   %ebp
81007e33:	89 e5                	mov    %esp,%ebp
81007e35:	57                   	push   %edi
81007e36:	56                   	push   %esi
81007e37:	53                   	push   %ebx
81007e38:	81 ec 8c 00 00 00    	sub    $0x8c,%esp
81007e3e:	c7 45 e4 49 7a 00 81 	movl   $0x81007a49,-0x1c(%ebp)
81007e45:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e48:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81007e4c:	98                   	cwtl   
81007e4d:	25 80 00 00 00       	and    $0x80,%eax
81007e52:	85 c0                	test   %eax,%eax
81007e54:	74 50                	je     81007ea6 <_svfiprintf_r+0x74>
81007e56:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e59:	8b 40 10             	mov    0x10(%eax),%eax
81007e5c:	85 c0                	test   %eax,%eax
81007e5e:	75 46                	jne    81007ea6 <_svfiprintf_r+0x74>
81007e60:	83 ec 08             	sub    $0x8,%esp
81007e63:	6a 40                	push   $0x40
81007e65:	ff 75 08             	pushl  0x8(%ebp)
81007e68:	e8 21 c3 ff ff       	call   8100418e <_malloc_r>
81007e6d:	83 c4 10             	add    $0x10,%esp
81007e70:	8b 55 0c             	mov    0xc(%ebp),%edx
81007e73:	89 02                	mov    %eax,(%edx)
81007e75:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e78:	8b 10                	mov    (%eax),%edx
81007e7a:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e7d:	89 50 10             	mov    %edx,0x10(%eax)
81007e80:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e83:	8b 00                	mov    (%eax),%eax
81007e85:	85 c0                	test   %eax,%eax
81007e87:	75 13                	jne    81007e9c <_svfiprintf_r+0x6a>
81007e89:	8b 45 08             	mov    0x8(%ebp),%eax
81007e8c:	c7 00 0c 00 00 00    	movl   $0xc,(%eax)
81007e92:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81007e97:	e9 c8 02 00 00       	jmp    81008164 <_svfiprintf_r+0x332>
81007e9c:	8b 45 0c             	mov    0xc(%ebp),%eax
81007e9f:	c7 40 14 40 00 00 00 	movl   $0x40,0x14(%eax)
81007ea6:	8b 5d 10             	mov    0x10(%ebp),%ebx
81007ea9:	c7 45 98 00 00 00 00 	movl   $0x0,-0x68(%ebp)
81007eb0:	c6 45 9d 20          	movb   $0x20,-0x63(%ebp)
81007eb4:	c6 45 9e 30          	movb   $0x30,-0x62(%ebp)
81007eb8:	8b 45 14             	mov    0x14(%ebp),%eax
81007ebb:	89 45 80             	mov    %eax,-0x80(%ebp)
81007ebe:	89 de                	mov    %ebx,%esi
81007ec0:	eb 03                	jmp    81007ec5 <_svfiprintf_r+0x93>
81007ec2:	83 c3 01             	add    $0x1,%ebx
81007ec5:	0f b6 03             	movzbl (%ebx),%eax
81007ec8:	84 c0                	test   %al,%al
81007eca:	74 07                	je     81007ed3 <_svfiprintf_r+0xa1>
81007ecc:	0f b6 03             	movzbl (%ebx),%eax
81007ecf:	3c 25                	cmp    $0x25,%al
81007ed1:	75 ef                	jne    81007ec2 <_svfiprintf_r+0x90>
81007ed3:	89 d8                	mov    %ebx,%eax
81007ed5:	29 f0                	sub    %esi,%eax
81007ed7:	85 c0                	test   %eax,%eax
81007ed9:	74 2b                	je     81007f06 <_svfiprintf_r+0xd4>
81007edb:	89 85 74 ff ff ff    	mov    %eax,-0x8c(%ebp)
81007ee1:	50                   	push   %eax
81007ee2:	56                   	push   %esi
81007ee3:	ff 75 0c             	pushl  0xc(%ebp)
81007ee6:	ff 75 08             	pushl  0x8(%ebp)
81007ee9:	8b 45 e4             	mov    -0x1c(%ebp),%eax
81007eec:	ff d0                	call   *%eax
81007eee:	83 c4 10             	add    $0x10,%esp
81007ef1:	83 f8 ff             	cmp    $0xffffffff,%eax
81007ef4:	0f 84 4a 02 00 00    	je     81008144 <_svfiprintf_r+0x312>
81007efa:	8b 45 98             	mov    -0x68(%ebp),%eax
81007efd:	03 85 74 ff ff ff    	add    -0x8c(%ebp),%eax
81007f03:	89 45 98             	mov    %eax,-0x68(%ebp)
81007f06:	0f b6 03             	movzbl (%ebx),%eax
81007f09:	84 c0                	test   %al,%al
81007f0b:	0f 84 36 02 00 00    	je     81008147 <_svfiprintf_r+0x315>
81007f11:	83 c3 01             	add    $0x1,%ebx
81007f14:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%ebp)
81007f1b:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)
81007f22:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81007f29:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%ebp)
81007f30:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
81007f34:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)
81007f3b:	c7 45 e0 4c 8c 00 81 	movl   $0x81008c4c,-0x20(%ebp)
81007f42:	eb 1b                	jmp    81007f5f <_svfiprintf_r+0x12d>
81007f44:	8b 55 84             	mov    -0x7c(%ebp),%edx
81007f47:	89 f0                	mov    %esi,%eax
81007f49:	2b 45 e0             	sub    -0x20(%ebp),%eax
81007f4c:	be 01 00 00 00       	mov    $0x1,%esi
81007f51:	89 c1                	mov    %eax,%ecx
81007f53:	d3 e6                	shl    %cl,%esi
81007f55:	89 f0                	mov    %esi,%eax
81007f57:	09 d0                	or     %edx,%eax
81007f59:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007f5c:	83 c3 01             	add    $0x1,%ebx
81007f5f:	0f b6 03             	movzbl (%ebx),%eax
81007f62:	0f be c0             	movsbl %al,%eax
81007f65:	83 ec 04             	sub    $0x4,%esp
81007f68:	6a 05                	push   $0x5
81007f6a:	50                   	push   %eax
81007f6b:	ff 75 e0             	pushl  -0x20(%ebp)
81007f6e:	e8 3d ca ff ff       	call   810049b0 <memchr>
81007f73:	83 c4 10             	add    $0x10,%esp
81007f76:	89 c6                	mov    %eax,%esi
81007f78:	85 f6                	test   %esi,%esi
81007f7a:	75 c8                	jne    81007f44 <_svfiprintf_r+0x112>
81007f7c:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f7f:	83 e0 10             	and    $0x10,%eax
81007f82:	85 c0                	test   %eax,%eax
81007f84:	74 04                	je     81007f8a <_svfiprintf_r+0x158>
81007f86:	c6 45 c7 20          	movb   $0x20,-0x39(%ebp)
81007f8a:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007f8d:	83 e0 08             	and    $0x8,%eax
81007f90:	85 c0                	test   %eax,%eax
81007f92:	74 04                	je     81007f98 <_svfiprintf_r+0x166>
81007f94:	c6 45 c7 2b          	movb   $0x2b,-0x39(%ebp)
81007f98:	0f b6 03             	movzbl (%ebx),%eax
81007f9b:	3c 2a                	cmp    $0x2a,%al
81007f9d:	75 4a                	jne    81007fe9 <_svfiprintf_r+0x1b7>
81007f9f:	8b 45 80             	mov    -0x80(%ebp),%eax
81007fa2:	8d 50 04             	lea    0x4(%eax),%edx
81007fa5:	89 55 80             	mov    %edx,-0x80(%ebp)
81007fa8:	8b 00                	mov    (%eax),%eax
81007faa:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fad:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fb0:	85 c0                	test   %eax,%eax
81007fb2:	79 11                	jns    81007fc5 <_svfiprintf_r+0x193>
81007fb4:	8b 45 90             	mov    -0x70(%ebp),%eax
81007fb7:	f7 d8                	neg    %eax
81007fb9:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fbc:	8b 45 84             	mov    -0x7c(%ebp),%eax
81007fbf:	83 c8 02             	or     $0x2,%eax
81007fc2:	89 45 84             	mov    %eax,-0x7c(%ebp)
81007fc5:	83 c3 01             	add    $0x1,%ebx
81007fc8:	eb 2d                	jmp    81007ff7 <_svfiprintf_r+0x1c5>
81007fca:	8b 55 90             	mov    -0x70(%ebp),%edx
81007fcd:	89 d0                	mov    %edx,%eax
81007fcf:	c1 e0 02             	shl    $0x2,%eax
81007fd2:	01 d0                	add    %edx,%eax
81007fd4:	01 c0                	add    %eax,%eax
81007fd6:	89 c2                	mov    %eax,%edx
81007fd8:	0f b6 03             	movzbl (%ebx),%eax
81007fdb:	0f be c0             	movsbl %al,%eax
81007fde:	83 e8 30             	sub    $0x30,%eax
81007fe1:	01 d0                	add    %edx,%eax
81007fe3:	89 45 90             	mov    %eax,-0x70(%ebp)
81007fe6:	83 c3 01             	add    $0x1,%ebx
81007fe9:	0f b6 03             	movzbl (%ebx),%eax
81007fec:	0f be c0             	movsbl %al,%eax
81007fef:	83 e8 30             	sub    $0x30,%eax
81007ff2:	83 f8 09             	cmp    $0x9,%eax
81007ff5:	76 d3                	jbe    81007fca <_svfiprintf_r+0x198>
81007ff7:	0f b6 03             	movzbl (%ebx),%eax
81007ffa:	3c 2e                	cmp    $0x2e,%al
81007ffc:	75 61                	jne    8100805f <_svfiprintf_r+0x22d>
81007ffe:	83 c3 01             	add    $0x1,%ebx
81008001:	0f b6 03             	movzbl (%ebx),%eax
81008004:	3c 2a                	cmp    $0x2a,%al
81008006:	75 21                	jne    81008029 <_svfiprintf_r+0x1f7>
81008008:	83 c3 01             	add    $0x1,%ebx
8100800b:	8b 45 80             	mov    -0x80(%ebp),%eax
8100800e:	8d 50 04             	lea    0x4(%eax),%edx
81008011:	89 55 80             	mov    %edx,-0x80(%ebp)
81008014:	8b 00                	mov    (%eax),%eax
81008016:	89 45 88             	mov    %eax,-0x78(%ebp)
81008019:	8b 45 88             	mov    -0x78(%ebp),%eax
8100801c:	85 c0                	test   %eax,%eax
8100801e:	79 3f                	jns    8100805f <_svfiprintf_r+0x22d>
81008020:	c7 45 88 ff ff ff ff 	movl   $0xffffffff,-0x78(%ebp)
81008027:	eb 36                	jmp    8100805f <_svfiprintf_r+0x22d>
81008029:	c7 45 88 00 00 00 00 	movl   $0x0,-0x78(%ebp)
81008030:	eb 1f                	jmp    81008051 <_svfiprintf_r+0x21f>
81008032:	8b 55 88             	mov    -0x78(%ebp),%edx
81008035:	89 d0                	mov    %edx,%eax
81008037:	c1 e0 02             	shl    $0x2,%eax
8100803a:	01 d0                	add    %edx,%eax
8100803c:	01 c0                	add    %eax,%eax
8100803e:	89 c2                	mov    %eax,%edx
81008040:	0f b6 03             	movzbl (%ebx),%eax
81008043:	0f be c0             	movsbl %al,%eax
81008046:	83 e8 30             	sub    $0x30,%eax
81008049:	01 d0                	add    %edx,%eax
8100804b:	89 45 88             	mov    %eax,-0x78(%ebp)
8100804e:	83 c3 01             	add    $0x1,%ebx
81008051:	0f b6 03             	movzbl (%ebx),%eax
81008054:	0f be c0             	movsbl %al,%eax
81008057:	83 e8 30             	sub    $0x30,%eax
8100805a:	83 f8 09             	cmp    $0x9,%eax
8100805d:	76 d3                	jbe    81008032 <_svfiprintf_r+0x200>
8100805f:	c7 45 e0 52 8c 00 81 	movl   $0x81008c52,-0x20(%ebp)
81008066:	0f b6 03             	movzbl (%ebx),%eax
81008069:	0f be c0             	movsbl %al,%eax
8100806c:	83 ec 04             	sub    $0x4,%esp
8100806f:	6a 03                	push   $0x3
81008071:	50                   	push   %eax
81008072:	ff 75 e0             	pushl  -0x20(%ebp)
81008075:	e8 36 c9 ff ff       	call   810049b0 <memchr>
8100807a:	83 c4 10             	add    $0x10,%esp
8100807d:	89 c6                	mov    %eax,%esi
8100807f:	85 f6                	test   %esi,%esi
81008081:	74 1b                	je     8100809e <_svfiprintf_r+0x26c>
81008083:	8b 55 84             	mov    -0x7c(%ebp),%edx
81008086:	89 f0                	mov    %esi,%eax
81008088:	2b 45 e0             	sub    -0x20(%ebp),%eax
8100808b:	be 40 00 00 00       	mov    $0x40,%esi
81008090:	89 c1                	mov    %eax,%ecx
81008092:	d3 e6                	shl    %cl,%esi
81008094:	89 f0                	mov    %esi,%eax
81008096:	09 d0                	or     %edx,%eax
81008098:	89 45 84             	mov    %eax,-0x7c(%ebp)
8100809b:	83 c3 01             	add    $0x1,%ebx
8100809e:	89 d8                	mov    %ebx,%eax
810080a0:	8d 58 01             	lea    0x1(%eax),%ebx
810080a3:	0f b6 00             	movzbl (%eax),%eax
810080a6:	88 45 9c             	mov    %al,-0x64(%ebp)
810080a9:	0f b6 45 9c          	movzbl -0x64(%ebp),%eax
810080ad:	0f be c0             	movsbl %al,%eax
810080b0:	83 ec 04             	sub    $0x4,%esp
810080b3:	6a 06                	push   $0x6
810080b5:	50                   	push   %eax
810080b6:	68 56 8c 00 81       	push   $0x81008c56
810080bb:	e8 f0 c8 ff ff       	call   810049b0 <memchr>
810080c0:	83 c4 10             	add    $0x10,%esp
810080c3:	89 c6                	mov    %eax,%esi
810080c5:	85 f6                	test   %esi,%esi
810080c7:	74 4b                	je     81008114 <_svfiprintf_r+0x2e2>
810080c9:	b8 00 00 00 00       	mov    $0x0,%eax
810080ce:	85 c0                	test   %eax,%eax
810080d0:	75 22                	jne    810080f4 <_svfiprintf_r+0x2c2>
810080d2:	8b 45 84             	mov    -0x7c(%ebp),%eax
810080d5:	25 00 01 00 00       	and    $0x100,%eax
810080da:	85 c0                	test   %eax,%eax
810080dc:	74 0b                	je     810080e9 <_svfiprintf_r+0x2b7>
810080de:	8b 45 80             	mov    -0x80(%ebp),%eax
810080e1:	83 c0 0c             	add    $0xc,%eax
810080e4:	89 45 80             	mov    %eax,-0x80(%ebp)
810080e7:	eb 49                	jmp    81008132 <_svfiprintf_r+0x300>
810080e9:	8b 45 80             	mov    -0x80(%ebp),%eax
810080ec:	83 c0 08             	add    $0x8,%eax
810080ef:	89 45 80             	mov    %eax,-0x80(%ebp)
810080f2:	eb 3e                	jmp    81008132 <_svfiprintf_r+0x300>
810080f4:	83 ec 0c             	sub    $0xc,%esp
810080f7:	8d 45 80             	lea    -0x80(%ebp),%eax
810080fa:	50                   	push   %eax
810080fb:	ff 75 e4             	pushl  -0x1c(%ebp)
810080fe:	ff 75 0c             	pushl  0xc(%ebp)
81008101:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008104:	50                   	push   %eax
81008105:	ff 75 08             	pushl  0x8(%ebp)
81008108:	e8 f3 7e ff 7e       	call   0 <show_promot-0x81000000>
8100810d:	83 c4 20             	add    $0x20,%esp
81008110:	89 c7                	mov    %eax,%edi
81008112:	eb 1e                	jmp    81008132 <_svfiprintf_r+0x300>
81008114:	83 ec 0c             	sub    $0xc,%esp
81008117:	8d 45 80             	lea    -0x80(%ebp),%eax
8100811a:	50                   	push   %eax
8100811b:	ff 75 e4             	pushl  -0x1c(%ebp)
8100811e:	ff 75 0c             	pushl  0xc(%ebp)
81008121:	8d 45 84             	lea    -0x7c(%ebp),%eax
81008124:	50                   	push   %eax
81008125:	ff 75 08             	pushl  0x8(%ebp)
81008128:	e8 d4 d1 ff ff       	call   81005301 <_printf_i>
8100812d:	83 c4 20             	add    $0x20,%esp
81008130:	89 c7                	mov    %eax,%edi
81008132:	83 ff ff             	cmp    $0xffffffff,%edi
81008135:	74 13                	je     8100814a <_svfiprintf_r+0x318>
81008137:	8b 45 98             	mov    -0x68(%ebp),%eax
8100813a:	01 f8                	add    %edi,%eax
8100813c:	89 45 98             	mov    %eax,-0x68(%ebp)
8100813f:	e9 7a fd ff ff       	jmp    81007ebe <_svfiprintf_r+0x8c>
81008144:	90                   	nop
81008145:	eb 04                	jmp    8100814b <_svfiprintf_r+0x319>
81008147:	90                   	nop
81008148:	eb 01                	jmp    8100814b <_svfiprintf_r+0x319>
8100814a:	90                   	nop
8100814b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100814e:	0f b7 40 0c          	movzwl 0xc(%eax),%eax
81008152:	98                   	cwtl   
81008153:	83 e0 40             	and    $0x40,%eax
81008156:	85 c0                	test   %eax,%eax
81008158:	75 05                	jne    8100815f <_svfiprintf_r+0x32d>
8100815a:	8b 45 98             	mov    -0x68(%ebp),%eax
8100815d:	eb 05                	jmp    81008164 <_svfiprintf_r+0x332>
8100815f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
81008164:	8d 65 f4             	lea    -0xc(%ebp),%esp
81008167:	5b                   	pop    %ebx
81008168:	5e                   	pop    %esi
81008169:	5f                   	pop    %edi
8100816a:	5d                   	pop    %ebp
8100816b:	c3                   	ret    

8100816c <__sputc_r>:
8100816c:	55                   	push   %ebp
8100816d:	89 e5                	mov    %esp,%ebp
8100816f:	83 ec 08             	sub    $0x8,%esp
81008172:	8b 45 10             	mov    0x10(%ebp),%eax
81008175:	8b 40 08             	mov    0x8(%eax),%eax
81008178:	8d 50 ff             	lea    -0x1(%eax),%edx
8100817b:	8b 45 10             	mov    0x10(%ebp),%eax
8100817e:	89 50 08             	mov    %edx,0x8(%eax)
81008181:	8b 45 10             	mov    0x10(%ebp),%eax
81008184:	8b 40 08             	mov    0x8(%eax),%eax
81008187:	85 c0                	test   %eax,%eax
81008189:	79 17                	jns    810081a2 <__sputc_r+0x36>
8100818b:	8b 45 10             	mov    0x10(%ebp),%eax
8100818e:	8b 50 08             	mov    0x8(%eax),%edx
81008191:	8b 45 10             	mov    0x10(%ebp),%eax
81008194:	8b 40 18             	mov    0x18(%eax),%eax
81008197:	39 c2                	cmp    %eax,%edx
81008199:	7c 21                	jl     810081bc <__sputc_r+0x50>
8100819b:	8b 45 0c             	mov    0xc(%ebp),%eax
8100819e:	3c 0a                	cmp    $0xa,%al
810081a0:	74 1a                	je     810081bc <__sputc_r+0x50>
810081a2:	8b 45 10             	mov    0x10(%ebp),%eax
810081a5:	8b 00                	mov    (%eax),%eax
810081a7:	8d 48 01             	lea    0x1(%eax),%ecx
810081aa:	8b 55 10             	mov    0x10(%ebp),%edx
810081ad:	89 0a                	mov    %ecx,(%edx)
810081af:	8b 55 0c             	mov    0xc(%ebp),%edx
810081b2:	88 10                	mov    %dl,(%eax)
810081b4:	0f b6 00             	movzbl (%eax),%eax
810081b7:	0f b6 c0             	movzbl %al,%eax
810081ba:	eb 14                	jmp    810081d0 <__sputc_r+0x64>
810081bc:	83 ec 04             	sub    $0x4,%esp
810081bf:	ff 75 10             	pushl  0x10(%ebp)
810081c2:	ff 75 0c             	pushl  0xc(%ebp)
810081c5:	ff 75 08             	pushl  0x8(%ebp)
810081c8:	e8 3a ee ff ff       	call   81007007 <__swbuf_r>
810081cd:	83 c4 10             	add    $0x10,%esp
810081d0:	c9                   	leave  
810081d1:	c3                   	ret    

810081d2 <_putc_r>:
810081d2:	55                   	push   %ebp
810081d3:	89 e5                	mov    %esp,%ebp
810081d5:	53                   	push   %ebx
810081d6:	83 ec 14             	sub    $0x14,%esp
810081d9:	8b 5d 10             	mov    0x10(%ebp),%ebx
810081dc:	8b 45 08             	mov    0x8(%ebp),%eax
810081df:	89 45 f4             	mov    %eax,-0xc(%ebp)
810081e2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
810081e6:	74 18                	je     81008200 <_putc_r+0x2e>
810081e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
810081eb:	8b 40 38             	mov    0x38(%eax),%eax
810081ee:	85 c0                	test   %eax,%eax
810081f0:	75 0e                	jne    81008200 <_putc_r+0x2e>
810081f2:	83 ec 0c             	sub    $0xc,%esp
810081f5:	ff 75 f4             	pushl  -0xc(%ebp)
810081f8:	e8 c7 96 ff ff       	call   810018c4 <__sinit>
810081fd:	83 c4 10             	add    $0x10,%esp
81008200:	83 ec 04             	sub    $0x4,%esp
81008203:	53                   	push   %ebx
81008204:	ff 75 0c             	pushl  0xc(%ebp)
81008207:	ff 75 08             	pushl  0x8(%ebp)
8100820a:	e8 5d ff ff ff       	call   8100816c <__sputc_r>
8100820f:	83 c4 10             	add    $0x10,%esp
81008212:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008215:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008218:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100821b:	c9                   	leave  
8100821c:	c3                   	ret    

8100821d <putc>:
8100821d:	55                   	push   %ebp
8100821e:	89 e5                	mov    %esp,%ebp
81008220:	53                   	push   %ebx
81008221:	83 ec 14             	sub    $0x14,%esp
81008224:	8b 5d 0c             	mov    0xc(%ebp),%ebx
81008227:	a1 a4 90 00 81       	mov    0x810090a4,%eax
8100822c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100822f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008232:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008235:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
81008239:	74 18                	je     81008253 <putc+0x36>
8100823b:	8b 45 f0             	mov    -0x10(%ebp),%eax
8100823e:	8b 40 38             	mov    0x38(%eax),%eax
81008241:	85 c0                	test   %eax,%eax
81008243:	75 0e                	jne    81008253 <putc+0x36>
81008245:	83 ec 0c             	sub    $0xc,%esp
81008248:	ff 75 f0             	pushl  -0x10(%ebp)
8100824b:	e8 74 96 ff ff       	call   810018c4 <__sinit>
81008250:	83 c4 10             	add    $0x10,%esp
81008253:	83 ec 04             	sub    $0x4,%esp
81008256:	53                   	push   %ebx
81008257:	ff 75 08             	pushl  0x8(%ebp)
8100825a:	ff 75 f4             	pushl  -0xc(%ebp)
8100825d:	e8 0a ff ff ff       	call   8100816c <__sputc_r>
81008262:	83 c4 10             	add    $0x10,%esp
81008265:	89 45 ec             	mov    %eax,-0x14(%ebp)
81008268:	8b 45 ec             	mov    -0x14(%ebp),%eax
8100826b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
8100826e:	c9                   	leave  
8100826f:	c3                   	ret    

81008270 <_read_r>:
81008270:	55                   	push   %ebp
81008271:	89 e5                	mov    %esp,%ebp
81008273:	83 ec 18             	sub    $0x18,%esp
81008276:	c7 05 ec 9b 00 81 00 	movl   $0x0,0x81009bec
8100827d:	00 00 00 
81008280:	83 ec 04             	sub    $0x4,%esp
81008283:	ff 75 14             	pushl  0x14(%ebp)
81008286:	ff 75 10             	pushl  0x10(%ebp)
81008289:	ff 75 0c             	pushl  0xc(%ebp)
8100828c:	e8 1f 8a ff ff       	call   81000cb0 <read>
81008291:	83 c4 10             	add    $0x10,%esp
81008294:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008297:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
8100829b:	75 14                	jne    810082b1 <_read_r+0x41>
8100829d:	a1 ec 9b 00 81       	mov    0x81009bec,%eax
810082a2:	85 c0                	test   %eax,%eax
810082a4:	74 0b                	je     810082b1 <_read_r+0x41>
810082a6:	8b 15 ec 9b 00 81    	mov    0x81009bec,%edx
810082ac:	8b 45 08             	mov    0x8(%ebp),%eax
810082af:	89 10                	mov    %edx,(%eax)
810082b1:	8b 45 f4             	mov    -0xc(%ebp),%eax
810082b4:	c9                   	leave  
810082b5:	c3                   	ret    

810082b6 <strncmp>:
810082b6:	55                   	push   %ebp
810082b7:	89 e5                	mov    %esp,%ebp
810082b9:	83 ec 10             	sub    $0x10,%esp
810082bc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082c0:	75 0a                	jne    810082cc <strncmp+0x16>
810082c2:	b8 00 00 00 00       	mov    $0x0,%eax
810082c7:	e9 cb 00 00 00       	jmp    81008397 <strncmp+0xe1>
810082cc:	8b 55 08             	mov    0x8(%ebp),%edx
810082cf:	8b 45 0c             	mov    0xc(%ebp),%eax
810082d2:	09 d0                	or     %edx,%eax
810082d4:	83 e0 03             	and    $0x3,%eax
810082d7:	85 c0                	test   %eax,%eax
810082d9:	0f 85 85 00 00 00    	jne    81008364 <strncmp+0xae>
810082df:	8b 45 08             	mov    0x8(%ebp),%eax
810082e2:	89 45 fc             	mov    %eax,-0x4(%ebp)
810082e5:	8b 45 0c             	mov    0xc(%ebp),%eax
810082e8:	89 45 f8             	mov    %eax,-0x8(%ebp)
810082eb:	eb 36                	jmp    81008323 <strncmp+0x6d>
810082ed:	83 6d 10 04          	subl   $0x4,0x10(%ebp)
810082f1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
810082f5:	74 1d                	je     81008314 <strncmp+0x5e>
810082f7:	8b 45 fc             	mov    -0x4(%ebp),%eax
810082fa:	8b 00                	mov    (%eax),%eax
810082fc:	8d 90 ff fe fe fe    	lea    -0x1010101(%eax),%edx
81008302:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008305:	8b 00                	mov    (%eax),%eax
81008307:	f7 d0                	not    %eax
81008309:	21 d0                	and    %edx,%eax
8100830b:	25 80 80 80 80       	and    $0x80808080,%eax
81008310:	85 c0                	test   %eax,%eax
81008312:	74 07                	je     8100831b <strncmp+0x65>
81008314:	b8 00 00 00 00       	mov    $0x0,%eax
81008319:	eb 7c                	jmp    81008397 <strncmp+0xe1>
8100831b:	83 45 fc 04          	addl   $0x4,-0x4(%ebp)
8100831f:	83 45 f8 04          	addl   $0x4,-0x8(%ebp)
81008323:	83 7d 10 03          	cmpl   $0x3,0x10(%ebp)
81008327:	76 0e                	jbe    81008337 <strncmp+0x81>
81008329:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100832c:	8b 10                	mov    (%eax),%edx
8100832e:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008331:	8b 00                	mov    (%eax),%eax
81008333:	39 c2                	cmp    %eax,%edx
81008335:	74 b6                	je     810082ed <strncmp+0x37>
81008337:	8b 45 fc             	mov    -0x4(%ebp),%eax
8100833a:	89 45 08             	mov    %eax,0x8(%ebp)
8100833d:	8b 45 f8             	mov    -0x8(%ebp),%eax
81008340:	89 45 0c             	mov    %eax,0xc(%ebp)
81008343:	eb 1f                	jmp    81008364 <strncmp+0xae>
81008345:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
81008349:	74 0a                	je     81008355 <strncmp+0x9f>
8100834b:	8b 45 08             	mov    0x8(%ebp),%eax
8100834e:	0f b6 00             	movzbl (%eax),%eax
81008351:	84 c0                	test   %al,%al
81008353:	75 07                	jne    8100835c <strncmp+0xa6>
81008355:	b8 00 00 00 00       	mov    $0x0,%eax
8100835a:	eb 3b                	jmp    81008397 <strncmp+0xe1>
8100835c:	83 45 08 01          	addl   $0x1,0x8(%ebp)
81008360:	83 45 0c 01          	addl   $0x1,0xc(%ebp)
81008364:	8b 45 10             	mov    0x10(%ebp),%eax
81008367:	8d 50 ff             	lea    -0x1(%eax),%edx
8100836a:	89 55 10             	mov    %edx,0x10(%ebp)
8100836d:	85 c0                	test   %eax,%eax
8100836f:	74 10                	je     81008381 <strncmp+0xcb>
81008371:	8b 45 08             	mov    0x8(%ebp),%eax
81008374:	0f b6 10             	movzbl (%eax),%edx
81008377:	8b 45 0c             	mov    0xc(%ebp),%eax
8100837a:	0f b6 00             	movzbl (%eax),%eax
8100837d:	38 c2                	cmp    %al,%dl
8100837f:	74 c4                	je     81008345 <strncmp+0x8f>
81008381:	8b 45 08             	mov    0x8(%ebp),%eax
81008384:	0f b6 00             	movzbl (%eax),%eax
81008387:	0f b6 d0             	movzbl %al,%edx
8100838a:	8b 45 0c             	mov    0xc(%ebp),%eax
8100838d:	0f b6 00             	movzbl (%eax),%eax
81008390:	0f b6 c8             	movzbl %al,%ecx
81008393:	89 d0                	mov    %edx,%eax
81008395:	29 c8                	sub    %ecx,%eax
81008397:	c9                   	leave  
81008398:	c3                   	ret    

81008399 <__get_global_locale>:
81008399:	55                   	push   %ebp
8100839a:	89 e5                	mov    %esp,%ebp
8100839c:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810083a1:	5d                   	pop    %ebp
810083a2:	c3                   	ret    

810083a3 <__get_current_locale>:
810083a3:	55                   	push   %ebp
810083a4:	89 e5                	mov    %esp,%ebp
810083a6:	e8 ee ff ff ff       	call   81008399 <__get_global_locale>
810083ab:	5d                   	pop    %ebp
810083ac:	c3                   	ret    

810083ad <_wcrtomb_r>:
810083ad:	55                   	push   %ebp
810083ae:	89 e5                	mov    %esp,%ebp
810083b0:	83 ec 18             	sub    $0x18,%esp
810083b3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
810083ba:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810083be:	75 21                	jne    810083e1 <_wcrtomb_r+0x34>
810083c0:	e8 de ff ff ff       	call   810083a3 <__get_current_locale>
810083c5:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083cb:	ff 75 14             	pushl  0x14(%ebp)
810083ce:	6a 00                	push   $0x0
810083d0:	8d 55 ea             	lea    -0x16(%ebp),%edx
810083d3:	52                   	push   %edx
810083d4:	ff 75 08             	pushl  0x8(%ebp)
810083d7:	ff d0                	call   *%eax
810083d9:	83 c4 10             	add    $0x10,%esp
810083dc:	89 45 f4             	mov    %eax,-0xc(%ebp)
810083df:	eb 1f                	jmp    81008400 <_wcrtomb_r+0x53>
810083e1:	e8 bd ff ff ff       	call   810083a3 <__get_current_locale>
810083e6:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810083ec:	ff 75 14             	pushl  0x14(%ebp)
810083ef:	ff 75 10             	pushl  0x10(%ebp)
810083f2:	ff 75 0c             	pushl  0xc(%ebp)
810083f5:	ff 75 08             	pushl  0x8(%ebp)
810083f8:	ff d0                	call   *%eax
810083fa:	83 c4 10             	add    $0x10,%esp
810083fd:	89 45 f4             	mov    %eax,-0xc(%ebp)
81008400:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008404:	75 19                	jne    8100841f <_wcrtomb_r+0x72>
81008406:	8b 45 14             	mov    0x14(%ebp),%eax
81008409:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100840f:	8b 45 08             	mov    0x8(%ebp),%eax
81008412:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008418:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100841d:	eb 03                	jmp    81008422 <_wcrtomb_r+0x75>
8100841f:	8b 45 f4             	mov    -0xc(%ebp),%eax
81008422:	c9                   	leave  
81008423:	c3                   	ret    

81008424 <wcrtomb>:
81008424:	55                   	push   %ebp
81008425:	89 e5                	mov    %esp,%ebp
81008427:	83 ec 28             	sub    $0x28,%esp
8100842a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
81008431:	a1 a4 90 00 81       	mov    0x810090a4,%eax
81008436:	89 45 f0             	mov    %eax,-0x10(%ebp)
81008439:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
8100843d:	75 21                	jne    81008460 <wcrtomb+0x3c>
8100843f:	e8 5f ff ff ff       	call   810083a3 <__get_current_locale>
81008444:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100844a:	ff 75 10             	pushl  0x10(%ebp)
8100844d:	6a 00                	push   $0x0
8100844f:	8d 55 e6             	lea    -0x1a(%ebp),%edx
81008452:	52                   	push   %edx
81008453:	ff 75 f0             	pushl  -0x10(%ebp)
81008456:	ff d0                	call   *%eax
81008458:	83 c4 10             	add    $0x10,%esp
8100845b:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100845e:	eb 1f                	jmp    8100847f <wcrtomb+0x5b>
81008460:	e8 3e ff ff ff       	call   810083a3 <__get_current_locale>
81008465:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
8100846b:	ff 75 10             	pushl  0x10(%ebp)
8100846e:	ff 75 0c             	pushl  0xc(%ebp)
81008471:	ff 75 08             	pushl  0x8(%ebp)
81008474:	ff 75 f0             	pushl  -0x10(%ebp)
81008477:	ff d0                	call   *%eax
81008479:	83 c4 10             	add    $0x10,%esp
8100847c:	89 45 f4             	mov    %eax,-0xc(%ebp)
8100847f:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)
81008483:	75 19                	jne    8100849e <wcrtomb+0x7a>
81008485:	8b 45 10             	mov    0x10(%ebp),%eax
81008488:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
8100848e:	8b 45 f0             	mov    -0x10(%ebp),%eax
81008491:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008497:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100849c:	eb 03                	jmp    810084a1 <wcrtomb+0x7d>
8100849e:	8b 45 f4             	mov    -0xc(%ebp),%eax
810084a1:	c9                   	leave  
810084a2:	c3                   	ret    

810084a3 <__get_global_locale>:
810084a3:	55                   	push   %ebp
810084a4:	89 e5                	mov    %esp,%ebp
810084a6:	b8 e0 94 00 81       	mov    $0x810094e0,%eax
810084ab:	5d                   	pop    %ebp
810084ac:	c3                   	ret    

810084ad <__get_current_locale>:
810084ad:	55                   	push   %ebp
810084ae:	89 e5                	mov    %esp,%ebp
810084b0:	e8 ee ff ff ff       	call   810084a3 <__get_global_locale>
810084b5:	5d                   	pop    %ebp
810084b6:	c3                   	ret    

810084b7 <_wctomb_r>:
810084b7:	55                   	push   %ebp
810084b8:	89 e5                	mov    %esp,%ebp
810084ba:	83 ec 08             	sub    $0x8,%esp
810084bd:	e8 eb ff ff ff       	call   810084ad <__get_current_locale>
810084c2:	8b 80 e0 00 00 00    	mov    0xe0(%eax),%eax
810084c8:	ff 75 14             	pushl  0x14(%ebp)
810084cb:	ff 75 10             	pushl  0x10(%ebp)
810084ce:	ff 75 0c             	pushl  0xc(%ebp)
810084d1:	ff 75 08             	pushl  0x8(%ebp)
810084d4:	ff d0                	call   *%eax
810084d6:	83 c4 10             	add    $0x10,%esp
810084d9:	c9                   	leave  
810084da:	c3                   	ret    

810084db <__ascii_wctomb>:
810084db:	55                   	push   %ebp
810084dc:	89 e5                	mov    %esp,%ebp
810084de:	83 ec 10             	sub    $0x10,%esp
810084e1:	8b 45 10             	mov    0x10(%ebp),%eax
810084e4:	89 45 fc             	mov    %eax,-0x4(%ebp)
810084e7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)
810084eb:	75 07                	jne    810084f4 <__ascii_wctomb+0x19>
810084ed:	b8 00 00 00 00       	mov    $0x0,%eax
810084f2:	eb 28                	jmp    8100851c <__ascii_wctomb+0x41>
810084f4:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)
810084fb:	76 10                	jbe    8100850d <__ascii_wctomb+0x32>
810084fd:	8b 45 08             	mov    0x8(%ebp),%eax
81008500:	c7 00 8a 00 00 00    	movl   $0x8a,(%eax)
81008506:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
8100850b:	eb 0f                	jmp    8100851c <__ascii_wctomb+0x41>
8100850d:	8b 45 fc             	mov    -0x4(%ebp),%eax
81008510:	89 c2                	mov    %eax,%edx
81008512:	8b 45 0c             	mov    0xc(%ebp),%eax
81008515:	88 10                	mov    %dl,(%eax)
81008517:	b8 01 00 00 00       	mov    $0x1,%eax
8100851c:	c9                   	leave  
8100851d:	c3                   	ret    

8100851e <__env_lock>:
8100851e:	55                   	push   %ebp
8100851f:	89 e5                	mov    %esp,%ebp
81008521:	90                   	nop
81008522:	5d                   	pop    %ebp
81008523:	c3                   	ret    

81008524 <__env_unlock>:
81008524:	55                   	push   %ebp
81008525:	89 e5                	mov    %esp,%ebp
81008527:	90                   	nop
81008528:	5d                   	pop    %ebp
81008529:	c3                   	ret    
